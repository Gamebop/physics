/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["PhysicsComponents"] = factory();
	else
		root["PhysicsComponents"] = factory();
})(self, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/backends/jolt/backend.mjs":
/*!***************************************!*\
  !*** ./src/backends/jolt/backend.mjs ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JoltBackend: () => (/* binding */ JoltBackend)\n/* harmony export */ });\n/* harmony import */ var jolt_physics_package_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jolt-physics/package.json */ \"./node_modules/jolt-physics/package.json\");\n/* harmony import */ var _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../physics/components/jolt/constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n/* harmony import */ var _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../physics/debug.mjs */ \"./src/physics/debug.mjs\");\n/* harmony import */ var _physics_math_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../physics/math.mjs */ \"./src/physics/math.mjs\");\n/* harmony import */ var _commands_buffer_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./commands-buffer.mjs */ \"./src/backends/jolt/commands-buffer.mjs\");\n/* harmony import */ var _operators_cleaner_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./operators/cleaner.mjs */ \"./src/backends/jolt/operators/cleaner.mjs\");\n/* harmony import */ var _operators_creator_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operators/creator.mjs */ \"./src/backends/jolt/operators/creator.mjs\");\n/* harmony import */ var _operators_drawer_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./operators/drawer.mjs */ \"./src/backends/jolt/operators/drawer.mjs\");\n/* harmony import */ var _operators_listener_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./operators/listener.mjs */ \"./src/backends/jolt/operators/listener.mjs\");\n/* harmony import */ var _operators_modifier_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./operators/modifier.mjs */ \"./src/backends/jolt/operators/modifier.mjs\");\n/* harmony import */ var _operators_querier_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./operators/querier.mjs */ \"./src/backends/jolt/operators/querier.mjs\");\n/* harmony import */ var _operators_tracker_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./operators/tracker.mjs */ \"./src/backends/jolt/operators/tracker.mjs\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass JoltBackend {\r\n    constructor(messenger, data) {\r\n        // // TODO\r\n        // // add webworker\r\n        // if (!window || !window.Jolt) return;\r\n\r\n        const config = {\r\n            // Physics Settings\r\n            // https://jrouwe.github.io/JoltPhysics/struct_physics_settings.html\r\n            baumgarte: 0.2,\r\n            bodyPairCacheCosMaxDeltaRotationDiv2: 0.9998476951563912,\r\n            bodyPairCacheMaxDeltaPositionSq: Math.sqrt(0.001),\r\n            contactNormalCosMaxDeltaRotation: 0.9961946980917455,\r\n            contactPointPreserveLambdaMaxDistSq: Math.sqrt(0.01),\r\n            deterministicSimulation: true,\r\n            linearCastMaxPenetration: 0.25,\r\n            linearCastThreshold: 0.75,\r\n            manifoldToleranceSq: 1.0e-6,\r\n            maxInFlightBodyPairs: 16384,\r\n            maxPenetrationDistance: 0.2,\r\n            minVelocityForRestitution: 1,\r\n            numPositionSteps: 2,\r\n            numVelocitySteps: 10,\r\n            penetrationSlop: 0.02,\r\n            pointVelocitySleepThreshold: 0.03,\r\n            speculativeContactDistance: 0.02,\r\n            stepListenerBatchesPerJob: 1,\r\n            stepListenersBatchSize: 8,\r\n            timeBeforeSleep: 0.5,\r\n            // for debugging\r\n            constraintWarmStart: true,\r\n            useBodyPairContactCache: true,\r\n            useManifoldReduction: true,\r\n            useLargeIslandSplitter: true,\r\n            allowSleeping: true,\r\n            checkActiveEdges: true,\r\n            // contact events\r\n            charContactEventsEnabled: true,\r\n            vehicleContactEventsEnabled: false,\r\n            contactEventsEnabled: true,\r\n            contactAddedEventsEnabled: true,\r\n            contactPersistedEventsEnabled: false,\r\n            contactRemovedEventsEnabled: true,\r\n            contactPoints: true,\r\n            contactPointsAveraged: true,\r\n            broadPhaseLayers: [ _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BP_LAYER_NON_MOVING, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BP_LAYER_MOVING ],\r\n            // object layer vs object layer\r\n            objectLayerPairs: [\r\n                _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OBJ_LAYER_NON_MOVING, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OBJ_LAYER_MOVING,\r\n                _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OBJ_LAYER_MOVING, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OBJ_LAYER_MOVING\r\n            ],\r\n            // object layer to broadphase layer map\r\n            mapObjectToBroadPhaseLayer: [\r\n                0, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BP_LAYER_NON_MOVING,\r\n                1, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BP_LAYER_MOVING,\r\n                2, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BP_LAYER_NON_MOVING\r\n            ],\r\n            ...data.config\r\n        };\r\n        this._config = config;\r\n        this._time = 0;\r\n\r\n        // Transform filters to bit values\r\n        this._filterLayers = new Map();\r\n        // this._filterToBits(config);\r\n\r\n        // Jolt data\r\n        this.Jolt = null;\r\n        this._joltInterface = null;\r\n        this._physicsSystem = null;\r\n        this._bodyInterface = null;\r\n        this._bpFilter = null;\r\n        this._objFilter = null;\r\n        this._bodyFilter = null;\r\n        this._shapeFilter = null;\r\n        this._bodyList = null;\r\n        this._groupFilterTables = [];\r\n\r\n        const loadJolt = async () => {\r\n            const module = await import(/* webpackIgnore: true */ data.glueUrl);\r\n            module.default({\r\n                locateFile: () => {\r\n                    return data.wasmUrl;\r\n                }\r\n            }).then(Jolt => {\r\n                this.Jolt = Jolt;\r\n\r\n                // Util\r\n                (0,_physics_math_mjs__WEBPACK_IMPORTED_MODULE_3__.extendJoltMath)(Jolt);\r\n\r\n                // Physics operators\r\n                this._creator = new _operators_creator_mjs__WEBPACK_IMPORTED_MODULE_6__.Creator(this);\r\n                this._modifier = new _operators_modifier_mjs__WEBPACK_IMPORTED_MODULE_9__.Modifier(this);\r\n                this._cleaner = new _operators_cleaner_mjs__WEBPACK_IMPORTED_MODULE_5__.Cleaner(this);\r\n                this._querier = new _operators_querier_mjs__WEBPACK_IMPORTED_MODULE_10__.Querier(this);\r\n                this._tracker = new _operators_tracker_mjs__WEBPACK_IMPORTED_MODULE_11__.Tracker(Jolt);\r\n                this._drawer = new _operators_drawer_mjs__WEBPACK_IMPORTED_MODULE_7__.Drawer(Jolt);\r\n                \r\n                const listener = new _operators_listener_mjs__WEBPACK_IMPORTED_MODULE_8__.Listener(this);\r\n\r\n                if (config.contactEventsEnabled) {\r\n                    listener.initEvents(config);\r\n                }\r\n\r\n                this._listener = listener;\r\n\r\n                this._outBuffer = new _commands_buffer_mjs__WEBPACK_IMPORTED_MODULE_4__.CommandsBuffer({ ...this._config, commandsBufferSize: 2000 });\r\n\r\n                this._stepTime = 0;\r\n                this._steps = 0;\r\n\r\n                this._responseMessage = {\r\n                    buffer: null,\r\n                    inBuffer: null,\r\n                    softBodies: [],\r\n                    origin: 'physics-worker'\r\n                };\r\n\r\n                this._dispatcher = messenger;\r\n                this._inBuffer = null;\r\n                this._fatalError = false;\r\n\r\n                if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.dev) {\r\n                    this._perfIndex = null;\r\n                }\r\n\r\n                this._exposeConstants();\r\n            });\r\n        }\r\n        loadJolt();\r\n    }\r\n\r\n    set joltInterface(joltInterface) {\r\n        this._joltInterface = joltInterface;\r\n    }\r\n\r\n    get joltInterface() {\r\n        return this._joltInterface;\r\n    }\r\n\r\n    get physicsSystem() {\r\n        return this._physicsSystem;\r\n    }\r\n    set physicsSystem(system) {\r\n        this._physicsSystem = system;\r\n        this._bodyInterface = system.GetBodyInterface();\r\n    }\r\n\r\n    get groupFilterTables() {\r\n        return this._groupFilterTables;\r\n    }\r\n\r\n    get bodyInterface() {\r\n        return this._bodyInterface;\r\n    }\r\n\r\n    get inBuffer() {\r\n        return this._inBuffer;\r\n    }\r\n\r\n    get outBuffer() {\r\n        return this._outBuffer;\r\n    }\r\n\r\n    get config() {\r\n        return this._config;\r\n    }\r\n\r\n    get tracker() {\r\n        return this._tracker;\r\n    }\r\n\r\n    get creator() {\r\n        return this._creator;\r\n    }\r\n\r\n    get listener() {\r\n        return this._listener;\r\n    }\r\n\r\n    get querier() {\r\n        return this._querier;\r\n    }\r\n\r\n    get bpFilter() {\r\n        return this._bpFilter;\r\n    }\r\n\r\n    set bpFilter(filter) {\r\n        this._bpFilter = filter;\r\n    }\r\n\r\n    get objFilter() {\r\n        return this._objFilter;\r\n    }\r\n\r\n    set objFilter(filter) {\r\n        this._objFilter = filter;\r\n    }\r\n\r\n    get bodyFilter() {\r\n        return this._bodyFilter;\r\n    }\r\n\r\n    set bodyFilter(filter) {\r\n        this._bodyFilter = filter;\r\n    }\r\n\r\n    get shapeFilter() {\r\n        return this._shapeFilter;\r\n    }\r\n\r\n    set shapeFilter(filter) {\r\n        this._shapeFilter = filter;\r\n    }\r\n\r\n    get bodyList() {\r\n        return this._bodyList;\r\n    }\r\n\r\n    set bodyList(list) {\r\n        this._bodyList = list;\r\n    }\r\n\r\n    step(data) {\r\n        if (this._fatalError) return;\r\n        \r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.dev) {\r\n            this._stepTime = performance.now();\r\n            this._perfIndex = data.perfIndex;\r\n        }\r\n        \r\n        const { buffer, meshBuffers, dt } = data;\r\n        const outBuffer = this._outBuffer;\r\n        let inBuffer = this._inBuffer;\r\n\r\n        if (data.inBuffer) {\r\n            outBuffer.buffer = data.inBuffer;\r\n        }\r\n\r\n        let ok = true;\r\n        if (buffer) {\r\n            if (!inBuffer) {\r\n                inBuffer = this._inBuffer = new _commands_buffer_mjs__WEBPACK_IMPORTED_MODULE_4__.CommandsBuffer();\r\n            }\r\n            \r\n            inBuffer.buffer = buffer;\r\n\r\n            // If commands buffer is provided, then execute commands, before stepping\r\n            try {\r\n                ok = ok && this._executeCommands(meshBuffers);\r\n            } catch (e) {\r\n                _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.error(e);\r\n                ok = false;\r\n            }\r\n        }\r\n\r\n        if (!inBuffer) {\r\n            // The physics world is empty, as no commands were ever received yet,\r\n            // so nothing to report and no reason to step the physics.\r\n            return;\r\n        }\r\n\r\n        // potentially step physics system, update motion states\r\n        ok = ok && this._stepPhysics(dt);\r\n\r\n        // write the collected contact events\r\n        this._listener.write(outBuffer);\r\n\r\n        // write dynamic transforms to update entities\r\n        ok = ok && this._writeIsometry(outBuffer);\r\n\r\n        // write virtual characters state\r\n        ok = ok && this._writeCharacters(outBuffer);\r\n\r\n        // write debug draw data\r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.dev) {\r\n            // Write debug draw data\r\n            ok = ok && this._drawer.write(this._tracker);\r\n        }     \r\n\r\n        // report sim results to frontend\r\n        ok = ok && this._send();\r\n\r\n        if (!ok) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.error('Backend fatal error :(');\r\n            this._fatalError = true;\r\n        }\r\n    }\r\n\r\n    overrideContacts(listener, overrides) {\r\n        this._listener.overrideContacts(listener, overrides);\r\n    }\r\n\r\n    getBitValue(name) {\r\n        const layers = this._filterLayers;\r\n\r\n        if (!layers.has(name)) {\r\n            layers.set(name, layers.size ? 1 << layers.size - 1 : 0);\r\n        }\r\n\r\n        return layers.get(name);\r\n    }\r\n\r\n    destroy() {\r\n        const Jolt = this.Jolt;\r\n\r\n        this._creator.destroy();\r\n        this._creator = null;\r\n\r\n        this._modifier.destroy();\r\n        this._modifier = null;\r\n\r\n        this._cleaner.destroy();\r\n        this._cleaner = null;\r\n\r\n        this._querier.destroy();\r\n        this._querier = null;\r\n\r\n        this._tracker.destroy();\r\n        this._tracker = null;\r\n\r\n        this._dispatcher = null;\r\n\r\n        if (this._charUpdateSettings) {\r\n            Jolt.destroy(this._charUpdateSettings);\r\n            this._charUpdateSettings = null;\r\n        }\r\n\r\n        if (this._joltInterface) {\r\n            Jolt.destroy(this._joltInterface);\r\n            this._joltInterface = null;\r\n        }\r\n\r\n        const tables = this._groupFilterTables;\r\n        const len = tables.length;\r\n        if (len > 0) {\r\n            for (let i = 0; i < len; i++) {\r\n                const table = tables[i];\r\n                Jolt.destroy(table);\r\n            }\r\n            tables.length = 0;\r\n        }\r\n\r\n        Jolt.destroy(this._bodyList);\r\n        this._bodyList = null;\r\n\r\n        this._inBuffer?.destroy();\r\n        this._inBuffer = null;\r\n\r\n        this._outBuffer?.destroy();\r\n        this._outBuffer = null;\r\n\r\n        this.Jolt = null;\r\n    }\r\n\r\n    _stepPhysics(dt) {\r\n        const config = this._config;\r\n        const fixedStep = config.fixedStep;\r\n        const subSteps = config.subSteps;\r\n        const jolt = this._joltInterface;\r\n\r\n        let time = this._time;\r\n        let stepped = false;\r\n        let ok = true;\r\n\r\n        time += dt;\r\n\r\n        while (ok && time >= fixedStep) {\r\n            try {\r\n                // update characters before stepping\r\n                ok = this._stepCharacters(fixedStep);\r\n                // step the physics world\r\n                ok && jolt.Step(fixedStep, subSteps);\r\n                this._steps++;\r\n                stepped = true;\r\n            } catch (e) {\r\n                _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.error(e);\r\n                ok = false;\r\n            }\r\n\r\n            time -= fixedStep;\r\n        }\r\n\r\n        if (ok && config.useMotionStates) {\r\n            ok = this._updateMotionStates(time / fixedStep, stepped);\r\n        }\r\n\r\n        this._time = time;\r\n\r\n        return ok;\r\n    }\r\n\r\n    _updateMotionStates(alpha, stepped) {\r\n        const Jolt = this.Jolt;\r\n        const tracker = this._tracker;\r\n        const system = this._physicsSystem;\r\n        const characters = tracker.character;\r\n        const dynamicType = Jolt.EBodyType_RigidBody;\r\n\r\n        // active dynamic and active kinematic\r\n        const numActiveBodies = system.GetNumActiveBodies(dynamicType);\r\n        if (numActiveBodies > 0) {\r\n            const bodyList = this._bodyList;\r\n\r\n            bodyList.clear();\r\n            system.GetActiveBodies(dynamicType, bodyList);\r\n            \r\n            for (let i = 0; i < numActiveBodies; i++) {\r\n                const bodyID = bodyList.at(i);\r\n                const body = system.GetBodyLockInterface().TryGetBody(bodyID);\r\n                if (Jolt.getPointer(body) === 0 || body.isCharPaired) {\r\n                    continue;\r\n                }\r\n\r\n                const ms = body.motionState;\r\n                if (ms) {\r\n                    ms.compute(alpha, stepped);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (const char of characters) {\r\n            const ms = char.motionState;\r\n            if (ms) {\r\n                const ok = ms.compute(alpha, stepped);\r\n                if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.dev && !ok) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    _stepCharacters(fixedStep) {\r\n        const Jolt = this.Jolt;\r\n        const joltInterface = this._joltInterface;\r\n        const bodyInterface = this._bodyInterface;\r\n        const characters = this._tracker.character;\r\n        if (characters.size === 0) return true;\r\n\r\n        const movingBPFilter = this._bpFilter;\r\n        const movingLayerFilter = this._objFilter;\r\n        const bodyFilter = this._bodyFilter;\r\n        const shapeFilter = this._shapeFilter;\r\n        let updateSettings = this._charUpdateSettings;\r\n\r\n        try {\r\n            if (!updateSettings) {\r\n                updateSettings = this._charUpdateSettings = new Jolt.ExtendedUpdateSettings();\r\n            }\r\n            const allocator = joltInterface.GetTempAllocator();\r\n\r\n            // TODO\r\n            // make it customizable, like the raycast\r\n            const objectVsBroadPhaseLayerFilter = joltInterface.GetObjectVsBroadPhaseLayerFilter();\r\n\t\t\tconst objectLayerPairFilter = joltInterface.GetObjectLayerPairFilter();\r\n\t\t\tconst movingBPFilter = new Jolt.DefaultBroadPhaseLayerFilter(objectVsBroadPhaseLayerFilter, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BP_LAYER_MOVING);\r\n\t\t\tconst movingLayerFilter = new Jolt.DefaultObjectLayerFilter(objectLayerPairFilter, 2);\r\n    \r\n            characters.forEach(char => {\r\n                char.ExtendedUpdate(\r\n                    fixedStep,\r\n                    char.GetUp(),\r\n                    updateSettings,\r\n                    movingBPFilter,\r\n                    movingLayerFilter,\r\n                    bodyFilter,\r\n                    shapeFilter,\r\n                    allocator\r\n                );\r\n                char.UpdateGroundVelocity();\r\n\r\n                const pairedBody = char.pairedBody;\r\n                if (pairedBody) {\r\n                    const yOffset = char.GetShape().GetCenterOfMass().GetY();\r\n                    const pos = char.GetPosition();\r\n                    const y = pos.GetY() + yOffset;\r\n                    pos.SetY(y);\r\n                    bodyInterface.MoveKinematic(pairedBody.GetID(), pos, Jolt.Quat.prototype.sIdentity(), fixedStep);\r\n                }\r\n            });\r\n\r\n            Jolt.destroy(movingBPFilter);\r\n            Jolt.destroy(movingLayerFilter);\r\n        } catch (e) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.error(e);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    _executeCommands(meshBuffers) {\r\n        const cb = this._inBuffer;\r\n        const creator = this._creator;\r\n        const modifier = this._modifier;\r\n        const querier = this._querier;\r\n        const cleaner = this._cleaner;\r\n        const count = cb.commandsCount;\r\n\r\n        let ok = true;\r\n\r\n        for (let i = 0; i < count; i++) {\r\n            const operator = cb.readOperator();\r\n\r\n            switch (operator) {\r\n                case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OPERATOR_CREATOR:\r\n                    ok = ok && creator.create(meshBuffers);\r\n                    break;\r\n\r\n                case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OPERATOR_MODIFIER:\r\n                    ok = ok && modifier.modify();\r\n                    break;\r\n\r\n                case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OPERATOR_QUERIER:\r\n                    ok = ok && querier.query();\r\n                    break;\r\n\r\n                case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OPERATOR_CLEANER:\r\n                    ok = ok && cleaner.clean();\r\n                    break;\r\n\r\n                default:\r\n                    _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.error(`Invalid operator: ${ operator }`);\r\n                    return false;\r\n            }\r\n        }\r\n\r\n        // Reset the cursors, so we can start from the buffer beginning on\r\n        // the next step request\r\n        cb.reset();\r\n\r\n        return ok;\r\n    }\r\n\r\n    _writeIsometry(cb) {\r\n        // Report transforms of dynamic bodies and vertex positions of soft bodies\r\n        const Jolt = this.Jolt;\r\n        const system = this._physicsSystem;\r\n        const activeRigidBodiesCount = system.GetNumActiveBodies(Jolt.EBodyType_RigidBody);\r\n        const activeSoftBodiesCount = system.GetNumActiveBodies(Jolt.EBodyType_SoftBody);\r\n\r\n        let ok = true;\r\n\r\n        if (activeRigidBodiesCount > 0) {\r\n            ok = this._writeRigidBodiesIsometry(activeRigidBodiesCount, system, cb);\r\n        }\r\n\r\n        if (activeSoftBodiesCount > 0) {\r\n            ok = ok && this._writeSoftBodiesVertices(activeSoftBodiesCount, system, cb);\r\n        }\r\n\r\n        return ok;\r\n    }\r\n\r\n    _writeCharacters(cb) {\r\n        const Jolt = this.Jolt;\r\n        const tracker = this._tracker;\r\n        const characters = tracker.character;\r\n        const count = characters.size;\r\n\r\n        if (count === 0)\r\n            return true;\r\n\r\n        const useMotionStates = this._config.useMotionStates;\r\n\r\n        cb.writeOperator(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.COMPONENT_SYSTEM_CHAR);\r\n        cb.writeCommand(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CMD_UPDATE_TRANSFORMS);\r\n        cb.write(count, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_UINT32, false);\r\n\r\n        try {\r\n            characters.forEach(char => {\r\n                const index = tracker.getPCID(Jolt.getPointer(char));\r\n                const isSupported = char.IsSupported();\r\n                const state = char.GetGroundState();\r\n                const linVel = char.GetLinearVelocity();\r\n                const groundVelocity = char.GetGroundVelocity();\r\n                const groundNormal = char.GetGroundNormal();\r\n                const isTooSteep = char.IsSlopeTooSteep(groundNormal);\r\n\r\n                cb.write(index, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_UINT32, false);\r\n\r\n                const ms = char.motionState;\r\n                if (useMotionStates && ms) {\r\n                    cb.write(ms.position, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_VEC32, false);\r\n                    cb.write(ms.rotation, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_VEC32, false);\r\n                } else {\r\n                    cb.write(char.GetPosition(), _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_JOLTVEC32, false);\r\n                    cb.write(char.GetRotation(), _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_JOLTVEC32, false);\r\n                }\r\n\r\n                cb.write(linVel, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_JOLTVEC32, false);\r\n                cb.write(isSupported, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_BOOL, false);\r\n                cb.write(state, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_UINT8, false);\r\n\r\n                if (isSupported) {\r\n                    const groundID = char.GetGroundBodyID();\r\n                    const bodyLockInterface = this._physicsSystem.GetBodyLockInterface();\r\n                    let bodyGround = bodyLockInterface.TryGetBody(groundID);\r\n                    if (Jolt.getPointer(bodyGround) === 0) {\r\n                        bodyGround = null;\r\n                    }\r\n                    cb.write(!!bodyGround, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_BOOL, false);\r\n                    if (bodyGround) {\r\n                        const groundIdx = tracker.getPCID(Jolt.getPointer(bodyGround));\r\n                        cb.write(groundIdx, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_UINT32, false);\r\n                    }\r\n\r\n                    cb.write(isTooSteep, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_BOOL, false);\r\n                    cb.write(groundVelocity, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_JOLTVEC32, false);\r\n                    cb.write(groundNormal, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_JOLTVEC32, false);\r\n                }\r\n            });\r\n        } catch (e) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.error(e);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    _send() {\r\n        const dispatcher = this._dispatcher;\r\n        const msg = this._responseMessage;\r\n        const outBuffer = this._outBuffer;\r\n        const buffer = outBuffer.buffer;\r\n        const drawer = this._drawer;\r\n        const debugDraw = !!(drawer && drawer.dirty);\r\n        const useSAB = this._config.useSAB;\r\n\r\n        outBuffer.reset();\r\n        // this._querier.reset();\r\n        this._listener.reset();\r\n\r\n        if (debugDraw) {\r\n            msg.drawViews = drawer.data;\r\n        } else {\r\n            msg.drawViews = null;\r\n        }\r\n\r\n        msg.buffer = buffer.byteLength > 0 ? buffer : null;\r\n        msg.steps = this._steps;\r\n\r\n        // TODO\r\n        // refactor\r\n\r\n        const buffers = [];\r\n\r\n        // If we are in a web worker, we need to detach the incoming buffer,\r\n        // so it is available for write in main thread\r\n        if (typeof importScripts === 'function') {\r\n            const inBuffer = this._inBuffer;\r\n            const ib = inBuffer.buffer;\r\n            if (ib.byteLength > 0) {\r\n                msg.inBuffer = ib;\r\n                if (!useSAB) {\r\n                    buffers.push(ib);\r\n                }\r\n            } else {\r\n                msg.inBuffer = null;\r\n            }\r\n        }\r\n\r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.dev) {\r\n            msg.perfIndex = this._perfIndex;\r\n            msg.time = performance.now() - this._stepTime;\r\n        }\r\n\r\n        if (debugDraw) {\r\n            buffers.push(...drawer.buffers);\r\n        }\r\n\r\n        if (!useSAB && buffer.byteLength > 0) {\r\n            buffers.push(buffer);\r\n        }\r\n        \r\n        dispatcher.respond(msg, buffers);\r\n        \r\n        if (debugDraw) {\r\n            drawer.reset();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    \r\n\r\n    // _filterToBits(config) {\r\n    //     const filterLayers = this._filterLayers;\r\n    //     const pairs = config.layerPairs;\r\n    //     for (let i = 0, end = pairs.length; i < end; i++) {\r\n    //         const pair = pairs[i];\r\n    //         pair[0] = this.getBitValue(pair[0]);\r\n    //         pair[1] = this.getBitValue(pair[1]);\r\n    //     }\r\n\r\n    //     const layers = [];\r\n    //     filterLayers.forEach(key => {\r\n    //         layers.push(key);\r\n    //     });\r\n\r\n    //     config.layers = layers;\r\n    // }\r\n\r\n    _exposeConstants() {\r\n        const Jolt = this.Jolt;\r\n        const dispatcher = this._dispatcher;\r\n        const msg = this._responseMessage;\r\n\r\n        msg.constants = [\r\n            'JOLT_VERSION', jolt_physics_package_json__WEBPACK_IMPORTED_MODULE_0__.version,\r\n\r\n            'JOLT_MOTION_TYPE_STATIC', Jolt.EMotionType_Static,\r\n            'JOLT_MOTION_TYPE_DYNAMIC', Jolt.EMotionType_Dynamic,\r\n            'JOLT_MOTION_TYPE_KINEMATIC', Jolt.EMotionType_Kinematic,\r\n\r\n            'JOLT_OMP_CALCULATE_INERTIA', Jolt.EOverrideMassProperties_CalculateInertia,\r\n            'JOLT_OMP_CALCULATE_MASS_AND_INERTIA', Jolt.EOverrideMassProperties_CalculateMassAndInertia,\r\n            'JOLT_OMP_MASS_AND_INERTIA_PROVIDED', Jolt.EOverrideMassProperties_MassAndInertiaProvided,\r\n\r\n            'JOLT_ALLOWED_DOFS_TRANSLATION_X', Jolt.EAllowedDOFs_TranslationX,\r\n            'JOLT_ALLOWED_DOFS_TRANSLATION_Y', Jolt.EAllowedDOFs_TranslationY,\r\n            'JOLT_ALLOWED_DOFS_TRANSLATION_Z', Jolt.EAllowedDOFs_TranslationZ,\r\n            'JOLT_ALLOWED_DOFS_ROTATION_X', Jolt.EAllowedDOFs_RotationX,\r\n            'JOLT_ALLOWED_DOFS_ROTATION_Y', Jolt.EAllowedDOFs_RotationY,\r\n            'JOLT_ALLOWED_DOFS_ROTATION_Z', Jolt.EAllowedDOFs_RotationZ,\r\n            'JOLT_ALLOWED_DOFS_PLANE_2D', Jolt.EAllowedDOFs_Plane2D,\r\n            'JOLT_ALLOWED_DOFS_ALL', Jolt.EAllowedDOFs_All,\r\n\r\n            'JOLT_MOTION_QUALITY_DISCRETE', Jolt.EMotionQuality_Discrete,\r\n            'JOLT_MOTION_QUALITY_LINEAR_CAST', Jolt.EMotionQuality_LinearCast,\r\n\r\n            'JOLT_BFM_IGNORE_BACK_FACES', Jolt.EBackFaceMode_IgnoreBackFaces,\r\n            'JOLT_BFM_COLLIDE_BACK_FACES', Jolt.EBackFaceMode_CollideWithBackFaces,\r\n            \r\n            'JOLT_GROUND_STATE_ON_GROUND', Jolt.EGroundState_OnGround,\r\n            'JOLT_GROUND_STATE_ON_STEEP_GROUND', Jolt.EGroundState_OnSteepGround,\r\n            'JOLT_GROUND_STATE_NOT_SUPPORTED', Jolt.EGroundState_NotSupported,\r\n            'JOLT_GROUND_STATE_IN_AIR', Jolt.EGroundState_InAir,\r\n\r\n            'JOLT_TRANSMISSION_AUTO', Jolt.ETransmissionMode_Auto,\r\n            'JOLT_TRANSMISSION_MANUAL', Jolt.ETransmissionMode_Manual,\r\n\r\n            'JOLT_SPRING_MODE_FREQUENCY', Jolt.ESpringMode_FrequencyAndDamping,\r\n            'JOLT_SPRING_MODE_STIFFNESS', Jolt.ESpringMode_StiffnessAndDamping,\r\n        ];\r\n\r\n        dispatcher.respond(msg, []);\r\n\r\n        msg.constants = null;\r\n    }\r\n\r\n    _writeRigidBodiesIsometry(count, system, cb) {\r\n        const Jolt = this.Jolt;\r\n        const useMotionStates = this._config.useMotionStates;\r\n        const bodyList = this._bodyList;\r\n        const tracker = this._tracker;\r\n\r\n        try {\r\n            bodyList.clear();\r\n            system.GetActiveBodies(Jolt.EBodyType_RigidBody, bodyList);\r\n\r\n            for (let i = 0; i < count; i++) {\r\n                const bodyID = bodyList.at(i);\r\n                const body = system.GetBodyLockInterface().TryGetBody(bodyID);\r\n                const pointer = Jolt.getPointer(body);\r\n                if (pointer === 0 || body.isCharPaired) {\r\n                    continue;\r\n                }\r\n\r\n                cb.writeOperator(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.COMPONENT_SYSTEM_BODY);\r\n                cb.writeCommand(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CMD_UPDATE_TRANSFORMS);\r\n\r\n                const index = tracker.getPCID(Jolt.getPointer(body));\r\n                cb.write(index, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_UINT32, false);\r\n\r\n                const ms = body.motionState;\r\n                if (useMotionStates && ms) {\r\n                    cb.write(ms.position, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_VEC32, false);\r\n                    cb.write(ms.rotation, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_VEC32, false);\r\n                } else {\r\n                    cb.write(body.GetPosition(), _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_JOLTVEC32, false);\r\n                    cb.write(body.GetRotation(), _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_JOLTVEC32, false);\r\n                }\r\n\r\n                cb.write(body.GetLinearVelocity(), _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_JOLTVEC32, false);\r\n                cb.write(body.GetAngularVelocity(), _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_JOLTVEC32, false);\r\n\r\n                // If it is a vehicle, write wheels isometry as well\r\n                if (body.isVehicle) {\r\n                    const data = tracker.constraintMap.get(index);\r\n                    const constraint = data.constraint;\r\n                    const wheelsCount = constraint.wheelsCount;\r\n                    const modifier = this._modifier;\r\n\r\n                    const jv1 = modifier.joltVec3_1;\r\n                    const jv2 = modifier.joltVec3_2;\r\n\r\n                    jv1.Set(0, 1, 0);\r\n                    jv2.Set(1, 0, 0);\r\n\r\n                    for (let i = 0; i < wheelsCount; i++) {\r\n                        const transform = constraint.GetWheelLocalTransform(i, jv1, jv2);                        \r\n                        const wheel = Jolt.castObject(constraint.GetWheel(i), Jolt.WheelWV);\r\n\r\n                        cb.write(wheel.mLongitudinalSlip, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_FLOAT32, false);\r\n                        cb.write(wheel.mLateralSlip, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_FLOAT32, false);\r\n                        cb.write(wheel.mCombinedLongitudinalFriction, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_FLOAT32, false);\r\n                        cb.write(wheel.mCombinedLateralFriction, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_FLOAT32, false);\r\n                        cb.write(wheel.mBrakeImpulse, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_FLOAT32, false);\r\n                        cb.write(transform.GetTranslation(), _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_JOLTVEC32, false);\r\n                        cb.write(transform.GetRotation().GetQuaternion(), _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_JOLTVEC32, false);\r\n                    }\r\n                }\r\n            }\r\n\r\n        } catch (e) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.error(e);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    _writeSoftBodiesVertices(count, system, cb) {\r\n        const Jolt = this.Jolt;\r\n        const bodyList = this._bodyList;\r\n        const tracker = this._tracker;\r\n\r\n        try {\r\n            bodyList.clear();\r\n            system.GetActiveBodies(Jolt.EBodyType_SoftBody, bodyList);\r\n\r\n            for (let i = 0; i < count; i++) {\r\n                const bodyID = bodyList.at(i);\r\n                const body = system.GetBodyLockInterface().TryGetBody(bodyID);\r\n                const pointer = Jolt.getPointer(body);\r\n                if (pointer === 0) {\r\n                    continue;\r\n                }\r\n\r\n                cb.writeOperator(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.COMPONENT_SYSTEM_SOFT_BODY);\r\n                cb.writeCommand(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CMD_UPDATE_TRANSFORMS);\r\n\r\n                const index = tracker.getPCID(pointer);\r\n                cb.write(index, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_UINT32, false);\r\n\r\n                const vertices = Jolt.castObject(body.GetMotionProperties(), Jolt.SoftBodyMotionProperties).GetVertices();\r\n                const count = vertices.size();\r\n\r\n                cb.write(count, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_UINT32, false);\r\n                for (let i = 0; i < count; i++) {\r\n                    cb.write(vertices.at(i).mPosition, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_JOLTVEC32, false);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.error(e);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/backends/jolt/backend.mjs\n");

/***/ }),

/***/ "./src/backends/jolt/commands-buffer.mjs":
/*!***********************************************!*\
  !*** ./src/backends/jolt/commands-buffer.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CommandsBuffer: () => (/* binding */ CommandsBuffer)\n/* harmony export */ });\n/* harmony import */ var _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../physics/debug.mjs */ \"./src/physics/debug.mjs\");\n/* harmony import */ var _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../physics/components/jolt/constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n\r\n\r\n\r\nclass CommandsBuffer {\r\n    constructor(config) {\r\n        if (config) {\r\n            let Buffer;\r\n            if (config.useSharedArrayBuffer) {\r\n                Buffer = SharedArrayBuffer;\r\n            } else {\r\n                Buffer = ArrayBuffer;\r\n            }\r\n            this._buffer = new Buffer(config.commandsBufferSize);\r\n            this._view = new DataView(this._buffer);\r\n            this._allowGrowth = config.allowCommandsBufferResize;\r\n        } else {\r\n            this._allowGrowth = true;\r\n        }\r\n\r\n        // First 2 bytes are for commands count, so we start from 2\r\n        this._bytesOffset = _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.UINT16_SIZE;\r\n        this._commandsCount = 0;\r\n        this._dirty = false;\r\n        this._meshBuffers = [];\r\n    }\r\n\r\n    get buffer() {\r\n        return this._buffer;\r\n    }\r\n\r\n    set buffer(b) {\r\n        this._buffer = b;\r\n        this._view = new DataView(b);\r\n    }\r\n\r\n    get dirty() {\r\n        return this._dirty;\r\n    }\r\n\r\n    get flag() {\r\n        return this.readUint8();\r\n    }\r\n\r\n    get commandsCount() {\r\n        return this._view.getUint16(0);\r\n    }\r\n\r\n    get meshBuffers() {\r\n        return this._meshBuffers;\r\n    }\r\n\r\n    writeJoltVec32(vec) {\r\n        this.writeFloat32(vec.GetX());\r\n        this.writeFloat32(vec.GetY());\r\n        this.writeFloat32(vec.GetZ());\r\n        if (vec.GetW) {\r\n            this.writeFloat32(vec.GetW());\r\n        }\r\n    }\r\n\r\n    readVec(vec) {\r\n        vec.x = this.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32);\r\n        vec.y = this.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32);\r\n        vec.z = this.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32);\r\n    }\r\n\r\n    readQuat(quat) {\r\n        this.readVec(quat);\r\n        quat.w = this.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32);\r\n    }\r\n\r\n    ignoreFlag() {\r\n        this._bytesOffset += _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.UINT8_SIZE;\r\n    }\r\n\r\n    reserveOffset(method) {\r\n        const offset = this._bytesOffset;\r\n        this[method](0);\r\n        return offset;\r\n    }\r\n\r\n    writeReserved(value, offset, method) {\r\n        this[method](value, offset);\r\n    }    \r\n\r\n    updateBuffer(buffer) {\r\n        if (this._buffer.byteLength !== buffer.byteLength) {\r\n            this._buffer = buffer;\r\n            this._view = new DataView(buffer);\r\n        }\r\n    }\r\n\r\n    read(method) {\r\n        _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.assert(\r\n            method === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_BOOL ||\r\n            method === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32 ||\r\n            method === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_UINT8 ||\r\n            method === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_UINT16 ||\r\n            method === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_UINT32 ||\r\n            method === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_INT32,\r\n            `Invalid write command method: ${ method }`\r\n        );\r\n\r\n        return this[method]();\r\n    }\r\n\r\n    /**\r\n     * Writes value to buffer. Skips flag for uint8 values.\r\n     */\r\n    write(value, method, addFlag = true) {\r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.assert(\r\n                method === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_BOOL || \r\n                method === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_FLOAT32 ||\r\n                method === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_UINT8 ||\r\n                method === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_UINT16 ||\r\n                method === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_UINT32 ||\r\n                method === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_INT32 ||\r\n                method === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_VEC32 ||\r\n                method === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_JOLTVEC32 ||\r\n                method === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_PLANE,\r\n                `Invalid write command method: ${ method }`\r\n            );\r\n        }\r\n\r\n        if (value == null) {\r\n            this.writeUint8(0);\r\n        } else {\r\n            if (addFlag) this.writeUint8(1);\r\n            this[method](value);\r\n        }\r\n    }\r\n\r\n    readCommand() {\r\n        return this.readUint8();\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Number} command Number in [0-255] range specifying a command variant for backend\r\n     */\r\n    writeCommand(command) {\r\n        this._increment();\r\n        this.writeUint8(command);\r\n        this._dirty = true;\r\n    }\r\n\r\n    readOperator() {\r\n        return this.readUint8();\r\n    }\r\n\r\n    writeOperator(operator) {\r\n        this.writeUint8(operator);\r\n    }\r\n\r\n    writeVector32(vector) {\r\n        this.writeFloat32(vector.x);\r\n        this.writeFloat32(vector.y);\r\n        this.writeFloat32(vector.z);\r\n        if (vector.w !== undefined) {\r\n            this.writeFloat32(vector.w);\r\n        }\r\n    }\r\n\r\n    readFloat32() {\r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && this._isOutsideBounds(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.FLOAT32_SIZE)) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.warnOnce('Commands Buffer: Aborting read outside buffer bounds.');\r\n            return 0;\r\n        }\r\n        const value = this._view.getFloat32(this._bytesOffset);\r\n        _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(value, `Got invalid value from buffer: ${ value }`);\r\n        this._bytesOffset += _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.FLOAT32_SIZE;\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Number} value \r\n     */\r\n    writeFloat32(value, offset) {\r\n        if (!this._canWrite(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.FLOAT32_SIZE)) return;\r\n        _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(value, `Trying to write invalid value to buffer: ${ value }`);\r\n        if (offset == null) {\r\n            this._view.setFloat32(this._bytesOffset, value);\r\n            this._bytesOffset += _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.FLOAT32_SIZE;\r\n        } else {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.assert(this._buffer.byteLength >= (offset + _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.FLOAT32_SIZE), 'Trying to write outside of buffer bounds.');\r\n            this._view.setFloat32(offset, value);\r\n        }\r\n    }\r\n\r\n    readUint8() {\r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && this._isOutsideBounds(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.UINT8_SIZE)) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.warnOnce('Commands Buffer: Aborting read outside buffer bounds.');\r\n            return 0;\r\n        }\r\n        const value = this._view.getUint8(this._bytesOffset);\r\n        _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkUint(value, `Got invalid value from buffer: ${ value }`);\r\n        this._bytesOffset += _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.UINT8_SIZE;\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Number} value \r\n     */\r\n    writeUint8(value, offset) {\r\n        if (!this._canWrite(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.UINT8_SIZE)) return;\r\n        _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkUint(value, `Trying to write invalid value to buffer: ${ value }`);\r\n        if (offset == null) {\r\n            this._view.setUint8(this._bytesOffset, value);\r\n            this._bytesOffset += _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.UINT8_SIZE;\r\n        } else {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.assert(this._buffer.byteLength >= (offset + _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.UINT8_SIZE), 'Trying to write outside of buffer bounds.');\r\n            this._view.setUint8(offset, value);\r\n        }\r\n    }\r\n\r\n    readUint16() {\r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && this._isOutsideBounds(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.UINT16_SIZE)) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.warnOnce('Commands Buffer: Aborting read outside buffer bounds.');\r\n            return 0;\r\n        }\r\n        const value = this._view.getUint16(this._bytesOffset);\r\n        _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkUint(value, `Got invalid value from buffer: ${ value }`);\r\n        this._bytesOffset += _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.UINT16_SIZE;\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Number} value \r\n     */\r\n    writeUint16(value, offset) {\r\n        if (!this._canWrite(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.UINT16_SIZE)) return;\r\n        _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkUint(value, `Trying to write invalid value to buffer: ${ value }`);\r\n        if (offset == null) {\r\n            this._view.setUint16(this._bytesOffset, value);\r\n            this._bytesOffset += _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.UINT16_SIZE;\r\n        } else {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.assert(this._buffer.byteLength >= (offset + _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.UINT16_SIZE), 'Trying to write outside of buffer bounds.');\r\n            this._view.setUint16(offset, value);\r\n        }\r\n    }\r\n\r\n    readUint32() {\r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && this._isOutsideBounds(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.UINT32_SIZE)) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.warnOnce('Commands Buffer: Aborting read outside buffer bounds.');\r\n            return 0;\r\n        }\r\n        const value = this._view.getUint32(this._bytesOffset);\r\n        _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkUint(value, `Got invalid value from buffer: ${ value }`);\r\n        this._bytesOffset += _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.UINT32_SIZE;\r\n        return value;\r\n    }\r\n\r\n    writeUint32(value, offset) {\r\n        _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkUint(value, `Trying to write invalid value to buffer: ${ value }`);\r\n        if (offset == null) {\r\n            if (!this._canWrite(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.UINT32_SIZE)) return;\r\n            this._view.setUint32(this._bytesOffset, value);\r\n            this._bytesOffset += _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.UINT32_SIZE;\r\n        } else {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.assert(this._buffer.byteLength >= (offset + _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.UINT32_SIZE), 'Trying to write outside of buffer bounds.');\r\n            this._view.setUint32(offset, value);\r\n        }\r\n    }\r\n\r\n    readInt32() {\r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && this._isOutsideBounds(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.INT32_SIZE)) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.warnOnce('Commands Buffer: Aborting read outside buffer bounds.');\r\n            return null;\r\n        }\r\n        const value = this._view.getInt32(this._bytesOffset);\r\n        _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkInt(value, `Got invalid value from buffer: ${ value }`);\r\n        this._bytesOffset += _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.INT32_SIZE;\r\n        return value;\r\n    }\r\n\r\n    writeInt32(value, offset) {\r\n        _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkInt(value, `Trying to write invalid value to buffer: ${ value }`);\r\n        if (offset == null) {\r\n            if (!this._canWrite(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.INT32_SIZE)) return;\r\n            this._view.setInt32(this._bytesOffset, value);\r\n            this._bytesOffset += _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.INT32_SIZE;\r\n        } else {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.assert(this._buffer.byteLength >= (offset + _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.INT32_SIZE), 'Trying to write outside of buffer bounds.');\r\n            this._view.setInt32(offset, value);\r\n        }\r\n    }    \r\n\r\n    readBool() {\r\n        return this.readUint8() ? true : false;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Boolean} value \r\n     */\r\n    writeBool(value) {\r\n        this.writeUint8(value ? 1 : 0);\r\n    }\r\n\r\n    writePlane(plane) {\r\n        this.writeVector32(plane.normal);\r\n        this.writeFloat32(plane.distance);\r\n    }\r\n\r\n    addBuffer(buffer) {\r\n        this._meshBuffers.push(buffer);\r\n    }\r\n\r\n    skip(bytes, size) {\r\n        this._bytesOffset += (bytes * size);\r\n    }\r\n\r\n    reset() {\r\n        this._commandsCount = 0;\r\n        this._bytesOffset = _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.UINT16_SIZE;\r\n        this._dirty = false;\r\n    }\r\n\r\n    destroy() {\r\n        this._view = null;\r\n        this._buffer = null;\r\n    }\r\n\r\n    _increment() {\r\n        this._view.setUint16(0, ++this._commandsCount);\r\n    }\r\n\r\n    _canWrite(increment) {\r\n        if (this._isOutsideBounds(increment)) {\r\n            if (this._allowGrowth) {\r\n                this._resize();\r\n            } else {\r\n                _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.warnOnce('Commands Buffer: reached capacity limits. Not allowed to grow.' +\r\n                    ' Consider using \"allowCommandsBufferResize\" option or allocate a larger buffer' +\r\n                    ' using \"commandsBufferSize\". Current buffer' +\r\n                    ' size (bytes):', this._buffer.byteLength);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    _resize(increment) {\r\n        const old = this._buffer;\r\n        const currentSize = old.byteLength;\r\n        const addendum = increment ? increment : currentSize * 0.5;\r\n        const buffer = new old.constructor(currentSize + addendum);\r\n\r\n        new Uint8Array(buffer).set(new Uint8Array(old));\r\n\r\n        this._buffer = buffer;\r\n        this._view = new DataView(buffer);\r\n    }\r\n\r\n    _isOutsideBounds(increment) {\r\n        if ((this._bytesOffset + increment) > this._buffer.byteLength) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/backends/jolt/commands-buffer.mjs\n");

/***/ }),

/***/ "./src/backends/jolt/motion-state.mjs":
/*!********************************************!*\
  !*** ./src/backends/jolt/motion-state.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MotionState: () => (/* binding */ MotionState)\n/* harmony export */ });\n/* harmony import */ var _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../physics/debug.mjs */ \"./src/physics/debug.mjs\");\n\r\n\r\nconst v1 = { x: 0, y: 0, z: 0 };\r\nconst q1 = { x: 0, y: 0, z: 0, w: 1 };\r\nconst q2 = { x: 0, y: 0, z: 0, w: 1 };\r\n\r\nclass MotionState {\r\n    constructor(body) {\r\n        this._body = body;\r\n\r\n        this._updatePosition(body);\r\n        this._updateRotation(body);\r\n    }\r\n\r\n    compute(alpha, stepped) {\r\n        const body = this._body;\r\n        const position = this._position;\r\n        const op = this._oldPos;\r\n        const cp = this._currentPos;\r\n        \r\n        try {\r\n            if (stepped) {\r\n                const bp = body.GetPosition();\r\n                op.x = cp.x; op.y = cp.y; op.z = cp.z;\r\n                cp.x = bp.GetX(); cp.y = bp.GetY(); cp.z = bp.GetZ();\r\n            }\r\n\r\n            v1.x = cp.x * alpha;\r\n            v1.y = cp.y * alpha;\r\n            v1.z = cp.z * alpha;\r\n\r\n            position.x = v1.x;\r\n            position.y = v1.y;\r\n            position.z = v1.z;\r\n\r\n            v1.x = op.x * (1 - alpha);\r\n            v1.y = op.y * (1 - alpha);\r\n            v1.z = op.z * (1 - alpha);\r\n\r\n            position.x += v1.x;\r\n            position.y += v1.y;\r\n            position.z += v1.z;\r\n\r\n            if (!body.isCharacter) {\r\n                const r = this._rotation;\r\n                const cr = this._currentRot;\r\n                const or = this._oldRot;\r\n\r\n                if (stepped) {\r\n                    const br = body.GetRotation();\r\n                    or.x = cr.x; or.y = cr.y; or.z = cr.z; or.w = cr.w;\r\n                    cr.x = br.GetX(); cr.y = br.GetY(); cr.z = br.GetZ(); cr.w = br.GetW();\r\n                }\r\n\r\n                let q2x = cr.x;\r\n                let q2y = cr.y;\r\n                let q2z = cr.z;\r\n                let q2w = cr.w;\r\n\r\n                let dot = r.x * q2x + r.y * q2y + r.z * q2z + r.w * q2w;\r\n                if (dot < 0) {\r\n                    q2x = -q2x;\r\n                    q2y = -q2y;\r\n                    q2z = -q2z;\r\n                    q2w = -q2w;\r\n                    dot = -dot;\r\n                }\r\n\r\n                const theta = Math.acos(dot);\r\n                if (theta > 0.0001) {\r\n                    const invst = 1 / Math.sin(theta);\r\n                    const c0 = Math.sin((1 - alpha) * theta) * invst;\r\n                    const c1 = Math.sin(alpha * theta) * invst;\r\n                    r.x = c0 * or.x + c1 * q2x;\r\n                    r.y = c0 * or.y + c1 * q2y;\r\n                    r.z = c0 * or.z + c1 * q2z;\r\n                    r.w = c0 * or.w + c1 * q2w;\r\n                } else {\r\n                    r.x = r.x;\r\n                    r.y = r.y;\r\n                    r.z = r.z;\r\n                    r.w = r.w;\r\n                }\r\n            }\r\n        } catch (e) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.error(e);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    get position() {\r\n        return this._position;\r\n    }\r\n\r\n    get rotation() {\r\n        return this._rotation;\r\n    }\r\n\r\n    _updatePosition(body) {\r\n        const bodyPos = body.GetPosition();\r\n        const p = { x: bodyPos.GetX(), y: bodyPos.GetY(), z: bodyPos.GetZ() };\r\n\r\n        this._position = p;\r\n        this._currentPos = { x: p.x, y: p.y, z: p.z };\r\n        this._oldPos = { x: p.x, y: p.y, z: p.z };\r\n    }\r\n\r\n    _updateRotation(body) {\r\n        const bodyRot = body.GetRotation();\r\n        const r = { x: bodyRot.GetX(), y: bodyRot.GetY(), z: bodyRot.GetZ(), w: bodyRot.GetW() };\r\n\r\n        this._rotation = r;\r\n        this._currentRot = { x: r.x, y: r.y, z: r.z, w: r.w };\r\n        this._oldRot = { x: r.x, y: r.y, z: r.z, w: r.w };\r\n    }\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYmFja2VuZHMvam9sdC9tb3Rpb24tc3RhdGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdEO0FBQ2hEO0FBQ0EsYUFBYTtBQUNiLGFBQWE7QUFDYixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLGFBQWE7QUFDMUMsa0NBQWtDLGtCQUFrQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxhQUFhLGFBQWE7QUFDM0Qsc0NBQXNDLGtCQUFrQixrQkFBa0I7QUFDMUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWLFlBQVkscURBQUssUUFBUSxxREFBSztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QaHlzaWNzQ29tcG9uZW50cy8uL3NyYy9iYWNrZW5kcy9qb2x0L21vdGlvbi1zdGF0ZS5tanM/MTg1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEZWJ1ZyB9IGZyb20gXCIuLi8uLi9waHlzaWNzL2RlYnVnLm1qc1wiO1xyXG5cclxuY29uc3QgdjEgPSB7IHg6IDAsIHk6IDAsIHo6IDAgfTtcclxuY29uc3QgcTEgPSB7IHg6IDAsIHk6IDAsIHo6IDAsIHc6IDEgfTtcclxuY29uc3QgcTIgPSB7IHg6IDAsIHk6IDAsIHo6IDAsIHc6IDEgfTtcclxuXHJcbmNsYXNzIE1vdGlvblN0YXRlIHtcclxuICAgIGNvbnN0cnVjdG9yKGJvZHkpIHtcclxuICAgICAgICB0aGlzLl9ib2R5ID0gYm9keTtcclxuXHJcbiAgICAgICAgdGhpcy5fdXBkYXRlUG9zaXRpb24oYm9keSk7XHJcbiAgICAgICAgdGhpcy5fdXBkYXRlUm90YXRpb24oYm9keSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29tcHV0ZShhbHBoYSwgc3RlcHBlZCkge1xyXG4gICAgICAgIGNvbnN0IGJvZHkgPSB0aGlzLl9ib2R5O1xyXG4gICAgICAgIGNvbnN0IHBvc2l0aW9uID0gdGhpcy5fcG9zaXRpb247XHJcbiAgICAgICAgY29uc3Qgb3AgPSB0aGlzLl9vbGRQb3M7XHJcbiAgICAgICAgY29uc3QgY3AgPSB0aGlzLl9jdXJyZW50UG9zO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGlmIChzdGVwcGVkKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBicCA9IGJvZHkuR2V0UG9zaXRpb24oKTtcclxuICAgICAgICAgICAgICAgIG9wLnggPSBjcC54OyBvcC55ID0gY3AueTsgb3AueiA9IGNwLno7XHJcbiAgICAgICAgICAgICAgICBjcC54ID0gYnAuR2V0WCgpOyBjcC55ID0gYnAuR2V0WSgpOyBjcC56ID0gYnAuR2V0WigpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB2MS54ID0gY3AueCAqIGFscGhhO1xyXG4gICAgICAgICAgICB2MS55ID0gY3AueSAqIGFscGhhO1xyXG4gICAgICAgICAgICB2MS56ID0gY3AueiAqIGFscGhhO1xyXG5cclxuICAgICAgICAgICAgcG9zaXRpb24ueCA9IHYxLng7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uLnkgPSB2MS55O1xyXG4gICAgICAgICAgICBwb3NpdGlvbi56ID0gdjEuejtcclxuXHJcbiAgICAgICAgICAgIHYxLnggPSBvcC54ICogKDEgLSBhbHBoYSk7XHJcbiAgICAgICAgICAgIHYxLnkgPSBvcC55ICogKDEgLSBhbHBoYSk7XHJcbiAgICAgICAgICAgIHYxLnogPSBvcC56ICogKDEgLSBhbHBoYSk7XHJcblxyXG4gICAgICAgICAgICBwb3NpdGlvbi54ICs9IHYxLng7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uLnkgKz0gdjEueTtcclxuICAgICAgICAgICAgcG9zaXRpb24ueiArPSB2MS56O1xyXG5cclxuICAgICAgICAgICAgaWYgKCFib2R5LmlzQ2hhcmFjdGVyKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCByID0gdGhpcy5fcm90YXRpb247XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjciA9IHRoaXMuX2N1cnJlbnRSb3Q7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBvciA9IHRoaXMuX29sZFJvdDtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoc3RlcHBlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGJyID0gYm9keS5HZXRSb3RhdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgICAgIG9yLnggPSBjci54OyBvci55ID0gY3IueTsgb3IueiA9IGNyLno7IG9yLncgPSBjci53O1xyXG4gICAgICAgICAgICAgICAgICAgIGNyLnggPSBici5HZXRYKCk7IGNyLnkgPSBici5HZXRZKCk7IGNyLnogPSBici5HZXRaKCk7IGNyLncgPSBici5HZXRXKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgbGV0IHEyeCA9IGNyLng7XHJcbiAgICAgICAgICAgICAgICBsZXQgcTJ5ID0gY3IueTtcclxuICAgICAgICAgICAgICAgIGxldCBxMnogPSBjci56O1xyXG4gICAgICAgICAgICAgICAgbGV0IHEydyA9IGNyLnc7XHJcblxyXG4gICAgICAgICAgICAgICAgbGV0IGRvdCA9IHIueCAqIHEyeCArIHIueSAqIHEyeSArIHIueiAqIHEyeiArIHIudyAqIHEydztcclxuICAgICAgICAgICAgICAgIGlmIChkb3QgPCAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcTJ4ID0gLXEyeDtcclxuICAgICAgICAgICAgICAgICAgICBxMnkgPSAtcTJ5O1xyXG4gICAgICAgICAgICAgICAgICAgIHEyeiA9IC1xMno7XHJcbiAgICAgICAgICAgICAgICAgICAgcTJ3ID0gLXEydztcclxuICAgICAgICAgICAgICAgICAgICBkb3QgPSAtZG90O1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIGNvbnN0IHRoZXRhID0gTWF0aC5hY29zKGRvdCk7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhldGEgPiAwLjAwMDEpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBpbnZzdCA9IDEgLyBNYXRoLnNpbih0aGV0YSk7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYzAgPSBNYXRoLnNpbigoMSAtIGFscGhhKSAqIHRoZXRhKSAqIGludnN0O1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGMxID0gTWF0aC5zaW4oYWxwaGEgKiB0aGV0YSkgKiBpbnZzdDtcclxuICAgICAgICAgICAgICAgICAgICByLnggPSBjMCAqIG9yLnggKyBjMSAqIHEyeDtcclxuICAgICAgICAgICAgICAgICAgICByLnkgPSBjMCAqIG9yLnkgKyBjMSAqIHEyeTtcclxuICAgICAgICAgICAgICAgICAgICByLnogPSBjMCAqIG9yLnogKyBjMSAqIHEyejtcclxuICAgICAgICAgICAgICAgICAgICByLncgPSBjMCAqIG9yLncgKyBjMSAqIHEydztcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgci54ID0gci54O1xyXG4gICAgICAgICAgICAgICAgICAgIHIueSA9IHIueTtcclxuICAgICAgICAgICAgICAgICAgICByLnogPSByLno7XHJcbiAgICAgICAgICAgICAgICAgICAgci53ID0gci53O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICBEZWJ1Zy5kZXYgJiYgRGVidWcuZXJyb3IoZSk7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBwb3NpdGlvbigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcG9zaXRpb247XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHJvdGF0aW9uKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9yb3RhdGlvbjtcclxuICAgIH1cclxuXHJcbiAgICBfdXBkYXRlUG9zaXRpb24oYm9keSkge1xyXG4gICAgICAgIGNvbnN0IGJvZHlQb3MgPSBib2R5LkdldFBvc2l0aW9uKCk7XHJcbiAgICAgICAgY29uc3QgcCA9IHsgeDogYm9keVBvcy5HZXRYKCksIHk6IGJvZHlQb3MuR2V0WSgpLCB6OiBib2R5UG9zLkdldFooKSB9O1xyXG5cclxuICAgICAgICB0aGlzLl9wb3NpdGlvbiA9IHA7XHJcbiAgICAgICAgdGhpcy5fY3VycmVudFBvcyA9IHsgeDogcC54LCB5OiBwLnksIHo6IHAueiB9O1xyXG4gICAgICAgIHRoaXMuX29sZFBvcyA9IHsgeDogcC54LCB5OiBwLnksIHo6IHAueiB9O1xyXG4gICAgfVxyXG5cclxuICAgIF91cGRhdGVSb3RhdGlvbihib2R5KSB7XHJcbiAgICAgICAgY29uc3QgYm9keVJvdCA9IGJvZHkuR2V0Um90YXRpb24oKTtcclxuICAgICAgICBjb25zdCByID0geyB4OiBib2R5Um90LkdldFgoKSwgeTogYm9keVJvdC5HZXRZKCksIHo6IGJvZHlSb3QuR2V0WigpLCB3OiBib2R5Um90LkdldFcoKSB9O1xyXG5cclxuICAgICAgICB0aGlzLl9yb3RhdGlvbiA9IHI7XHJcbiAgICAgICAgdGhpcy5fY3VycmVudFJvdCA9IHsgeDogci54LCB5OiByLnksIHo6IHIueiwgdzogci53IH07XHJcbiAgICAgICAgdGhpcy5fb2xkUm90ID0geyB4OiByLngsIHk6IHIueSwgejogci56LCB3OiByLncgfTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IHsgTW90aW9uU3RhdGUgfTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/backends/jolt/motion-state.mjs\n");

/***/ }),

/***/ "./src/backends/jolt/operators/cleaner.mjs":
/*!*************************************************!*\
  !*** ./src/backends/jolt/operators/cleaner.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Cleaner: () => (/* binding */ Cleaner)\n/* harmony export */ });\n/* harmony import */ var _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../physics/components/jolt/constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n/* harmony import */ var _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../physics/debug.mjs */ \"./src/physics/debug.mjs\");\n\r\n\r\n\r\nclass Cleaner {\r\n    constructor(backend) {\r\n        this._backend = backend;\r\n    }\r\n\r\n    clean() {\r\n        const cb = this._backend.inBuffer;\r\n        const command = cb.readCommand();\r\n        let ok = true;\r\n\r\n        switch (command) {\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_DESTROY_BODY:\r\n                ok = this._destroyBody(cb);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_DESTROY_SHAPE:\r\n                ok = this._destroyShape(cb);\r\n                break;\r\n        }\r\n\r\n        return ok;\r\n    }\r\n\r\n    destroy() {\r\n        this._backend = null;\r\n    }\r\n\r\n    _destroyBody(cb) {\r\n        const index = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        const backend = this._backend;\r\n        const Jolt = backend.Jolt;\r\n        const tracker = backend.tracker;\r\n        const bodyInterface = backend.bodyInterface;\r\n        const physicsSystem = backend.physicsSystem;\r\n\r\n        const body = tracker.getBodyByPCID(index);\r\n\r\n        if (!body) {\r\n            // Body could have been destroyed already. For example:\r\n            // Disable parent, then manually disable child. The body\r\n            // would get destroyed when parent was disabled. The\r\n            // command for destroy would be issued again, when child is\r\n            // disabled.\r\n            return true;\r\n        }\r\n\r\n        if (body.debugDrawData) {\r\n            Jolt.destroy(body.triContext);\r\n            body.triContext = null;\r\n            body.debugDrawData = null;\r\n        }\r\n\r\n        tracker.stopTrackingBody(body);\r\n\r\n        if (body.motionState) {\r\n            body.motionState = null;\r\n        }\r\n\r\n        const constraints = body.constraints;\r\n        if (constraints) {\r\n            const constraintMap = tracker.constraintMap;\r\n            for (let i = 0, end = constraints.length; i < end; i++) {\r\n                const index = constraints[i];\r\n                const data = constraintMap.get(index);\r\n                const constraint = data.constraint;\r\n                const listener = constraint.listener; // vehicle\r\n                \r\n                constraintMap.delete(index);\r\n                if (listener && Jolt.getPointer(listener) !== 0) {\r\n                    physicsSystem.RemoveStepListener(listener);\r\n                    Jolt.destroy(listener);\r\n                    constraint.listener = null;\r\n                }\r\n                if (Jolt.getPointer(constraint) !== 0) {\r\n                    physicsSystem.RemoveConstraint(constraint);\r\n                }\r\n            }\r\n            body.constraints = null;\r\n\r\n            body.linked?.forEach(linkedBody => {\r\n                if (Jolt.getPointer(linkedBody) !== 0) {\r\n                    bodyInterface.ActivateBody(linkedBody.GetID());\r\n                }\r\n                linkedBody.linked.delete(body);\r\n            });\r\n            body.linked = null;\r\n        }\r\n\r\n        if (body.isCharacter) {\r\n            Jolt.destroy(body);\r\n        } else {\r\n            const id = body.GetID();\r\n            bodyInterface.RemoveBody(id);\r\n            bodyInterface.DestroyBody(id);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    _destroyShape(cb) {\r\n        const backend = this._backend;\r\n        const Jolt = backend.Jolt;\r\n        const tracker = backend.tracker;\r\n        const shapeNumber = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        const shape = tracker.shapeMap.get(shapeNumber);\r\n\r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && !shape) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.warn('Trying to destroy a shape that has already been destroyed');\r\n            return false;\r\n        }\r\n\r\n        Jolt.destroy(shape);\r\n\r\n        tracker.shapeMap.delete(shapeNumber);\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYmFja2VuZHMvam9sdC9vcGVyYXRvcnMvY2xlYW5lci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXlIO0FBQ3RFO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixvRkFBZ0I7QUFDakM7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHFGQUFpQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsc0ZBQWtCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsU0FBUztBQUMvRDtBQUNBO0FBQ0E7QUFDQSxzREFBc0Q7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLHNGQUFrQjtBQUN0RDtBQUNBO0FBQ0EsWUFBWSxxREFBSztBQUNqQixZQUFZLHFEQUFLO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QaHlzaWNzQ29tcG9uZW50cy8uL3NyYy9iYWNrZW5kcy9qb2x0L29wZXJhdG9ycy9jbGVhbmVyLm1qcz9jMzk0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJVRkZFUl9SRUFEX1VJTlQzMiwgQ01EX0RFU1RST1lfQk9EWSwgQ01EX0RFU1RST1lfU0hBUEUgfSBmcm9tIFwiLi4vLi4vLi4vcGh5c2ljcy9jb21wb25lbnRzL2pvbHQvY29uc3RhbnRzLm1qc1wiO1xyXG5pbXBvcnQgeyBEZWJ1ZyB9IGZyb20gXCIuLi8uLi8uLi9waHlzaWNzL2RlYnVnLm1qc1wiO1xyXG5cclxuY2xhc3MgQ2xlYW5lciB7XHJcbiAgICBjb25zdHJ1Y3RvcihiYWNrZW5kKSB7XHJcbiAgICAgICAgdGhpcy5fYmFja2VuZCA9IGJhY2tlbmQ7XHJcbiAgICB9XHJcblxyXG4gICAgY2xlYW4oKSB7XHJcbiAgICAgICAgY29uc3QgY2IgPSB0aGlzLl9iYWNrZW5kLmluQnVmZmVyO1xyXG4gICAgICAgIGNvbnN0IGNvbW1hbmQgPSBjYi5yZWFkQ29tbWFuZCgpO1xyXG4gICAgICAgIGxldCBvayA9IHRydWU7XHJcblxyXG4gICAgICAgIHN3aXRjaCAoY29tbWFuZCkge1xyXG4gICAgICAgICAgICBjYXNlIENNRF9ERVNUUk9ZX0JPRFk6XHJcbiAgICAgICAgICAgICAgICBvayA9IHRoaXMuX2Rlc3Ryb3lCb2R5KGNiKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgY2FzZSBDTURfREVTVFJPWV9TSEFQRTpcclxuICAgICAgICAgICAgICAgIG9rID0gdGhpcy5fZGVzdHJveVNoYXBlKGNiKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIG9rO1xyXG4gICAgfVxyXG5cclxuICAgIGRlc3Ryb3koKSB7XHJcbiAgICAgICAgdGhpcy5fYmFja2VuZCA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgX2Rlc3Ryb3lCb2R5KGNiKSB7XHJcbiAgICAgICAgY29uc3QgaW5kZXggPSBjYi5yZWFkKEJVRkZFUl9SRUFEX1VJTlQzMik7XHJcbiAgICAgICAgY29uc3QgYmFja2VuZCA9IHRoaXMuX2JhY2tlbmQ7XHJcbiAgICAgICAgY29uc3QgSm9sdCA9IGJhY2tlbmQuSm9sdDtcclxuICAgICAgICBjb25zdCB0cmFja2VyID0gYmFja2VuZC50cmFja2VyO1xyXG4gICAgICAgIGNvbnN0IGJvZHlJbnRlcmZhY2UgPSBiYWNrZW5kLmJvZHlJbnRlcmZhY2U7XHJcbiAgICAgICAgY29uc3QgcGh5c2ljc1N5c3RlbSA9IGJhY2tlbmQucGh5c2ljc1N5c3RlbTtcclxuXHJcbiAgICAgICAgY29uc3QgYm9keSA9IHRyYWNrZXIuZ2V0Qm9keUJ5UENJRChpbmRleCk7XHJcblxyXG4gICAgICAgIGlmICghYm9keSkge1xyXG4gICAgICAgICAgICAvLyBCb2R5IGNvdWxkIGhhdmUgYmVlbiBkZXN0cm95ZWQgYWxyZWFkeS4gRm9yIGV4YW1wbGU6XHJcbiAgICAgICAgICAgIC8vIERpc2FibGUgcGFyZW50LCB0aGVuIG1hbnVhbGx5IGRpc2FibGUgY2hpbGQuIFRoZSBib2R5XHJcbiAgICAgICAgICAgIC8vIHdvdWxkIGdldCBkZXN0cm95ZWQgd2hlbiBwYXJlbnQgd2FzIGRpc2FibGVkLiBUaGVcclxuICAgICAgICAgICAgLy8gY29tbWFuZCBmb3IgZGVzdHJveSB3b3VsZCBiZSBpc3N1ZWQgYWdhaW4sIHdoZW4gY2hpbGQgaXNcclxuICAgICAgICAgICAgLy8gZGlzYWJsZWQuXHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGJvZHkuZGVidWdEcmF3RGF0YSkge1xyXG4gICAgICAgICAgICBKb2x0LmRlc3Ryb3koYm9keS50cmlDb250ZXh0KTtcclxuICAgICAgICAgICAgYm9keS50cmlDb250ZXh0ID0gbnVsbDtcclxuICAgICAgICAgICAgYm9keS5kZWJ1Z0RyYXdEYXRhID0gbnVsbDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRyYWNrZXIuc3RvcFRyYWNraW5nQm9keShib2R5KTtcclxuXHJcbiAgICAgICAgaWYgKGJvZHkubW90aW9uU3RhdGUpIHtcclxuICAgICAgICAgICAgYm9keS5tb3Rpb25TdGF0ZSA9IG51bGw7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBjb25zdHJhaW50cyA9IGJvZHkuY29uc3RyYWludHM7XHJcbiAgICAgICAgaWYgKGNvbnN0cmFpbnRzKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGNvbnN0cmFpbnRNYXAgPSB0cmFja2VyLmNvbnN0cmFpbnRNYXA7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwLCBlbmQgPSBjb25zdHJhaW50cy5sZW5ndGg7IGkgPCBlbmQ7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgaW5kZXggPSBjb25zdHJhaW50c1tpXTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBjb25zdHJhaW50TWFwLmdldChpbmRleCk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjb25zdHJhaW50ID0gZGF0YS5jb25zdHJhaW50O1xyXG4gICAgICAgICAgICAgICAgY29uc3QgbGlzdGVuZXIgPSBjb25zdHJhaW50Lmxpc3RlbmVyOyAvLyB2ZWhpY2xlXHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIGNvbnN0cmFpbnRNYXAuZGVsZXRlKGluZGV4KTtcclxuICAgICAgICAgICAgICAgIGlmIChsaXN0ZW5lciAmJiBKb2x0LmdldFBvaW50ZXIobGlzdGVuZXIpICE9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGh5c2ljc1N5c3RlbS5SZW1vdmVTdGVwTGlzdGVuZXIobGlzdGVuZXIpO1xyXG4gICAgICAgICAgICAgICAgICAgIEpvbHQuZGVzdHJveShsaXN0ZW5lcik7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3RyYWludC5saXN0ZW5lciA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBpZiAoSm9sdC5nZXRQb2ludGVyKGNvbnN0cmFpbnQpICE9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGh5c2ljc1N5c3RlbS5SZW1vdmVDb25zdHJhaW50KGNvbnN0cmFpbnQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGJvZHkuY29uc3RyYWludHMgPSBudWxsO1xyXG5cclxuICAgICAgICAgICAgYm9keS5saW5rZWQ/LmZvckVhY2gobGlua2VkQm9keSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoSm9sdC5nZXRQb2ludGVyKGxpbmtlZEJvZHkpICE9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYm9keUludGVyZmFjZS5BY3RpdmF0ZUJvZHkobGlua2VkQm9keS5HZXRJRCgpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGxpbmtlZEJvZHkubGlua2VkLmRlbGV0ZShib2R5KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGJvZHkubGlua2VkID0gbnVsbDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChib2R5LmlzQ2hhcmFjdGVyKSB7XHJcbiAgICAgICAgICAgIEpvbHQuZGVzdHJveShib2R5KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zdCBpZCA9IGJvZHkuR2V0SUQoKTtcclxuICAgICAgICAgICAgYm9keUludGVyZmFjZS5SZW1vdmVCb2R5KGlkKTtcclxuICAgICAgICAgICAgYm9keUludGVyZmFjZS5EZXN0cm95Qm9keShpZCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICBfZGVzdHJveVNoYXBlKGNiKSB7XHJcbiAgICAgICAgY29uc3QgYmFja2VuZCA9IHRoaXMuX2JhY2tlbmQ7XHJcbiAgICAgICAgY29uc3QgSm9sdCA9IGJhY2tlbmQuSm9sdDtcclxuICAgICAgICBjb25zdCB0cmFja2VyID0gYmFja2VuZC50cmFja2VyO1xyXG4gICAgICAgIGNvbnN0IHNoYXBlTnVtYmVyID0gY2IucmVhZChCVUZGRVJfUkVBRF9VSU5UMzIpO1xyXG4gICAgICAgIGNvbnN0IHNoYXBlID0gdHJhY2tlci5zaGFwZU1hcC5nZXQoc2hhcGVOdW1iZXIpO1xyXG5cclxuICAgICAgICBpZiAoRGVidWcuZGV2ICYmICFzaGFwZSkge1xyXG4gICAgICAgICAgICBEZWJ1Zy53YXJuKCdUcnlpbmcgdG8gZGVzdHJveSBhIHNoYXBlIHRoYXQgaGFzIGFscmVhZHkgYmVlbiBkZXN0cm95ZWQnKTtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgSm9sdC5kZXN0cm95KHNoYXBlKTtcclxuXHJcbiAgICAgICAgdHJhY2tlci5zaGFwZU1hcC5kZWxldGUoc2hhcGVOdW1iZXIpO1xyXG5cclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IHsgQ2xlYW5lciB9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/backends/jolt/operators/cleaner.mjs\n");

/***/ }),

/***/ "./src/backends/jolt/operators/creator.mjs":
/*!*************************************************!*\
  !*** ./src/backends/jolt/operators/creator.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Creator: () => (/* binding */ Creator)\n/* harmony export */ });\n/* harmony import */ var _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../physics/components/jolt/constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n/* harmony import */ var _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../physics/debug.mjs */ \"./src/physics/debug.mjs\");\n/* harmony import */ var _motion_state_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../motion-state.mjs */ \"./src/backends/jolt/motion-state.mjs\");\n\r\n\r\n\r\n\r\nclass Creator {\r\n    constructor(backend) {\r\n        this._backend = backend;\r\n\r\n        this.createPhysicsSystem();\r\n    }\r\n\r\n    create(meshBuffers) {\r\n        const cb = this._backend.inBuffer;\r\n        const command = cb.readCommand();\r\n        let ok = true;\r\n\r\n        switch (command) {\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_CREATE_BODY:\r\n                ok = this._createBody(cb, meshBuffers);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_CREATE_SOFT_BODY:\r\n                ok = this._createSoftBody(cb, meshBuffers);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_CREATE_GROUPS:\r\n                ok = this._createGroups(cb);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_CREATE_CONSTRAINT:\r\n                ok = this._createConstraint(cb);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_CREATE_CHAR:\r\n                ok = this._createCharacter(cb);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_CREATE_SHAPE:\r\n                ok = this._createShape(cb, meshBuffers);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_CREATE_VEHICLE:\r\n                ok = this._createVehicle(cb);\r\n                break;\r\n\r\n            default:\r\n                _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(`Invalid command: ${ command }`);\r\n                return false;\r\n        }\r\n\r\n        return ok;\r\n    }\r\n\r\n    createPhysicsSystem() {\r\n        const backend = this._backend;\r\n        const config = backend.config;\r\n        // const layerPairs = config.layerPairs;\r\n        // const layers = config.layers;\r\n        // const layers = config.objectLayers;\r\n        // const layersCount = layers.length;\r\n        const Jolt = backend.Jolt;\r\n\r\n        this._joltVec3 = new Jolt.Vec3();\r\n        this._joltVec3_2 = new Jolt.Vec3();\r\n        this._joltQuat = new Jolt.Quat();\r\n\r\n        const bpMap = new Map();\r\n\r\n        const pairs = config.objectLayerPairs;\r\n        const pairsCount = pairs.length * 0.5;\r\n        const objectFilter = new Jolt.ObjectLayerPairFilterTable(pairsCount);\r\n        for (let i = 0; i < pairsCount * 2; i += 2) {\r\n            // const pair = pairs[i];\r\n            objectFilter.EnableCollision(pairs[i], pairs[i + 1]);\r\n        }\r\n\r\n        const bpLayers = config.broadPhaseLayers;\r\n        const bpLayerCount = bpLayers.length;\r\n        const bpInterface = new Jolt.BroadPhaseLayerInterfaceTable(pairsCount, bpLayerCount);\r\n        for (let i = 0; i < bpLayerCount; i++) {\r\n            const id = bpLayers[i];\r\n            const bpLayer = new Jolt.BroadPhaseLayer(id);\r\n            bpMap.set(id, bpLayer);\r\n        }\r\n\r\n        // Map object layers to broadphase layers\r\n        let objLayerCount = 0;\r\n        // for (const [objLayer, bpLayers] of Object.entries(config.mapObjectToBroadPhaseLayer)) {\r\n        const objLayers = config.mapObjectToBroadPhaseLayer;\r\n        for (let i = 0; i < objLayers.length; i += 2) {\r\n            objLayerCount++;\r\n            // for (let i = 0; i < bpLayers.length; i += 2) {\r\n            bpInterface.MapObjectToBroadPhaseLayer(objLayers[i], bpMap.get(objLayers[i + 1]));\r\n            // }\r\n        }\r\n        // Broadphase layers have been copied to the bpInterface, so we can destroy those\r\n        bpMap.forEach(bpLayer => {\r\n            Jolt.destroy(bpLayer);\r\n        });\r\n        bpMap.clear();\r\n\r\n        const settings = new Jolt.JoltSettings();\r\n        settings.mObjectLayerPairFilter = objectFilter;\r\n        settings.mBroadPhaseLayerInterface = bpInterface;\r\n        settings.mObjectVsBroadPhaseLayerFilter = new Jolt.ObjectVsBroadPhaseLayerFilterTable(settings.mBroadPhaseLayerInterface, bpLayerCount, settings.mObjectLayerPairFilter, objLayerCount);\r\n        const joltInterface = new Jolt.JoltInterface(settings);\r\n        Jolt.destroy(settings);\r\n\r\n        const physicsSystem = joltInterface.GetPhysicsSystem();\r\n        const systemSettings = physicsSystem.GetPhysicsSettings();\r\n        \r\n        systemSettings.mBaumgarte = config.baumgarte;\r\n        systemSettings.mBodyPairCacheCosMaxDeltaRotationDiv2 = config.bodyPairCacheCosMaxDeltaRotationDiv2;\r\n        systemSettings.mBodyPairCacheMaxDeltaPositionSq = config.bodyPairCacheMaxDeltaPositionSq;\r\n        systemSettings.mContactNormalCosMaxDeltaRotation = config.contactNormalCosMaxDeltaRotation;\r\n        systemSettings.mContactPointPreserveLambdaMaxDistSq = config.contactPointPreserveLambdaMaxDistSq;\r\n        systemSettings.mDeterministicSimulation = config.deterministicSimulation;\r\n        systemSettings.mLinearCastMaxPenetration = config.linearCastMaxPenetration;\r\n        systemSettings.mLinearCastThreshold = config.linearCastThreshold;\r\n        systemSettings.mManifoldToleranceSq = config.manifoldToleranceSq;\r\n        systemSettings.mMaxInFlightBodyPairs = config.maxInFlightBodyPairs;\r\n        systemSettings.mMaxPenetrationDistance = config.maxPenetrationDistance;\r\n        systemSettings.mMinVelocityForRestitution = config.minVelocityForRestitution;\r\n        systemSettings.mNumPositionSteps = config.numPositionSteps;\r\n        systemSettings.mNumVelocitySteps = config.numVelocitySteps;\r\n        systemSettings.mPenetrationSlop = config.penetrationSlop;\r\n        systemSettings.mPointVelocitySleepThreshold = config.pointVelocitySleepThreshold;\r\n        systemSettings.mSpeculativeContactDistance = config.speculativeContactDistance;\r\n        systemSettings.mStepListenerBatchesPerJob = config.stepListenerBatchesPerJob;\r\n        systemSettings.mStepListenersBatchSize = config.stepListenersBatchSize;\r\n        systemSettings.mTimeBeforeSleep = config.timeBeforeSleep;\r\n\r\n        systemSettings.mConstraintWarmStart = config.constraintWarmStart;\r\n        systemSettings.mUseBodyPairContactCache = config.useBodyPairContactCache;\r\n        systemSettings.mUseManifoldReduction = config.useManifoldReduction;\r\n        systemSettings.mUseLargeIslandSplitter = config.useLargeIslandSplitter;\r\n        systemSettings.mAllowSleeping = config.allowSleeping;\r\n        systemSettings.mCheckActiveEdges = config.checkActiveEdges;\r\n\r\n        physicsSystem.SetPhysicsSettings(systemSettings);\r\n        \r\n        backend.joltInterface = joltInterface;\r\n        backend.physicsSystem = physicsSystem;\r\n\r\n        backend.bpFilter = new Jolt.DefaultBroadPhaseLayerFilter(joltInterface.GetObjectVsBroadPhaseLayerFilter(), 1);\r\n        backend.objFilter = new Jolt.DefaultObjectLayerFilter(joltInterface.GetObjectLayerPairFilter(), 1);\r\n        backend.bodyFilter = new Jolt.BodyFilter();\r\n        backend.shapeFilter = new Jolt.ShapeFilter();\r\n        backend.bodyList = new Jolt.BodyIDVector();\r\n    }\r\n\r\n    createShapeSettings(shape, ...attr) {\r\n        const Jolt = this._backend.Jolt;\r\n\r\n        switch (shape) {\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SHAPE_BOX:\r\n                return new Jolt.BoxShapeSettings(attr[0] /* half extent */, attr[1] /* convex radius */);\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SHAPE_SPHERE:\r\n                return new Jolt.SphereShapeSettings(attr[0] /* radius */);\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SHAPE_CAPSULE:\r\n                return new Jolt.CapsuleShapeSettings(attr[0] /* half height */, attr[1] /* radius */);\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SHAPE_CYLINDER:\r\n                return new Jolt.CylinderShapeSettings(attr[0] /* half height */, attr[1] /* radius */, attr[2] /* convex radius */);\r\n\r\n            default:\r\n                _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.warnOnce(`Unrecognized shape: ${ shape }`);\r\n                return null;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        Jolt.destroy(this._joltVec3);\r\n        Jolt.destroy(this._joltQuat);\r\n    }\r\n\r\n    // TODO\r\n    // convert creation methods to static\r\n\r\n    _createShape(cb, meshBuffers) {\r\n        // shape number\r\n        const num = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n\r\n        const shapeSettings = this._createShapeSettings(cb, meshBuffers);\r\n        if (!shapeSettings)\r\n            return false;\r\n\r\n        const shape = shapeSettings.Create().Get();\r\n\r\n        this._backend.tracker.shapeMap.set(num, shape);\r\n\r\n        return true;\r\n    }\r\n\r\n    _createBody(cb, meshBuffers) {\r\n        const backend = this._backend;\r\n        const jv = this._joltVec3;\r\n        const jq = this._joltQuat;\r\n        const Jolt = backend.Jolt;\r\n\r\n        // ------------ SHAPE PROPS ----------------\r\n\r\n        const shapeSettings = this._createShapeSettings(cb, meshBuffers);\r\n        if (!shapeSettings) {\r\n            return false;\r\n        }\r\n        \r\n        const shape = shapeSettings.Create().Get();\r\n\r\n        // ------------ BODY PROPS ----------------\r\n\r\n        // PCID\r\n        const index = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n\r\n        // position\r\n        jv.FromBuffer(cb);\r\n\r\n        // rotation\r\n        jq.FromBuffer(cb);\r\n\r\n        // motion type\r\n        const motionType = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n\r\n        // use motion state\r\n        const useMotionState = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n\r\n        // object layer\r\n        // const layer = cb.read(BUFFER_READ_UINT16);\r\n        // const objectLayer = backend.getBitValue(layer);\r\n        const objectLayer = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        const bodyCreationSettings = new Jolt.BodyCreationSettings(shape, jv, jq, motionType, objectLayer);\r\n\r\n        bodyCreationSettings.mLinearVelocity = jv.FromBuffer(cb);\r\n        bodyCreationSettings.mAngularVelocity = jv.FromBuffer(cb);\r\n        bodyCreationSettings.mMaxLinearVelocity = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        bodyCreationSettings.mMaxAngularVelocity = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        bodyCreationSettings.mFriction = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        bodyCreationSettings.mRestitution = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        bodyCreationSettings.mLinearDamping = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        bodyCreationSettings.mAngularDamping = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        bodyCreationSettings.mGravityFactor = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        bodyCreationSettings.mInertiaMultiplier = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        bodyCreationSettings.mAllowedDOFs = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n        bodyCreationSettings.mAllowDynamicOrKinematic = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n        bodyCreationSettings.mIsSensor = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n        bodyCreationSettings.mMotionQuality = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n        bodyCreationSettings.mAllowSleeping = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n        \r\n        // collision group\r\n        const group = cb.flag ? cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32) : null;\r\n\r\n        // collision sub group\r\n        const subGroup = cb.flag ? cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32) : null;\r\n\r\n        if (group !== null && subGroup !== null) {\r\n            const table = backend.groupFilterTables[group];\r\n\r\n            if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n                let ok = _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.assert(!!table, `Trying to set a filter group that does not exist: ${ group }`);\r\n                ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.assert((subGroup <= table?.maxIndex), `Trying to set sub group that is over the filter group table size: ${ subGroup }`);\r\n                if (!ok) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            const mCollisionGroup = bodyCreationSettings.mCollisionGroup;\r\n            mCollisionGroup.SetGroupFilter(table);\r\n            mCollisionGroup.SetGroupID(group);\r\n            mCollisionGroup.SetSubGroupID(subGroup);\r\n        }\r\n\r\n        // override mass properties\r\n        const selectedMethod = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n        if (selectedMethod !== Jolt.EOverrideMassProperties_CalculateMassAndInertia) {\r\n            bodyCreationSettings.mOverrideMassProperties = selectedMethod;\r\n\r\n            const mass = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n                const ok = _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkFloatPositive(mass, `invalid mass: ${ mass }`);\r\n                if (!ok) return false;\r\n            }\r\n            bodyCreationSettings.mMassPropertiesOverride.mMass = mass;\r\n\r\n            if (selectedMethod === Jolt.EOverrideMassProperties_MassAndInertiaProvided) {\r\n                jv.FromBuffer(cb);\r\n                jq.FromBuffer(cb);\r\n\r\n                const m4 = Jolt.Mat44.sRotationTranslation(jq, jv);\r\n                bodyCreationSettings.mMassPropertiesOverride.mInertia = m4;\r\n                Jolt.destroy(m4);\r\n            }\r\n        }\r\n\r\n        const bodyInterface = backend.bodyInterface;\r\n        const body = bodyInterface.CreateBody(bodyCreationSettings);\r\n        bodyInterface.AddBody(body.GetID(), Jolt.Activate);\r\n\r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n            body.debugDraw = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n        }\r\n\r\n        // Destroy shape settings after body is created:\r\n        Jolt.destroy(shapeSettings);\r\n        Jolt.destroy(bodyCreationSettings);\r\n\r\n        if (backend.config.useMotionStates) {\r\n            if (useMotionState && (motionType === Jolt.EMotionType_Dynamic || motionType === Jolt.EMotionType_Kinematic)) {\r\n                body.motionState = new _motion_state_mjs__WEBPACK_IMPORTED_MODULE_2__.MotionState(body);\r\n            }\r\n        }\r\n\r\n        backend.tracker.add(body, index);\r\n\r\n        return true;\r\n    }\r\n\r\n    _createSoftBody(cb, meshBuffers) {\r\n        const backend = this._backend;\r\n        const Jolt = backend.Jolt;\r\n        const jv = this._joltVec3;\r\n        const jq = this._joltQuat;\r\n\r\n        // ------------ SHAPE PROPS ----------------\r\n\r\n        const shapeSettings = Creator.createSoftBodyShapeSettings(cb, meshBuffers, Jolt);\r\n        if (!shapeSettings) {\r\n            return false;\r\n        }\r\n        \r\n        // ------------ BODY PROPS ----------------\r\n\r\n        // PCID\r\n        const index = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n            let ok = _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkUint(index, `invalid body index: ${ index }`);\r\n            if (!ok) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // position\r\n        jv.FromBuffer(cb);\r\n\r\n        // rotation\r\n        jq.FromBuffer(cb);\r\n\r\n        // const objectLayer = backend.getBitValue(layer);\r\n        const bodyCreationSettings = new Jolt.SoftBodyCreationSettings(shapeSettings, jv, jq);\r\n\r\n        // collision group\r\n        const group = cb.flag ? cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32) : null;\r\n\r\n        // collision sub group\r\n        const subGroup = cb.flag ? cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32) : null;\r\n\r\n        bodyCreationSettings.mObjectLayer = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT16);\r\n        bodyCreationSettings.mNumIterations = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        bodyCreationSettings.mLinearDamping = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        bodyCreationSettings.mMaxLinearVelocity = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        bodyCreationSettings.mRestitution = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        bodyCreationSettings.mFriction = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        bodyCreationSettings.mPressure = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        bodyCreationSettings.mGravityFactor = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        bodyCreationSettings.mUpdatePosition = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n        bodyCreationSettings.mMakeRotationIdentity = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n        bodyCreationSettings.mAllowSleeping = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n        \r\n        // debug draw\r\n        const debugDraw = _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev ? cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL) : false;\r\n\r\n        if (group !== null && subGroup !== null) {\r\n            const table = backend.groupFilterTables[group];\r\n\r\n            if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n                let ok = _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkUint(group, `Invalid filter group: ${ group }`);\r\n                ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkUint(subGroup, `Invalid filter group: ${ subGroup }`);\r\n                ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.assert(!!table, `Trying to set a filter group that does not exist: ${ group }`);\r\n                ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.assert((subGroup <= table?.maxIndex), `Trying to set sub group that is over the filter group table size: ${ subGroup }`);\r\n                if (!ok) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            const mCollisionGroup = bodyCreationSettings.mCollisionGroup;\r\n            mCollisionGroup.SetGroupFilter(table);\r\n            mCollisionGroup.SetGroupID(group);\r\n            mCollisionGroup.SetSubGroupID(subGroup);\r\n        }\r\n\r\n        const bodyInterface = backend.bodyInterface;\r\n        const body = bodyInterface.CreateSoftBody(bodyCreationSettings);\r\n        bodyInterface.AddBody(body.GetID(), Jolt.Activate);\r\n\r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n            body.debugDraw = debugDraw;\r\n        }\r\n\r\n        // Destroy shape settings after body is created:\r\n        Jolt.destroy(bodyCreationSettings);\r\n\r\n        backend.tracker.add(body, index);\r\n\r\n        return true;\r\n    }\r\n\r\n    _createVehicle(cb) {\r\n        const backend = this._backend;\r\n        const Jolt = backend.Jolt;\r\n        const tracker = backend.tracker;\r\n        const physicsSystem = backend.physicsSystem;\r\n        const jv = this._joltVec3;\r\n        const index = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        const type = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n        const isWheeled = type === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.VEHICLE_TYPE_WHEEL || type === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.VEHICLE_TYPE_MOTORCYCLE;\r\n\r\n        try {\r\n            const destroySettings = (list) => {\r\n                for (let i = 0; i < list.length; i++) {\r\n                    Jolt.destroy(list[i]);\r\n                }\r\n            };\r\n\r\n            const updateCurve = (curve) => {\r\n                curve.Clear();\r\n                const count = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n                for (let i = 0; i < count; i++) {\r\n                    const key = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                    const val = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                    curve.AddPoint(key, val);\r\n\r\n                    // curve.AddPoint(\r\n                    //     cb.read(BUFFER_READ_FLOAT32),\r\n                    //     cb.read(BUFFER_READ_FLOAT32)\r\n                    // );\r\n                }\r\n            };\r\n\r\n            const updateGears = (gears) => {\r\n                const count = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n                gears.clear();\r\n                for (let i = 0; i < count; i++) {\r\n                    gears.push_back(cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32));\r\n                }\r\n            }\r\n\r\n            const updateWheel = (wheel) => {\r\n                wheel.mPosition = jv.FromBuffer(cb);\r\n                wheel.mSuspensionForcePoint = jv.FromBuffer(cb);\r\n                wheel.mSuspensionDirection = jv.FromBuffer(cb);\r\n                wheel.mSteeringAxis = jv.FromBuffer(cb);\r\n                wheel.mWheelUp = jv.FromBuffer(cb);\r\n                wheel.mWheelForward = jv.FromBuffer(cb);\r\n                wheel.mSuspensionMinLength = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                wheel.mSuspensionMaxLength = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                wheel.mSuspensionPreloadLength = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                wheel.mRadius = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                wheel.mWidth = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                wheel.mEnableSuspensionForcePoint = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n\r\n                const spring = wheel.mSuspensionSpring;\r\n                spring.mMode = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n                spring.mFrequency = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                spring.mStiffness = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                spring.mDamping = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n\r\n                // longitudinal friction\r\n                if (cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL)) {\r\n                    updateCurve(wheel.mLongitudinalFriction);\r\n                }\r\n\r\n                // lateral friction\r\n                if (cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL)) {\r\n                    updateCurve(wheel.mLateralFriction);\r\n                }                    \r\n\r\n                if (isWheeled) {\r\n                    wheel.mInertia = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                    wheel.mAngularDamping = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                    wheel.mMaxSteerAngle = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                    wheel.mMaxBrakeTorque = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                    wheel.mMaxHandBrakeTorque = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                }\r\n            }\r\n\r\n            // general\r\n            const constraintSettings = new Jolt.VehicleConstraintSettings();\r\n            constraintSettings.mNumVelocityStepsOverride = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT16);\r\n            constraintSettings.mNumPositionStepsOverride = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT16);\r\n            constraintSettings.mUp = jv.FromBuffer(cb);\r\n            constraintSettings.mForward = jv.FromBuffer(cb);\r\n            constraintSettings.mMaxPitchRollAngle = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n\r\n            // controller\r\n            let controllerSettings;\r\n            if (isWheeled) {\r\n                controllerSettings = type === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.VEHICLE_TYPE_WHEEL ?\r\n                    new Jolt.WheeledVehicleControllerSettings() :\r\n                    new Jolt.MotorcycleControllerSettings()\r\n            } else {\r\n                constraintSettings = new Jolt.TrackedVehicleControllerSettings();\r\n            }\r\n\r\n            // engine\r\n            const engine = controllerSettings.mEngine;\r\n            engine.mMaxTorque = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            engine.mMinRPM = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            engine.mMaxRPM = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            engine.mInertia = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            engine.mAngularDamping = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n\r\n            if (cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL)) {\r\n                updateCurve(engine.mNormalizedTorque);\r\n            }\r\n\r\n            // transmission\r\n            const transmission = controllerSettings.mTransmission;\r\n            transmission.mMode = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n            transmission.mSwitchTime = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            transmission.mClutchReleaseTime = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            transmission.mSwitchLatency = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            transmission.mShiftUpRPM = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            transmission.mShiftDownRPM = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            transmission.mClutchStrength = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            updateGears(transmission.mGearRatios);\r\n            updateGears(transmission.mReverseGearRatios);\r\n    \r\n            // wheels\r\n            const wheelsCount = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n            const mWheels = constraintSettings.mWheels;\r\n            const Wheel = isWheeled ? Jolt.WheelSettingsWV : Jolt.WheelSettingsTV;\r\n            mWheels.clear();\r\n            for (let i = 0; i < wheelsCount; i++) {\r\n                const wheel = new Wheel();\r\n                updateWheel(wheel);\r\n                mWheels.push_back(wheel);\r\n            }\r\n\r\n            if (!isWheeled) {\r\n                // get tracks and map wheels\r\n                const tracksCount = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n                for (let t = 0; t < tracksCount; t++) {\r\n                    const track = controllerSettings.get_mTracks(t);\r\n                    const twc = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32); // track wheels count\r\n\r\n                    // Make the last wheel in the track to be a driven wheel (connected to engine)\r\n                    track.mDrivenWheel = twc - 1;\r\n\r\n                    for (let i = 0; i < twc; i++) {\r\n                        track.mWheels.push_back(cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32));\r\n                    }\r\n                }\r\n            }\r\n\r\n            const diffs = [];\r\n            if (isWheeled) {\r\n                // differentials\r\n                const count = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n                if (count > 0) {\r\n                    const differentials = controllerSettings.mDifferentials;\r\n\r\n                    for (let i = 0; i < count; i++) {\r\n                        const settings = new Jolt.VehicleDifferentialSettings();\r\n\r\n                        settings.mLeftWheel = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_INT32);\r\n                        settings.mRightWheel = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_INT32);\r\n                        settings.mDifferentialRatio = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                        settings.mLeftRightSplit = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                        settings.mLimitedSlipRatio = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                        settings.mEngineTorqueRatio = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n\r\n                        diffs.push(settings);\r\n                        differentials.push_back(settings);\r\n                    }\r\n                }\r\n\r\n                controllerSettings.mDifferentialLimitedSlipRatio = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n\r\n                if (type === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.VEHICLE_TYPE_MOTORCYCLE) {\r\n                    controllerSettings.mMaxLeanAngle = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                    controllerSettings.mLeanSpringConstant = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                    controllerSettings.mLeanSpringDamping = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                    controllerSettings.mLeanSpringIntegrationCoefficient = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                    controllerSettings.mLeanSpringIntegrationCoefficientDecay = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                    controllerSettings.mLeanSmoothingFactor = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                }\r\n            }\r\n\r\n            // anti roll bars\r\n            const barsCount = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n            const mAntiRollBars = constraintSettings.mAntiRollBars;\r\n            const bars = [];\r\n            for (let i = 0; i < barsCount; i++) {\r\n                const bar = new Jolt.VehicleAntiRollBar();\r\n\r\n                bar.mLeftWheel = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n                bar.mRightWheel = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n                bar.mStiffness = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n\r\n                bars.push(bar);\r\n                mAntiRollBars.push_back(bar);\r\n            }\r\n\r\n            constraintSettings.mController = controllerSettings;\r\n\r\n            // constraint\r\n            const body = tracker.getBodyByPCID(index);\r\n            const constraint = new Jolt.VehicleConstraint(body, constraintSettings);\r\n            const castType = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n            const layer = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n\r\n            // For backend to write wheels isometry\r\n            body.isVehicle = true;\r\n\r\n            // wheels contact tester\r\n            let tester;\r\n            switch (castType) {\r\n                case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.VEHICLE_CAST_TYPE_RAY: {\r\n                    jv.FromBuffer(cb);\r\n                    const maxAngle = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                    tester = new Jolt.VehicleCollisionTesterRay(layer, jv, maxAngle);\r\n                    break;\r\n                }\r\n                case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.VEHICLE_CAST_TYPE_SPHERE: {\r\n                    jv.FromBuffer(cb);\r\n                    const maxAngle = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                    const radius = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                    tester = new Jolt.VehicleCollisionTesterCastSphere(layer, radius, jv, maxAngle);\r\n                    break;\r\n                }\r\n                case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.VEHICLE_CAST_TYPE_CYLINDER: {\r\n                    const fraction = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                    tester = new Jolt.VehicleCollisionTesterCastCylinder(layer, fraction);\r\n                    break;\r\n                }\r\n                default:\r\n                    _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(`Unrecognized cast type: ${ castType }`);\r\n                    return false;\r\n            }\r\n            constraint.SetVehicleCollisionTester(tester);\r\n\r\n            // events\r\n            if (backend.config.vehicleContactEventsEnabled) {\r\n                backend.listener.initVehicleEvents(constraint);\r\n            }\r\n            \r\n            physicsSystem.AddConstraint(constraint);\r\n            \r\n            const listener = new Jolt.VehicleConstraintStepListener(constraint);\r\n            physicsSystem.AddStepListener(listener);\r\n\r\n            // add references for Cleaner operator\r\n            body.constraints = [index];\r\n            constraint.listener = listener;\r\n\r\n            let Controller;\r\n            if (isWheeled) {\r\n                Controller = type === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.VEHICLE_TYPE_WHEEL ? \r\n                    Jolt.WheeledVehicleController : \r\n                    Jolt.MotorcycleController;\r\n            } else {\r\n                Controller = Jolt.TrackedVehicleController;\r\n            }\r\n            constraint.controller = Jolt.castObject(constraint.GetController(), Controller);\r\n            constraint.wheelsCount = wheelsCount;\r\n\r\n            tracker.addConstraint(index, constraint, body);\r\n\r\n            destroySettings(diffs);\r\n            destroySettings(bars);\r\n\r\n        } catch (e) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(e);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    _createGroups(cb) {\r\n        const backend = this._backend;\r\n        const Jolt = backend.Jolt;\r\n        const groupsCount = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n            let ok = _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkUint(groupsCount, `Invalid filter groups count: ${ groupsCount }`);\r\n            ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.assert(groupsCount > 0, `Invalid filter groups count: ${ groupsCount }`);\r\n            if (!ok)\r\n                return false\r\n        }\r\n        \r\n        for (let i = 0; i < groupsCount; i++) {\r\n            const subGroupsCount = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32)\r\n            const table = new Jolt.GroupFilterTable(subGroupsCount);\r\n            backend.groupFilterTables.push(table);\r\n\r\n            if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n                const ok = _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkUint(subGroupsCount, `Invalid sub group count: ${ subGroupsCount }`);\r\n                if (!ok)\r\n                    return false;\r\n                table.maxIndex = subGroupsCount - 1; // for debug test in debug mode when creating a body\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    _createShapeSettings(cb, meshBuffers) {\r\n        const Jolt = this._backend.Jolt;\r\n        const jv = this._joltVec3;\r\n        const jq = this._joltQuat;\r\n        const shapeType = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n\r\n        // scale\r\n        const useScale = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n        let sx, sy, sz\r\n        if (useScale) {\r\n            sx = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            sy = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            sz = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            \r\n            if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n                let ok = _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkFloat(sx, `Invalid scale X: ${ sx }`);\r\n                ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkFloat(sy, `Invalid scale Y: ${ sy }`);\r\n                ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkFloat(sz, `Invalid scale Z: ${ sz }`);\r\n                if (!ok) {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n\r\n        let settings, hh, r, cr;\r\n        switch (shapeType) {\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SHAPE_BOX:\r\n                jv.FromBuffer(cb, true);\r\n                cr = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n                    const ok = _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkFloatPositive(cr, `invalid convex radius: ${ cr }`);\r\n                    if (!ok) {\r\n                        return null;\r\n                    }\r\n                }\r\n                settings = this.createShapeSettings(shapeType, jv, cr);\r\n                break;\r\n            \r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SHAPE_CAPSULE:\r\n                hh = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                r = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n                    let ok = _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkFloatPositive(hh, `invalid half height: ${ hh }`);\r\n                    ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkFloatPositive(r, `invalid radius: ${ r }`);\r\n                    if (useScale) {\r\n                        ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.assert((sx === sy) && (sy === sz), `Capsule shape scale must be uniform: ${ sx }, ${ sy }, ${ sz }`);\r\n                    }\r\n                    if (!ok) {\r\n                        return null;\r\n                    }\r\n                }\r\n                settings = this.createShapeSettings(shapeType, hh, r);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SHAPE_CYLINDER:\r\n                hh = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                r = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                cr = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n                    let ok = _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkFloatPositive(hh, `invalid half height: ${ hh }`);\r\n                    ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkFloatPositive(r, `invalid radius: ${ r }`);\r\n                    ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkFloatPositive(cr, `invalid convex radius: ${ cr }`);\r\n                    if (useScale) {\r\n                        ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.assert(sx === sz, `Cylinder shape scale must be uniform in XZ plane: ${ sx }, ${ sz }`);\r\n                    }\r\n                    if (!ok) {\r\n                        return null;\r\n                    }\r\n                }\r\n                settings = this.createShapeSettings(shapeType, hh, r, cr);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SHAPE_SPHERE:\r\n                r = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n                    let ok = _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkFloatPositive(r, `invalid radius: ${ r }`);\r\n                    if (useScale) {\r\n                        ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.assert((sx === sy) && (sy === sz), `Sphere shape scale must be uniform: ${ sx }, ${ sy }, ${ sz }`);\r\n                    }\r\n                    if (!ok) {\r\n                        return null;\r\n                    }\r\n                }\r\n                settings = this.createShapeSettings(shapeType, r);\r\n                break;\r\n\r\n            // intentional fall-through\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SHAPE_MESH:\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SHAPE_CONVEX_HULL:\r\n                settings = this._createMeshShapeSettings(cb, meshBuffers, shapeType);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SHAPE_STATIC_COMPOUND:\r\n                settings = this._createStaticCompoundShapeSettings(cb, meshBuffers);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SHAPE_HEIGHTFIELD:\r\n                settings = this._createHeightFieldSettings(cb, meshBuffers);\r\n                break;\r\n\r\n            default:\r\n                _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.warn('Invalid shape type', shapeType);\r\n                return null;\r\n        }\r\n\r\n        if (!settings) {\r\n            return null;\r\n        }\r\n\r\n        if (shapeType === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SHAPE_STATIC_COMPOUND) {\r\n            const compoundSettings = new Jolt.StaticCompoundShapeSettings();\r\n    \r\n            for (let i = 0, end = settings.length; i < end; i += 3) {\r\n                const childSettings = settings[i];\r\n                const pos = settings[i + 1];\r\n                const rot = settings[i + 2];\r\n    \r\n                jv.Set(pos.x, pos.y, pos.z);\r\n                jq.Set(rot.x, rot.y, rot.z, rot.w);\r\n    \r\n                compoundSettings.AddShape(jv, jq, childSettings);\r\n            }\r\n\r\n            settings = compoundSettings;\r\n        }\r\n        \r\n        const isCompoundChild = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n        if (!isCompoundChild) {\r\n            const density = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n                const ok = _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkFloatPositive(density, `Invalid density value: ${ density }`);\r\n                if (!ok)\r\n                    return null;\r\n            }\r\n            settings.mDensity = density;\r\n        }\r\n\r\n        // shape offset\r\n        if (cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL)) {\r\n            jv.FromBuffer(cb);\r\n            jq.FromBuffer(cb);\r\n\r\n            settings = new Jolt.RotatedTranslatedShapeSettings(jv, jq, settings);\r\n        }\r\n\r\n        // center of mass offset\r\n        if (cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL)) {\r\n            jv.FromBuffer(cb);\r\n\r\n            settings = new Jolt.OffsetCenterOfMassShapeSettings(jv, settings);\r\n        }\r\n\r\n        if (useScale) {\r\n            jv.Set(sx, sy, sz);\r\n            settings = new Jolt.ScaledShapeSettings(settings, jv);\r\n        }\r\n\r\n        return settings;\r\n    } \r\n\r\n    _createStaticCompoundShapeSettings(cb, meshBuffers) {\r\n        const childrenCount = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        const children = [];\r\n\r\n        for (let i = 0; i < childrenCount; i++) {\r\n            const settings = this._createShapeSettings(cb, meshBuffers);\r\n            if (!settings) return null;\r\n\r\n            const pos = {};\r\n            const rot = {};\r\n            \r\n            cb.readVec(pos);\r\n            cb.readQuat(rot);\r\n\r\n            if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n                let ok = true;\r\n                ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkVec(pos, `Invalid static compound child position vector`);\r\n                ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkQuat(rot, `Invalid static compound child quaternion`);\r\n                return null;\r\n            }\r\n\r\n            children.push(settings, pos, rot);\r\n        }\r\n\r\n        return children;\r\n    }\r\n\r\n    _createHeightFieldSettings(cb, meshBuffers) {\r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n            let ok = _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.assert(!!meshBuffers, `Missing buffers to generate a HeightField shape: ${ meshBuffers }`);\r\n            ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.assert(meshBuffers.length > 0, `Invalid buffers to generate HeightField shape: ${ meshBuffers }`);\r\n            if (!ok) {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        const Jolt = this._backend.Jolt;\r\n        const jv = this._joltVec3;\r\n        const buffer = meshBuffers.shift();\r\n        const samples = new Float32Array(buffer);\r\n        const size = samples.length;\r\n\r\n        const settings = new Jolt.HeightFieldShapeSettings();\r\n        settings.mOffset = jv.FromBuffer(cb);\r\n        settings.mScale = jv.FromBuffer(cb);\r\n        settings.mSampleCount = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        settings.mBlockSize = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n        settings.mBitsPerSample = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n        settings.mActiveEdgeCosThresholdAngle = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        settings.mHeightSamples.resize(size);\r\n\r\n        // Convert the height samples into a Float32Array\r\n        const heightSamples = new Float32Array(Jolt.HEAPF32.buffer, Jolt.getPointer(settings.mHeightSamples.data()), size);\r\n\r\n        for (let i = 0, end = heightSamples.length; i < end; i++) {\r\n            const height = samples[i];\r\n            heightSamples[i] = height >=0 ? height : Jolt.HeightFieldShapeConstantValues.prototype.cNoCollisionValue;\r\n        }\r\n\r\n        return settings;\r\n    }\r\n\r\n    _createConstraint(cb) {\r\n        const jv = this._joltVec3;\r\n        const backend = this._backend;\r\n        const Jolt = backend.Jolt;\r\n        const tracker = backend.tracker;\r\n        const physicsSystem = backend.physicsSystem;\r\n\r\n        const type = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n        const index = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        const idx1 = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        const idx2 = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n\r\n        const body1 = tracker.getBodyByPCID(idx1);\r\n        const body2 = tracker.getBodyByPCID(idx2);\r\n\r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n            let ok = true;\r\n            ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.assert(!!body1, `Unable to locate body to add constraint to: ${ idx1 }`);\r\n            ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.assert(!!body2, `Unable to locate body to add constraint to: ${ idx2 }`);\r\n            if (!ok) return false;\r\n        }\r\n\r\n        // TODO\r\n        // refactor to own methods\r\n\r\n        let settings;\r\n        switch (type) {\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_TYPE_FIXED:\r\n                settings = new Jolt.FixedConstraintSettings();\r\n                if (cb.flag) settings.mAutoDetectPoint = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n                if (!settings.mAutoDetectPoint) {\r\n                    if (cb.flag) settings.mPoint1 = jv.FromBuffer(cb);\r\n                    if (cb.flag) settings.mPoint2 = jv.FromBuffer(cb);\r\n                }\r\n                if (cb.flag) settings.mAxisX1 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mAxisY1 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mAxisX2 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mAxisY2 = jv.FromBuffer(cb);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_TYPE_POINT:\r\n                settings = new Jolt.PointConstraintSettings();\r\n                if (cb.flag) settings.mPoint1 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mPoint2 = jv.FromBuffer(cb);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_TYPE_DISTANCE:\r\n                settings = new Jolt.DistanceConstraintSettings();\r\n                if (cb.flag) settings.mPoint1 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mPoint2 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mMinDistance = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                if (cb.flag) settings.mMaxDistance = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                if (cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL)) {\r\n                    const springSettings = this._createSpringSettings(cb, Jolt);\r\n                    settings.mLimitsSpringSettings = springSettings;\r\n                    Jolt.destroy(springSettings);\r\n                }\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_TYPE_HINGE:\r\n                settings = new Jolt.HingeConstraintSettings();\r\n                if (cb.flag) settings.mPoint1 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mHingeAxis1 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mNormalAxis1 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mPoint2 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mHingeAxis2 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mNormalAxis2 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mLimitsMin = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                if (cb.flag) settings.mLimitsMax = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                if (cb.flag) settings.mMaxFrictionTorque = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                if (cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL)) {\r\n                    const springSettings = this._createSpringSettings(cb, Jolt);\r\n                    settings.mLimitsSpringSettings = springSettings;\r\n                    Jolt.destroy(springSettings);\r\n                }\r\n                if (cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL)) {\r\n                    const motorSettings = this._createMotorSettings(cb, Jolt);\r\n                    settings.mMotorSettings = motorSettings;\r\n                    Jolt.destroy(motorSettings);\r\n                }\r\n                break;\r\n            \r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_TYPE_SLIDER:\r\n                settings = new Jolt.SliderConstraintSettings();\r\n                if (cb.flag) settings.mAutoDetectPoint = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n                if (!settings.mAutoDetectPoint) {\r\n                    if (cb.flag) settings.mPoint1 = jv.FromBuffer(cb);\r\n                    if (cb.flag) settings.mPoint2 = jv.FromBuffer(cb);\r\n                }\r\n                if (cb.flag) settings.mSliderAxis1 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mNormalAxis1 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mSliderAxis2 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mNormalAxis2 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mLimitsMin = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                if (cb.flag) settings.mLimitsMax = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                if (cb.flag) settings.mMaxFrictionForce = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                if (cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL)) {\r\n                    const springSettings = this._createSpringSettings(cb, Jolt);\r\n                    settings.mLimitsSpringSettings = springSettings;\r\n                    Jolt.destroy(springSettings);\r\n                }\r\n                if (cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL)) {\r\n                    const motorSettings = this._createMotorSettings(cb, Jolt);\r\n                    settings.mMotorSettings = motorSettings;\r\n                    Jolt.destroy(motorSettings);\r\n                }\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_TYPE_CONE:\r\n                settings = new Jolt.ConeConstraintSettings();\r\n                if (cb.flag) settings.mPoint1 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mTwistAxis1 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mPoint2 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mTwistAxis2 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mHalfConeAngle = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_TYPE_SWING_TWIST:\r\n                settings = new Jolt.SwingTwistConstraintSettings();\r\n                if (cb.flag) settings.mPosition1 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mTwistAxis1 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mPlaneAxis1 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mPosition2 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mTwistAxis2 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mPlaneAxis2 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mNormalHalfConeAngle = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                if (cb.flag) settings.mPlaneHalfConeAngle = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                if (cb.flag) settings.mTwistMinAngle = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                if (cb.flag) settings.mTwistMaxAngle = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                if (cb.flag) settings.mMaxFrictionTorque = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                if (cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL)) {\r\n                    const swingMotorSettings = this._createMotorSettings(cb, Jolt);\r\n                    settings.mSwingMotorSettings = swingMotorSettings;\r\n                    Jolt.destroy(swingMotorSettings);\r\n                }\r\n                if (cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL)) {\r\n                    const twistMotorSettings = this._createMotorSettings(cb, Jolt);\r\n                    settings.mTwistMotorSettings = twistMotorSettings;\r\n                    Jolt.destroy(twistMotorSettings);\r\n                }\r\n                break;\r\n            \r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_TYPE_SIX_DOF:\r\n                settings = new Jolt.SixDOFConstraintSettings();\r\n                if (cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8)) {\r\n                    const count = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n                    for (let i = 0; i < count; i++) {\r\n                        const axis = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n\r\n                        switch (axis) {\r\n                            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_SIX_DOF_TRANSLATION_X:\r\n                                settings.MakeFreeAxis(Jolt.SixDOFConstraintSettings_EAxis_TranslationX);\r\n                                break;\r\n\r\n                            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_SIX_DOF_TRANSLATION_Y:\r\n                                settings.MakeFreeAxis(Jolt.SixDOFConstraintSettings_EAxis_TranslationY);\r\n                                break;\r\n                            \r\n                            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_SIX_DOF_TRANSLATION_Z:\r\n                                settings.MakeFreeAxis(Jolt.SixDOFConstraintSettings_EAxis_TranslationZ);\r\n                                break;\r\n\r\n                            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_SIX_DOF_ROTATION_X:\r\n                                settings.MakeFreeAxis(Jolt.SixDOFConstraintSettings_EAxis_RotationX);\r\n                                break;\r\n                            \r\n                            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_SIX_DOF_ROTATION_Y:\r\n                                settings.MakeFreeAxis(Jolt.SixDOFConstraintSettings_EAxis_RotationY);\r\n                                break;\r\n\r\n                            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_SIX_DOF_ROTATION_Z:\r\n                                settings.MakeFreeAxis(Jolt.SixDOFConstraintSettings_EAxis_RotationZ);\r\n                                break;\r\n                            \r\n                            default:\r\n                                _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(`Unrecognized six dof constraint axis setting: ${ axis }`);\r\n                                return false;\r\n                        }\r\n                    }\r\n                }\r\n                if (cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8)) {\r\n                    const count = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n                    for (let i = 0; i < count; i++) {\r\n                        const axis = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n\r\n                        switch (axis) {\r\n                            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_SIX_DOF_TRANSLATION_X:\r\n                                settings.MakeFixedAxis(Jolt.SixDOFConstraintSettings_EAxis_TranslationX);\r\n                                break;\r\n\r\n                            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_SIX_DOF_TRANSLATION_Y:\r\n                                settings.MakeFixedAxis(Jolt.SixDOFConstraintSettings_EAxis_TranslationY);\r\n                                break;\r\n                            \r\n                            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_SIX_DOF_TRANSLATION_Z:\r\n                                settings.MakeFixedAxis(Jolt.SixDOFConstraintSettings_EAxis_TranslationZ);\r\n                                break;\r\n\r\n                            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_SIX_DOF_ROTATION_X:\r\n                                settings.MakeFixedAxis(Jolt.SixDOFConstraintSettings_EAxis_RotationX);\r\n                                break;\r\n                            \r\n                            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_SIX_DOF_ROTATION_Y:\r\n                                settings.MakeFixedAxis(Jolt.SixDOFConstraintSettings_EAxis_RotationY);\r\n                                break;\r\n\r\n                            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_SIX_DOF_ROTATION_Z:\r\n                                settings.MakeFixedAxis(Jolt.SixDOFConstraintSettings_EAxis_RotationZ);\r\n                                break;\r\n                            \r\n                            default:\r\n                                _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(`Unrecognized six dof constraint axis setting: ${ axis }`);\r\n                                return false;\r\n                        }\r\n                    }\r\n                }\r\n                if (cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8)) {\r\n                    const count = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n                    for (let i = 0; i < count; i++) {\r\n                        const axis = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n                        const min = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                        const max = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n\r\n                        switch (axis) {\r\n                            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_SIX_DOF_TRANSLATION_X:\r\n                                settings.SetLimitedAxis(Jolt.SixDOFConstraintSettings_EAxis_TranslationX, min, max);\r\n                                break;\r\n\r\n                            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_SIX_DOF_TRANSLATION_Y:\r\n                                settings.SetLimitedAxis(Jolt.SixDOFConstraintSettings_EAxis_TranslationY, min, max);\r\n                                break;\r\n                            \r\n                            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_SIX_DOF_TRANSLATION_Z:\r\n                                settings.SetLimitedAxis(Jolt.SixDOFConstraintSettings_EAxis_TranslationZ, min, max);\r\n                                break;\r\n\r\n                            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_SIX_DOF_ROTATION_X:\r\n                                settings.SetLimitedAxis(Jolt.SixDOFConstraintSettings_EAxis_RotationX, min, max);\r\n                                break;\r\n                            \r\n                            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_SIX_DOF_ROTATION_Y:\r\n                                settings.SetLimitedAxis(Jolt.SixDOFConstraintSettings_EAxis_RotationY, min, max);\r\n                                break;\r\n\r\n                            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_SIX_DOF_ROTATION_Z:\r\n                                settings.SetLimitedAxis(Jolt.SixDOFConstraintSettings_EAxis_RotationZ, min, max);\r\n                                break;\r\n                            \r\n                            default:\r\n                                _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(`Unrecognized six dof constraint axis setting: ${ axis }`);\r\n                                return false;\r\n                        }\r\n                    }\r\n                }                \r\n                if (cb.flag) settings.mPosition1 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mAxisX1 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mAxisY1 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mPosition2 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mAxisX2 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mAxisY2 = jv.FromBuffer(cb);\r\n                if (cb.flag) settings.mMaxFriction = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                if (cb.flag) settings.mLimitMin = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                if (cb.flag) settings.mLimitMax = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n                if (cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL)) {\r\n                    const springSettings = this._createSpringSettings(cb, Jolt);\r\n                    settings.mLimitsSpringSettings = springSettings;\r\n                    Jolt.destroy(springSettings);\r\n                }\r\n                if (cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL)) {\r\n                    const motorSettings = this._createMotorSettings(cb, Jolt);\r\n                    settings.mMotorSettings = motorSettings;\r\n                    Jolt.destroy(motorSettings);\r\n                }\r\n                break;\r\n\r\n            default:\r\n                _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(`Unrecognized constraint type: ${ type }`);\r\n                return false;\r\n        }\r\n\r\n        if (cb.flag) settings.mNumVelocityStepsOverride = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n        if (cb.flag) settings.mNumPositionStepsOverride = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n        if (cb.flag) {\r\n            const space = (cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8) === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONSTRAINT_SPACE_WORLD) ? Jolt.EConstraintSpace_WorldSpace : Jolt.EConstraintSpace_LocalToBodyCOM;\r\n            settings.mSpace = space;\r\n        }\r\n\r\n        const constraint = settings.Create(body1, body2);\r\n\r\n        if (!body1.constraints) {\r\n            body1.constraints = [];\r\n            body1.linked = new Set();\r\n        }\r\n\r\n        if (!body2.constraints) {\r\n            body2.constraints = [];\r\n            body2.linked = new Set();\r\n        }\r\n\r\n        body1.constraints.push(index);\r\n        body2.constraints.push(index);\r\n\r\n        body1.linked.add(body2);\r\n        body2.linked.add(body1);\r\n\r\n        tracker.addConstraint(index, constraint, body1, body2);\r\n\r\n        physicsSystem.AddConstraint(constraint);\r\n        \r\n        return true;\r\n    }\r\n\r\n    _createSpringSettings(cb, Jolt) {\r\n        const springSettings = new Jolt.SpringSettings();\r\n        const mode = cb.flag ? cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8) : _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SPRING_MODE_FREQUENCY;\r\n        springSettings.mMode = (mode === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SPRING_MODE_FREQUENCY) ? \r\n            Jolt.ESpringMode_FrequencyAndDamping : Jolt.ESpringMode_StiffnessAndDamping;\r\n        if (cb.flag) springSettings.mFrequency = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        if (cb.flag) springSettings.mStiffness = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        if (cb.flag) springSettings.mDamping = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        return springSettings;\r\n    }\r\n\r\n    _createMotorSettings(cb, Jolt) {\r\n        const motorSettings = new Jolt.MotorSettings();\r\n        if (cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL)) {\r\n            const springsSettings = this._createSpringSettings(cb, Jolt);\r\n            motorSettings.mSpringSettings = springsSettings;\r\n            Jolt.destroy(springsSettings);\r\n        }\r\n        if (cb.flag) motorSettings.mMinForceLimit = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        if (cb.flag) motorSettings.mMaxForceLimit = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        if (cb.flag) motorSettings.mMinTorqueLimit = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        if (cb.flag) motorSettings.mMaxTorqueLimit = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n\r\n        return motorSettings;\r\n    }\r\n\r\n    _createCharacter(cb) {\r\n        const backend = this._backend;\r\n        const Jolt = backend.Jolt;\r\n        const listener = backend.listener;\r\n        const charEvents = backend.config.charContactEventsEnabled;\r\n        const jv = this._joltVec3;\r\n        const jq = this._joltQuat;\r\n        const settings = new Jolt.CharacterVirtualSettings();\r\n\r\n        const shapeSettings = this._createShapeSettings(cb, null);\r\n        if (!shapeSettings) {\r\n            return false;\r\n        }\r\n\r\n        const shape = shapeSettings.Create().Get();\r\n        \r\n        settings.mShape = shape;\r\n\r\n        const index = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        const useMotionState = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n\r\n        jv.FromBuffer(cb);\r\n        settings.mUp = jv;\r\n\r\n        jv.FromBuffer(cb);\r\n        const distance = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        const plane = new Jolt.Plane(jv, distance);\r\n        settings.mSupportingVolume = plane;\r\n        Jolt.destroy(plane);\r\n\r\n        settings.mMaxSlopeAngle = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        settings.mMass = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        settings.mMaxStrength = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n\r\n        jv.FromBuffer(cb);\r\n        settings.mShapeOffset = jv;\r\n        settings.mBackFaceMode = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n        settings.mPredictiveContactDistance = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        settings.mMaxCollisionIterations = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        settings.mMaxConstraintIterations = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        settings.mMinTimeRemaining = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        settings.mCollisionTolerance = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        settings.mCharacterPadding = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        settings.mMaxNumHits = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        settings.mHitReductionCosMaxAngle = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        settings.mPenetrationRecoverySpeed = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n\r\n        jv.FromBuffer(cb);\r\n        jq.FromBuffer(cb);\r\n\r\n        if (charEvents && !listener.charListener) {\r\n            listener.initCharacterEvents();\r\n        }\r\n\r\n        const character = new Jolt.CharacterVirtual(settings, jv, jq, backend.physicsSystem);\r\n\r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n            character.debugDraw = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n        }        \r\n\r\n        if (backend.config.useMotionStates && useMotionState) {\r\n            character.motionState = new _motion_state_mjs__WEBPACK_IMPORTED_MODULE_2__.MotionState(character);\r\n        }\r\n\r\n        if (charEvents) {\r\n            character.SetListener(listener.charListener);\r\n        }\r\n\r\n        // for motion state\r\n        character.isCharacter = true;\r\n\r\n        // for shape reset\r\n        character.originalShape = shape;\r\n\r\n        backend.tracker.add(character, index);\r\n\r\n        return true;\r\n    }\r\n\r\n    _createMeshShapeSettings(cb, meshBuffers, shapeType) {\r\n        const {\r\n            base, stride, numIndices, triCount, positions, indices\r\n        } = Creator.readMeshBuffers(cb, meshBuffers);\r\n\r\n        const Jolt = this._backend.Jolt;\r\n        const jv = this._joltVec3;\r\n\r\n        // TODO:\r\n        // add support for duplicate vertices test\r\n\r\n        const p = positions;\r\n        let i1, i2, i3;\r\n        let settings;\r\n\r\n        if (shapeType === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SHAPE_CONVEX_HULL) {\r\n            const cache = new Set();\r\n\r\n            settings = new Jolt.ConvexHullShapeSettings();\r\n\r\n            for (let i = 0; i < numIndices; i++) {\r\n                const index = indices[i] * stride;\r\n                const x = p[index];\r\n                const y = p[index + 1];\r\n                const z = p[index + 2];\r\n\r\n                // deduplicate verts\r\n                const str = `${x}:${y}:${z}`;\r\n                if (!cache.has(str)) {\r\n                    cache.add(str);\r\n                    \r\n                    jv.Set(x, y, z);\r\n                    settings.mPoints.push_back(jv);\r\n                }\r\n            }\r\n        } else if (shapeType === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SHAPE_MESH) {\r\n            const triangles = new Jolt.TriangleList();\r\n    \r\n            triangles.resize(triCount);\r\n            \r\n            let v1, v2, v3;\r\n            for (let i = 0; i < triCount; i++) {\r\n                i1 = indices[base + i * 3] * stride;\r\n                i2 = indices[base + i * 3 + 1] * stride;\r\n                i3 = indices[base + i * 3 + 2] * stride;\r\n    \r\n                const t = triangles.at(i);\r\n                \r\n                v1 = t.get_mV(0);\r\n                v2 = t.get_mV(1);\r\n                v3 = t.get_mV(2);\r\n    \r\n                v1.x = p[i1]; v1.y = p[i1 + 1]; v1.z = p[i1 + 2];\r\n                v2.x = p[i2]; v2.y = p[i2 + 1]; v2.z = p[i2 + 2];\r\n                v3.x = p[i3]; v3.y = p[i3 + 1]; v3.z = p[i3 + 2];\r\n            }\r\n\r\n            settings = new Jolt.MeshShapeSettings(triangles);\r\n        }\r\n        \r\n        return settings;\r\n    }\r\n\r\n    static createSoftBodyShapeSettings(cb, meshBuffers, Jolt) {\r\n        // scale\r\n        const useScale = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n        let sx = 1;\r\n        let sy = 1;\r\n        let sz = 1;\r\n        if (useScale) {\r\n            sx = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            sy = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            sz = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            \r\n            if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n                let ok = _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkFloat(sx, `Invalid scale X: ${ sx }`);\r\n                ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkFloat(sy, `Invalid scale Y: ${ sy }`);\r\n                ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkFloat(sz, `Invalid scale Z: ${ sz }`);\r\n                if (!ok) {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n\r\n        const {\r\n            base, vertexCount, triCount, positions, indices\r\n        } = Creator.readMeshBuffers(cb, meshBuffers);\r\n        \r\n        const settings = new Jolt.SoftBodySharedSettings();\r\n        \r\n        // Create vertices\r\n        const cache = new Set();\r\n        const jf = new Jolt.Float3();\r\n        const v = new Jolt.SoftBodySharedSettingsVertex();\r\n        for (let i = 0; i < vertexCount; i++) {\r\n            const i3 = i * 3;\r\n            const x = positions[i3];\r\n            const y = positions[i3 + 1];\r\n            const z = positions[i3 + 2];\r\n\r\n            // deduplicate verts\r\n            const str = `${x}:${y}:${z}`;\r\n            if (!cache.has(str)) {\r\n                cache.add(str);\r\n                \r\n                jf.x = x * sx;\r\n                jf.y = y * sy;\r\n                jf.z = z * sz;\r\n                v.mPosition = jf;\r\n\r\n                settings.mVertices.push_back(v);\r\n            }\r\n        }\r\n\r\n        const width = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        const length = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        const compliance = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n        const fixedCount = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        const rowVerts = width + 1;\r\n        const colVerts = length + 1;\r\n        \r\n        // Create edges\r\n        const edge = new Jolt.SoftBodySharedSettingsEdge(0, 0, compliance);\r\n        const constraints = settings.mEdgeConstraints;\r\n        let v0, v1;\r\n        for (let y = 0; y < colVerts; y++) {\r\n            for (let x = 0; x < rowVerts; x++) {\r\n                v0 = y + x * colVerts;\r\n                edge.set_mVertex(0, v0);\r\n\r\n                if (y < length) {\r\n                    edge.set_mVertex(1, v0 + 1);\r\n                    constraints.push_back(edge);\r\n                }\r\n                if (x < width) {\r\n                    edge.set_mVertex(1, v0 + colVerts);\r\n                    constraints.push_back(edge);\r\n                }\r\n                if (y < length && x < width) {\r\n                    v1 = v0 + colVerts + 1;\r\n                    edge.set_mVertex(1, v1);\r\n                    constraints.push_back(edge);\r\n                    edge.set_mVertex(0, v0 + 1);\r\n                    edge.set_mVertex(1, v1 - 1);\r\n                    constraints.push_back(edge);\r\n                }\r\n            }\r\n        }\r\n        settings.CalculateEdgeLengths();\r\n\r\n        // Fixed verts\r\n        for (let i = 0; i < fixedCount; i++) {\r\n            const fixedIndex = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n            settings.mVertices.at(fixedIndex).mInvMass = 0;\r\n        }\r\n\r\n        // Create faces\r\n        const face = new Jolt.SoftBodySharedSettingsFace(0, 0, 0, 0);\r\n        let i1, i2, i3;\r\n        for (let i = 0; i < triCount; i++) {\r\n            i1 = indices[base + i * 3];\r\n            i2 = indices[base + i * 3 + 1];\r\n            i3 = indices[base + i * 3 + 2];\r\n\r\n            face.set_mVertex(0, i1);\r\n            face.set_mVertex(1, i2);\r\n            face.set_mVertex(2, i3);\r\n            settings.AddFace(face);\r\n        }\r\n\r\n        settings.Optimize();\r\n\r\n        Jolt.destroy(edge);\r\n        Jolt.destroy(face);\r\n        Jolt.destroy(jf);\r\n        Jolt.destroy(v);\r\n\r\n        return settings;\r\n    }\r\n\r\n    static readMeshBuffers(cb, meshBuffers) {\r\n        const base = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n        const offset = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        const stride = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n        const vertexCount = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        const numIndices = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        const idxOffset = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n\r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n            let ok = _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkUint(base, `Invalid buffer base to generate mesh/hull: ${ base }`);\r\n            ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkUint(offset, `Invalid positions buffer offset to generate mesh/hull: ${ offset }`);\r\n            ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkUint(stride, `Invalid positions buffer stride to generate mesh/hull: ${ stride }`);\r\n            ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkUint(numIndices, `Invalid indices count to generate mesh/hull: ${ numIndices }`);\r\n            ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.assert(!!meshBuffers, `No mesh buffers to generate a mesh/hull: ${ meshBuffers }`);\r\n            ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.assert(meshBuffers.length > 1, `Invalid buffers to generate mesh/hull: ${ meshBuffers }`);\r\n            if (!ok) {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        const posBuffer = meshBuffers.shift();\r\n        const idxBuffer = meshBuffers.shift();\r\n        \r\n        const positions = new Float32Array(posBuffer, offset); // vertex positions\r\n        const arrayConstructor = numIndices > 65535 ? Uint32Array : Uint16Array;\r\n        const indices = new arrayConstructor(idxBuffer, idxOffset, numIndices);\r\n        const triCount = Math.floor(numIndices / 3);\r\n\r\n        return { base, stride, vertexCount, numIndices, triCount, positions, indices };\r\n    }\r\n}\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/backends/jolt/operators/creator.mjs\n");

/***/ }),

/***/ "./src/backends/jolt/operators/drawer.mjs":
/*!************************************************!*\
  !*** ./src/backends/jolt/operators/drawer.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Drawer: () => (/* binding */ Drawer)\n/* harmony export */ });\n/* harmony import */ var _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../physics/components/jolt/constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n/* harmony import */ var _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../physics/debug.mjs */ \"./src/physics/debug.mjs\");\n\r\n\r\n\r\nclass Drawer {\r\n    constructor(Jolt) {\r\n        this._Jolt = Jolt;\r\n        this._joltAabb = Jolt.AABox.prototype.sBiggest();\r\n        this._joltQuat = Jolt.Quat.prototype.sIdentity();\r\n        this._scale = new Jolt.Vec3(1, 1, 1);\r\n        this._data = [];\r\n        this._buffers = [];\r\n        this._contexts = [];\r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n\r\n    get buffers() {\r\n        return this._buffers;\r\n    }\r\n\r\n    get dirty() {\r\n        return this._data.length > 0;\r\n    }\r\n\r\n    write(tracker) {\r\n        const debugBodies = tracker.debug;\r\n\r\n        if (debugBodies.size === 0) {\r\n            return true;\r\n        }\r\n\r\n        let ok = true;\r\n        debugBodies.forEach(body => {\r\n            ok = ok && this._writeShape(body, tracker);\r\n        });\r\n\r\n        return ok;\r\n    }\r\n\r\n    reset() {\r\n        this._data.length = 0;\r\n        this._buffers.length = 0;\r\n    }\r\n\r\n    destroy() {\r\n        const Jolt = this._Jolt;\r\n\r\n        this.reset();\r\n\r\n        Jolt.destroy(this._joltAabb);\r\n        this._joltAabb = null;\r\n\r\n        Jolt.destroy(this._joltQuat);\r\n        this._joltQuat = null;\r\n\r\n        Jolt.destroy(this._scale);\r\n        this._scale = null;\r\n\r\n        this._Jolt = null;\r\n    }\r\n\r\n    _writeShape(body, tracker) {\r\n        const Jolt = this._Jolt;\r\n        \r\n        try {\r\n            const motionType = body.isCharacter ? Jolt.EMotionType_Kinematic : body.GetMotionType();\r\n            const isRigidBody = body.isCharacter ? true : (body.GetBodyType() === Jolt.EBodyType_RigidBody);\r\n\r\n            const data = body.debugDrawData;\r\n            if (data) {\r\n                if (isRigidBody) {\r\n                    const buffer = Jolt.HEAPF32.buffer;\r\n\r\n                    this._data.push(...data, motionType, buffer);\r\n                    this._buffers.push(buffer);\r\n\r\n                    return true;\r\n                } else {\r\n                    // Soft body will have new vertex positions, so we need to create a new triContext\r\n                    Jolt.destroy(body.triContext);\r\n                    body.triContext = null;\r\n                    body.debugDrawData = null;\r\n                }\r\n            }\r\n\r\n            // TODO\r\n            // don't send the heap, create and send a view instead\r\n            // also, use backend's outBuffer.meshBuffers instead of local this._buffers\r\n\r\n            const shape = body.GetShape();\r\n            const index = tracker.getPCID(Jolt.getPointer(body));\r\n            const triContext = new Jolt.ShapeGetTriangles(shape, Jolt.AABox.prototype.sBiggest(), shape.GetCenterOfMass(), Jolt.Quat.prototype.sIdentity(), this._scale);\r\n            const byteOffset = triContext.GetVerticesData();\r\n            const length = triContext.GetVerticesSize() / _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.FLOAT32_SIZE;\r\n            const buffer = Jolt.HEAPF32.buffer;\r\n\r\n            body.debugDrawData = [index, length, byteOffset];\r\n            body.triContext = triContext;\r\n\r\n            this._data.push(index, length, byteOffset, motionType, buffer);\r\n            this._buffers.push(buffer);\r\n\r\n        } catch (e) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(e);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYmFja2VuZHMvam9sdC9vcGVyYXRvcnMvZHJhd2VyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEU7QUFDM0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUEwRCxnRkFBWTtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWLFlBQVkscURBQUssUUFBUSxxREFBSztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL1BoeXNpY3NDb21wb25lbnRzLy4vc3JjL2JhY2tlbmRzL2pvbHQvb3BlcmF0b3JzL2RyYXdlci5tanM/ZGVlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGTE9BVDMyX1NJWkUgfSBmcm9tIFwiLi4vLi4vLi4vcGh5c2ljcy9jb21wb25lbnRzL2pvbHQvY29uc3RhbnRzLm1qc1wiO1xyXG5pbXBvcnQgeyBEZWJ1ZyB9IGZyb20gXCIuLi8uLi8uLi9waHlzaWNzL2RlYnVnLm1qc1wiO1xyXG5cclxuY2xhc3MgRHJhd2VyIHtcclxuICAgIGNvbnN0cnVjdG9yKEpvbHQpIHtcclxuICAgICAgICB0aGlzLl9Kb2x0ID0gSm9sdDtcclxuICAgICAgICB0aGlzLl9qb2x0QWFiYiA9IEpvbHQuQUFCb3gucHJvdG90eXBlLnNCaWdnZXN0KCk7XHJcbiAgICAgICAgdGhpcy5fam9sdFF1YXQgPSBKb2x0LlF1YXQucHJvdG90eXBlLnNJZGVudGl0eSgpO1xyXG4gICAgICAgIHRoaXMuX3NjYWxlID0gbmV3IEpvbHQuVmVjMygxLCAxLCAxKTtcclxuICAgICAgICB0aGlzLl9kYXRhID0gW107XHJcbiAgICAgICAgdGhpcy5fYnVmZmVycyA9IFtdO1xyXG4gICAgICAgIHRoaXMuX2NvbnRleHRzID0gW107XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGRhdGEoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2RhdGE7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGJ1ZmZlcnMoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2J1ZmZlcnM7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGRpcnR5KCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9kYXRhLmxlbmd0aCA+IDA7XHJcbiAgICB9XHJcblxyXG4gICAgd3JpdGUodHJhY2tlcikge1xyXG4gICAgICAgIGNvbnN0IGRlYnVnQm9kaWVzID0gdHJhY2tlci5kZWJ1ZztcclxuXHJcbiAgICAgICAgaWYgKGRlYnVnQm9kaWVzLnNpemUgPT09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgb2sgPSB0cnVlO1xyXG4gICAgICAgIGRlYnVnQm9kaWVzLmZvckVhY2goYm9keSA9PiB7XHJcbiAgICAgICAgICAgIG9rID0gb2sgJiYgdGhpcy5fd3JpdGVTaGFwZShib2R5LCB0cmFja2VyKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG9rO1xyXG4gICAgfVxyXG5cclxuICAgIHJlc2V0KCkge1xyXG4gICAgICAgIHRoaXMuX2RhdGEubGVuZ3RoID0gMDtcclxuICAgICAgICB0aGlzLl9idWZmZXJzLmxlbmd0aCA9IDA7XHJcbiAgICB9XHJcblxyXG4gICAgZGVzdHJveSgpIHtcclxuICAgICAgICBjb25zdCBKb2x0ID0gdGhpcy5fSm9sdDtcclxuXHJcbiAgICAgICAgdGhpcy5yZXNldCgpO1xyXG5cclxuICAgICAgICBKb2x0LmRlc3Ryb3kodGhpcy5fam9sdEFhYmIpO1xyXG4gICAgICAgIHRoaXMuX2pvbHRBYWJiID0gbnVsbDtcclxuXHJcbiAgICAgICAgSm9sdC5kZXN0cm95KHRoaXMuX2pvbHRRdWF0KTtcclxuICAgICAgICB0aGlzLl9qb2x0UXVhdCA9IG51bGw7XHJcblxyXG4gICAgICAgIEpvbHQuZGVzdHJveSh0aGlzLl9zY2FsZSk7XHJcbiAgICAgICAgdGhpcy5fc2NhbGUgPSBudWxsO1xyXG5cclxuICAgICAgICB0aGlzLl9Kb2x0ID0gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBfd3JpdGVTaGFwZShib2R5LCB0cmFja2VyKSB7XHJcbiAgICAgICAgY29uc3QgSm9sdCA9IHRoaXMuX0pvbHQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgbW90aW9uVHlwZSA9IGJvZHkuaXNDaGFyYWN0ZXIgPyBKb2x0LkVNb3Rpb25UeXBlX0tpbmVtYXRpYyA6IGJvZHkuR2V0TW90aW9uVHlwZSgpO1xyXG4gICAgICAgICAgICBjb25zdCBpc1JpZ2lkQm9keSA9IGJvZHkuaXNDaGFyYWN0ZXIgPyB0cnVlIDogKGJvZHkuR2V0Qm9keVR5cGUoKSA9PT0gSm9sdC5FQm9keVR5cGVfUmlnaWRCb2R5KTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBib2R5LmRlYnVnRHJhd0RhdGE7XHJcbiAgICAgICAgICAgIGlmIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoaXNSaWdpZEJvZHkpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBidWZmZXIgPSBKb2x0LkhFQVBGMzIuYnVmZmVyO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9kYXRhLnB1c2goLi4uZGF0YSwgbW90aW9uVHlwZSwgYnVmZmVyKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9idWZmZXJzLnB1c2goYnVmZmVyKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIFNvZnQgYm9keSB3aWxsIGhhdmUgbmV3IHZlcnRleCBwb3NpdGlvbnMsIHNvIHdlIG5lZWQgdG8gY3JlYXRlIGEgbmV3IHRyaUNvbnRleHRcclxuICAgICAgICAgICAgICAgICAgICBKb2x0LmRlc3Ryb3koYm9keS50cmlDb250ZXh0KTtcclxuICAgICAgICAgICAgICAgICAgICBib2R5LnRyaUNvbnRleHQgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgICAgIGJvZHkuZGVidWdEcmF3RGF0YSA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vIFRPRE9cclxuICAgICAgICAgICAgLy8gZG9uJ3Qgc2VuZCB0aGUgaGVhcCwgY3JlYXRlIGFuZCBzZW5kIGEgdmlldyBpbnN0ZWFkXHJcbiAgICAgICAgICAgIC8vIGFsc28sIHVzZSBiYWNrZW5kJ3Mgb3V0QnVmZmVyLm1lc2hCdWZmZXJzIGluc3RlYWQgb2YgbG9jYWwgdGhpcy5fYnVmZmVyc1xyXG5cclxuICAgICAgICAgICAgY29uc3Qgc2hhcGUgPSBib2R5LkdldFNoYXBlKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gdHJhY2tlci5nZXRQQ0lEKEpvbHQuZ2V0UG9pbnRlcihib2R5KSk7XHJcbiAgICAgICAgICAgIGNvbnN0IHRyaUNvbnRleHQgPSBuZXcgSm9sdC5TaGFwZUdldFRyaWFuZ2xlcyhzaGFwZSwgSm9sdC5BQUJveC5wcm90b3R5cGUuc0JpZ2dlc3QoKSwgc2hhcGUuR2V0Q2VudGVyT2ZNYXNzKCksIEpvbHQuUXVhdC5wcm90b3R5cGUuc0lkZW50aXR5KCksIHRoaXMuX3NjYWxlKTtcclxuICAgICAgICAgICAgY29uc3QgYnl0ZU9mZnNldCA9IHRyaUNvbnRleHQuR2V0VmVydGljZXNEYXRhKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGxlbmd0aCA9IHRyaUNvbnRleHQuR2V0VmVydGljZXNTaXplKCkgLyBGTE9BVDMyX1NJWkU7XHJcbiAgICAgICAgICAgIGNvbnN0IGJ1ZmZlciA9IEpvbHQuSEVBUEYzMi5idWZmZXI7XHJcblxyXG4gICAgICAgICAgICBib2R5LmRlYnVnRHJhd0RhdGEgPSBbaW5kZXgsIGxlbmd0aCwgYnl0ZU9mZnNldF07XHJcbiAgICAgICAgICAgIGJvZHkudHJpQ29udGV4dCA9IHRyaUNvbnRleHQ7XHJcblxyXG4gICAgICAgICAgICB0aGlzLl9kYXRhLnB1c2goaW5kZXgsIGxlbmd0aCwgYnl0ZU9mZnNldCwgbW90aW9uVHlwZSwgYnVmZmVyKTtcclxuICAgICAgICAgICAgdGhpcy5fYnVmZmVycy5wdXNoKGJ1ZmZlcik7XHJcblxyXG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgRGVidWcuZGV2ICYmIERlYnVnLmVycm9yKGUpO1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IHsgRHJhd2VyIH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/backends/jolt/operators/drawer.mjs\n");

/***/ }),

/***/ "./src/backends/jolt/operators/listener.mjs":
/*!**************************************************!*\
  !*** ./src/backends/jolt/operators/listener.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Listener: () => (/* binding */ Listener)\n/* harmony export */ });\n/* harmony import */ var _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../physics/components/jolt/constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n/* harmony import */ var _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../physics/debug.mjs */ \"./src/physics/debug.mjs\");\n\r\n\r\n\r\nclass Listener {\r\n    constructor(backend) {\r\n        this._listener = null;\r\n        this._charListener = null;\r\n\r\n        this._backend = backend;\r\n\r\n        this._contactsData = [0];\r\n        this._contactsCache = new Set();\r\n\r\n        this._charContactsData = new Map();\r\n    }\r\n\r\n    get dirty() {\r\n        return (this._contactsData[0] > 0 || this._charContactsData[0] > 0);\r\n    }\r\n\r\n    get charListener() {\r\n        return this._charListener;\r\n    }\r\n\r\n    // Contact Events\r\n\r\n    onContactValidate(body1, body2, baseOffset, collideShapeResult) {\r\n        return this._backend.Jolt.ValidateResult_AcceptAllContactsForThisBodyPair;\r\n    }\r\n\r\n    initEvents(config) {\r\n        const Jolt = this._backend.Jolt;\r\n\r\n        const listener = new Jolt.ContactListenerJS();\r\n        listener.OnContactValidate = this.onContactValidate.bind(this);\r\n        \r\n        if (config.contactAddedEventsEnabled) {\r\n            listener.OnContactAdded = this.onContactAdded.bind(this);\r\n        } else {\r\n            listener.OnContactAdded = () => {};\r\n        }\r\n\r\n        if (config.contactPersistedEventsEnabled) {\r\n            listener.OnContactPersisted = this.onContactPersisted.bind(this);\r\n        } else {\r\n            listener.OnContactPersisted = () => {};\r\n        }\r\n\r\n        if (config.contactRemovedEventsEnabled) {\r\n            listener.OnContactRemoved = this.onContactRemoved.bind(this);\r\n        } else {\r\n            listener.OnContactRemoved = () => {};\r\n        }\r\n\r\n        this._backend.physicsSystem.SetContactListener(listener);\r\n\r\n        this._listener = listener;\r\n    }\r\n\r\n    overrideContacts(listenerType, overrides) {\r\n        if (listenerType === 'char' && !this._charListener) {\r\n            this.initCharacterEvents();\r\n        }\r\n\r\n        const listener = listenerType === 'contacts' ? this._listener : this._charListener;\r\n\r\n        for (const [method, funcStr] of Object.entries(overrides)) {\r\n            listener[method] = eval('(' + funcStr + ')').bind(this);\r\n        }\r\n    }\r\n\r\n    onContactPersisted(b1Pointer, b2Pointer, manifoldPointer, settingsPointer) {\r\n        this._wrapAndWrite(b1Pointer, b2Pointer, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONTACT_TYPE_PERSISTED, false);\r\n    }\r\n\r\n    onContactRemoved(subShapePairPointer) {\r\n        const backend = this._backend;\r\n        const Jolt = backend.Jolt;\r\n\r\n        const subShapePair = Jolt.wrapPointer(subShapePairPointer, Jolt.SubShapeIDPair);\r\n        const bodyLockInterface = backend.physicsSystem.GetBodyLockInterface();\r\n\r\n        let body1 = bodyLockInterface.TryGetBody(subShapePair.GetBody1ID());\r\n        let body2 = bodyLockInterface.TryGetBody(subShapePair.GetBody2ID());\r\n\r\n        // A body could have been destroyed by the time this closure is called.\r\n        // Check if the body is still valid:\r\n        if (Jolt.getPointer(body1) === 0) {\r\n            body1 = null;\r\n        }\r\n        if (Jolt.getPointer(body2) === 0) {\r\n            body2 = null;\r\n        }\r\n\r\n        this._writeContactPair(body1, body2, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONTACT_TYPE_REMOVED, true);\r\n    }\r\n\r\n    onContactAdded(b1Pointer, b2Pointer, manifoldPointer, settingsPointer) {\r\n        const Jolt = this._backend.Jolt;\r\n        const data = this._contactsData;\r\n        const { contactPoints, contactPointsAveraged } = this._backend.config;\r\n        const manifold = Jolt.wrapPointer(manifoldPointer, Jolt.ContactManifold);\r\n\r\n        this._wrapAndWrite(b1Pointer, b2Pointer, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONTACT_TYPE_ADDED, true);\r\n\r\n        const n = manifold.mWorldSpaceNormal;\r\n        const d = manifold.mPenetrationDepth;\r\n\r\n        data.push(n.GetX(), n.GetY(), n.GetZ(), d);\r\n\r\n        if (contactPoints) {\r\n            const jv = Jolt.Vec3.prototype.sZero();\r\n            const offset = manifold.mBaseOffset;\r\n            const points1 = manifold.mRelativeContactPointsOn1;\r\n            const points2 = manifold.mRelativeContactPointsOn2;\r\n            const count1 = points1.size();\r\n\r\n            if (contactPointsAveraged) {\r\n                for (let i = 0; i < count1; i++) {\r\n                    jv.Add(points1.at(i));\r\n                }\r\n                jv.Mul(1 / count1);\r\n                jv.Add(offset);\r\n                data.push(jv.GetX(), jv.GetY(), jv.GetZ());\r\n            } else {\r\n                const count2 = points1.size();\r\n                data.push(offset.GetX(), offset.GetY(), offset.GetZ(), count1, count2);\r\n                for (let i = 0; i < count1; i++) {\r\n                    const p = points1.at(i);\r\n                    data.push(p.GetX(), p.GetY(), p.GetZ());\r\n                }\r\n                for (let i = 0; i < count2; i++) {\r\n                    const p = points2.at(i);\r\n                    data.push(p.GetX(), p.GetY(), p.GetZ());\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Character contact events\r\n\r\n    initCharacterEvents() {\r\n        const Jolt = this._backend.Jolt;\r\n        const listener = new Jolt.CharacterContactListenerJS();\r\n\r\n        listener.OnAdjustBodyVelocity = () => {};\r\n\r\n        listener.OnContactValidate = (character, bodyID2, subShapeID2) => {\r\n            // allow all\r\n            return true;\r\n        };\r\n\r\n        listener.OnContactAdded = () => {};\r\n\r\n        listener.OnContactSolve = this.onCharContactSolve.bind(this);\r\n\r\n        this._charListener = listener;\r\n    }\r\n\r\n    onCharContactSolve(character, bodyID2, subShapeID2, cp, cn, cv, contactMaterial, characterVelocity, nv) {\r\n        const backend = this._backend;\r\n        const Jolt = backend.Jolt;\r\n        const tracker = backend.tracker;\r\n\r\n        character = Jolt.wrapPointer(character, Jolt.CharacterVirtual);\r\n        cp = Jolt.wrapPointer(cp, Jolt.Vec3);\r\n        cn = Jolt.wrapPointer(cn, Jolt.Vec3);\r\n        cv = Jolt.wrapPointer(cv, Jolt.Vec3);\r\n        nv = Jolt.wrapPointer(nv, Jolt.Vec3);\r\n\r\n        const data = this._charContactsData;\r\n        const index = tracker.getPCID(Jolt.getPointer(character));\r\n        \r\n        const bodyLockInterface = backend.physicsSystem.GetBodyLockInterface();\r\n\r\n        let body2 = bodyLockInterface.TryGetBody(bodyID2);\r\n        if (Jolt.getPointer(body2) === 0) {\r\n            body2 = null;\r\n        }\r\n\r\n        let contacts = data.get(index);\r\n        if (!contacts) {\r\n            contacts = [0];\r\n            data.set(index, contacts);\r\n        }\r\n\r\n        contacts[0] = ++contacts[0];\r\n\r\n        contacts.push(!!body2);\r\n        if (body2) {\r\n            const index2 = tracker.getPCID(Jolt.getPointer(body2));\r\n            contacts.push(index2);\r\n        } else {\r\n            contacts.push(null);\r\n        }\r\n\r\n        // contact position\r\n        contacts.push(cp.GetX());\r\n        contacts.push(cp.GetY());\r\n        contacts.push(cp.GetZ());\r\n\r\n        // contact normal\r\n        contacts.push(cn.GetX());\r\n        contacts.push(cn.GetY());\r\n        contacts.push(cn.GetZ());\r\n\r\n        // contact velocity\r\n        contacts.push(cv.GetX());\r\n        contacts.push(cv.GetY());\r\n        contacts.push(cv.GetZ());\r\n\r\n        // new character velocity\r\n        contacts.push(nv.GetX());\r\n        contacts.push(nv.GetY());\r\n        contacts.push(nv.GetZ());\r\n    }\r\n\r\n    initVehicleEvents(constraint) {\r\n        const Jolt = this._backend.Jolt;\r\n        const listener = Jolt.VehicleConstraintCallbacksJS();\r\n\r\n        listener.GetCombinedFriction = (wheelIndex, tireFrictionDirection, tireFriction, body2, subShapeID2) => {\r\n            body2 = Jolt.wrapPointer(body2, Jolt.Body);\r\n            return Math.sqrt(tireFriction * body2.GetFriction()); // This is the default calculation\r\n        };\r\n        listener.OnPreStepCallback = () => {};\r\n        listener.OnPostCollideCallback = () => {};\r\n        listener.OnPostStepCallback = () => {};\r\n\r\n        listener.SetVehicleConstraint(constraint);\r\n\r\n        this._vehicleListener = listener;\r\n    }\r\n\r\n    write(cb) {\r\n        this._writeContactEvents(cb);\r\n        this._writeCharacterEvents(cb);\r\n    }\r\n\r\n    reset(cb) {\r\n        this._contactsData.length = 0;\r\n        this._contactsData[0] = 0;\r\n        this._contactsCache.clear();\r\n        this._charContactsData.clear();\r\n    }\r\n\r\n    destroy() {\r\n        const Jolt = this._backend.Jolt;\r\n\r\n        if (this._listener) {\r\n            Jolt.destroy(this._listener);\r\n            this._listener = null;\r\n        }\r\n\r\n        if (this._charListener) {\r\n            Jolt.destroy(this._charListener);\r\n            this._charListener = null;\r\n        }\r\n    }\r\n\r\n    _writeContactEvents(cb) {\r\n        const data = this._contactsData;\r\n        const contactsCount = data[0];\r\n        \r\n        if (contactsCount === 0) {\r\n            return;\r\n        }\r\n        \r\n        const { contactPoints, contactPointsAveraged } = this._backend.config;\r\n\r\n        cb.writeOperator(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.COMPONENT_SYSTEM_BODY);\r\n        cb.writeCommand(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_REPORT_CONTACTS);\r\n        \r\n        cb.write(contactsCount, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT32, false);\r\n\r\n        // TODO\r\n        // average points per contact pair, instead of all contacts\r\n\r\n        for (let i = 0, k = 1; i < contactsCount; i++) {\r\n            // type\r\n            const type = data[k++];\r\n            cb.write(type, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT8, false);\r\n\r\n            // idx1, idx2, can be -1\r\n            const isValidBody1 = data[k++];\r\n            const isValidBody2 = data[k++];\r\n            cb.write(isValidBody1, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_BOOL, false);\r\n            cb.write(isValidBody2, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_BOOL, false);\r\n            if (isValidBody1) {\r\n                cb.write(data[k++], _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT32, false);\r\n            }\r\n            if (isValidBody2) {\r\n                cb.write(data[k++], _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT32, false);\r\n            }\r\n\r\n            if (type === _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CONTACT_TYPE_ADDED) {\r\n                // normal xyz\r\n                cb.write(data[k++], _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_FLOAT32, false);\r\n                cb.write(data[k++], _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_FLOAT32, false);\r\n                cb.write(data[k++], _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_FLOAT32, false);\r\n                \r\n                // depth\r\n                cb.write(data[k++], _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_FLOAT32, false);\r\n    \r\n                cb.write(contactPoints, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_BOOL, false);\r\n                if (contactPoints) {\r\n    \r\n                    cb.write(contactPointsAveraged, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_BOOL, false);\r\n                    if (contactPointsAveraged) {\r\n                        // world point\r\n                        cb.write(data[k++], _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_FLOAT32, false);\r\n                        cb.write(data[k++], _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_FLOAT32, false);\r\n                        cb.write(data[k++], _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_FLOAT32, false);\r\n                    } else {\r\n                        // offset\r\n                        cb.write(data[k++], _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_FLOAT32, false);\r\n                        cb.write(data[k++], _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_FLOAT32, false);\r\n                        cb.write(data[k++], _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_FLOAT32, false);\r\n                        \r\n                        // count1, count2\r\n                        const count1 = data[k++];\r\n                        const count2 = data[k++];\r\n                        cb.write(count1, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT32, false);\r\n                        cb.write(count2, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT32, false);\r\n    \r\n                        // local points\r\n                        for (let i = 0; i < count1; i++) {\r\n                            cb.write(data[k++], _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_FLOAT32, false);\r\n                            cb.write(data[k++], _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_FLOAT32, false);\r\n                            cb.write(data[k++], _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_FLOAT32, false);\r\n                        }\r\n                        for (let i = 0; i < count2; i++) {\r\n                            cb.write(data[k++], _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_FLOAT32, false);\r\n                            cb.write(data[k++], _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_FLOAT32, false);\r\n                            cb.write(data[k++], _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_FLOAT32, false);\r\n                        }                    \r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _writeCharacterEvents(cb) {\r\n        const data = this._charContactsData;\r\n        const charsCount = data.size;\r\n\r\n        // Skip writing contact events, if there are none\r\n        let skip = true;\r\n        data.forEach(contacts => {\r\n            if (contacts[0] > 0)\r\n                skip = false;\r\n        });\r\n        if (skip)\r\n            return;\r\n\r\n        cb.writeOperator(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.COMPONENT_SYSTEM_CHAR);\r\n        cb.writeCommand(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_REPORT_CONTACTS);\r\n        cb.write(charsCount, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT32, false);\r\n\r\n        data.forEach((contacts, index) => {\r\n            const contactsCount = contacts[0];\r\n\r\n            cb.write(index, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT32, false);\r\n            cb.write(contactsCount, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT32, false);\r\n\r\n            for (let i = 0, k = 1; i < contactsCount; i++) {\r\n                // is body 2 valid\r\n                cb.write(contacts[k++], _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_BOOL, false);\r\n                cb.write(contacts[k++] || 0, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT32, false);\r\n                \r\n                // contact position\r\n                // contact normal\r\n                // contact velocity\r\n                // new char velocity\r\n                for (let n = 0; n < 12; n++) {\r\n                    cb.write(contacts[k++], _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_FLOAT32, false);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    _wrapAndWrite(b1Pointer, b2Pointer, type, ignoreCache) {\r\n        const Jolt = this._backend.Jolt;\r\n        const Body = Jolt.Body;\r\n\r\n        const body1 = Jolt.wrapPointer(b1Pointer, Body);\r\n\t\tconst body2 = Jolt.wrapPointer(b2Pointer, Body);\r\n\r\n        this._writeContactPair(body1, body2, type, ignoreCache);\r\n    }\r\n\r\n    _writeContactPair(body1, body2, type, ignoreCache) {\r\n        const backend = this._backend;\r\n        const data = this._contactsData;\r\n        const Jolt = backend.Jolt;\r\n        const tracker = backend.tracker;\r\n\r\n        let idx1 = null;\r\n        if (body1 !== null) {\r\n            idx1 = tracker.getPCID(Jolt.getPointer(body1)) ?? null;\r\n        }\r\n\r\n        let idx2 = null;\r\n        if (body2 !== null) {\r\n            idx2 = tracker.getPCID(Jolt.getPointer(body2)) ?? null;\r\n        }\r\n\r\n        // Persisted contacts will be called once per substep, which may \r\n        // happen multiple times per sim step. For general purposes, the first\r\n        // substep results should be enough, so we can discard the same\r\n        // contact pair after the first substep.\r\n        if (!ignoreCache && body1 && body2) {\r\n            const cache = this._contactsCache;\r\n            const str = `${ idx1 }:${ idx2 }:${ type }`;\r\n            if (cache.has(str)) {\r\n                return;\r\n            }\r\n            cache.add(str);\r\n        }\r\n\r\n        data[0] = ++data[0];\r\n\r\n        data.push(type);\r\n        data.push(!!body1);\r\n        data.push(!!body2);\r\n\r\n        if (body1)\r\n            data.push(idx1);\r\n        \r\n        if (body2)\r\n            data.push(idx2);\r\n    }\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYmFja2VuZHMvam9sdC9vcGVyYXRvcnMvbGlzdGVuZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUt3RDtBQUNMO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELDBGQUFzQjtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsd0ZBQW9CO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsdUNBQXVDO0FBQ3ZEO0FBQ0E7QUFDQSxpREFBaUQsc0ZBQWtCO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsWUFBWTtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQSxnQ0FBZ0MsWUFBWTtBQUM1QztBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsWUFBWTtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0VBQWtFO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsdUNBQXVDO0FBQ3ZEO0FBQ0EseUJBQXlCLHlGQUFxQjtBQUM5Qyx3QkFBd0IsdUZBQW1CO0FBQzNDO0FBQ0EsZ0NBQWdDLHVGQUFtQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixtQkFBbUI7QUFDbEQ7QUFDQTtBQUNBLDJCQUEyQixzRkFBa0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMscUZBQWlCO0FBQ3BELG1DQUFtQyxxRkFBaUI7QUFDcEQ7QUFDQSxvQ0FBb0MsdUZBQW1CO0FBQ3ZEO0FBQ0E7QUFDQSxvQ0FBb0MsdUZBQW1CO0FBQ3ZEO0FBQ0E7QUFDQSx5QkFBeUIsc0ZBQWtCO0FBQzNDO0FBQ0Esb0NBQW9DLHdGQUFvQjtBQUN4RCxvQ0FBb0Msd0ZBQW9CO0FBQ3hELG9DQUFvQyx3RkFBb0I7QUFDeEQ7QUFDQTtBQUNBLG9DQUFvQyx3RkFBb0I7QUFDeEQ7QUFDQSx3Q0FBd0MscUZBQWlCO0FBQ3pEO0FBQ0E7QUFDQSxvREFBb0QscUZBQWlCO0FBQ3JFO0FBQ0E7QUFDQSw0Q0FBNEMsd0ZBQW9CO0FBQ2hFLDRDQUE0Qyx3RkFBb0I7QUFDaEUsNENBQTRDLHdGQUFvQjtBQUNoRSxzQkFBc0I7QUFDdEI7QUFDQSw0Q0FBNEMsd0ZBQW9CO0FBQ2hFLDRDQUE0Qyx3RkFBb0I7QUFDaEUsNENBQTRDLHdGQUFvQjtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5Qyx1RkFBbUI7QUFDNUQseUNBQXlDLHVGQUFtQjtBQUM1RDtBQUNBO0FBQ0Esd0NBQXdDLFlBQVk7QUFDcEQsZ0RBQWdELHdGQUFvQjtBQUNwRSxnREFBZ0Qsd0ZBQW9CO0FBQ3BFLGdEQUFnRCx3RkFBb0I7QUFDcEU7QUFDQSx3Q0FBd0MsWUFBWTtBQUNwRCxnREFBZ0Qsd0ZBQW9CO0FBQ3BFLGdEQUFnRCx3RkFBb0I7QUFDcEUsZ0RBQWdELHdGQUFvQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIseUZBQXFCO0FBQzlDLHdCQUF3Qix1RkFBbUI7QUFDM0MsNkJBQTZCLHVGQUFtQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix1RkFBbUI7QUFDL0Msb0NBQW9DLHVGQUFtQjtBQUN2RDtBQUNBLG1DQUFtQyxtQkFBbUI7QUFDdEQ7QUFDQSx3Q0FBd0MscUZBQWlCO0FBQ3pELDZDQUE2Qyx1RkFBbUI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxRQUFRO0FBQ3hDLDRDQUE0Qyx3RkFBb0I7QUFDaEU7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixNQUFNLElBQUksTUFBTSxJQUFJLE1BQU07QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL1BoeXNpY3NDb21wb25lbnRzLy4vc3JjL2JhY2tlbmRzL2pvbHQvb3BlcmF0b3JzL2xpc3RlbmVyLm1qcz9lNGMzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgICBCVUZGRVJfV1JJVEVfQk9PTCwgQlVGRkVSX1dSSVRFX0ZMT0FUMzIsXHJcbiAgICBCVUZGRVJfV1JJVEVfVUlOVDMyLCBCVUZGRVJfV1JJVEVfVUlOVDgsIENNRF9SRVBPUlRfQ09OVEFDVFMsXHJcbiAgICBDT01QT05FTlRfU1lTVEVNX0JPRFksIENPTVBPTkVOVF9TWVNURU1fQ0hBUiwgQ09OVEFDVF9UWVBFX0FEREVELCBDT05UQUNUX1RZUEVfUEVSU0lTVEVELFxyXG4gICAgQ09OVEFDVF9UWVBFX1JFTU9WRURcclxufSBmcm9tIFwiLi4vLi4vLi4vcGh5c2ljcy9jb21wb25lbnRzL2pvbHQvY29uc3RhbnRzLm1qc1wiO1xyXG5pbXBvcnQgeyBEZWJ1ZyB9IGZyb20gXCIuLi8uLi8uLi9waHlzaWNzL2RlYnVnLm1qc1wiO1xyXG5cclxuY2xhc3MgTGlzdGVuZXIge1xyXG4gICAgY29uc3RydWN0b3IoYmFja2VuZCkge1xyXG4gICAgICAgIHRoaXMuX2xpc3RlbmVyID0gbnVsbDtcclxuICAgICAgICB0aGlzLl9jaGFyTGlzdGVuZXIgPSBudWxsO1xyXG5cclxuICAgICAgICB0aGlzLl9iYWNrZW5kID0gYmFja2VuZDtcclxuXHJcbiAgICAgICAgdGhpcy5fY29udGFjdHNEYXRhID0gWzBdO1xyXG4gICAgICAgIHRoaXMuX2NvbnRhY3RzQ2FjaGUgPSBuZXcgU2V0KCk7XHJcblxyXG4gICAgICAgIHRoaXMuX2NoYXJDb250YWN0c0RhdGEgPSBuZXcgTWFwKCk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGRpcnR5KCkge1xyXG4gICAgICAgIHJldHVybiAodGhpcy5fY29udGFjdHNEYXRhWzBdID4gMCB8fCB0aGlzLl9jaGFyQ29udGFjdHNEYXRhWzBdID4gMCk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IGNoYXJMaXN0ZW5lcigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY2hhckxpc3RlbmVyO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIENvbnRhY3QgRXZlbnRzXHJcblxyXG4gICAgb25Db250YWN0VmFsaWRhdGUoYm9keTEsIGJvZHkyLCBiYXNlT2Zmc2V0LCBjb2xsaWRlU2hhcGVSZXN1bHQpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fYmFja2VuZC5Kb2x0LlZhbGlkYXRlUmVzdWx0X0FjY2VwdEFsbENvbnRhY3RzRm9yVGhpc0JvZHlQYWlyO1xyXG4gICAgfVxyXG5cclxuICAgIGluaXRFdmVudHMoY29uZmlnKSB7XHJcbiAgICAgICAgY29uc3QgSm9sdCA9IHRoaXMuX2JhY2tlbmQuSm9sdDtcclxuXHJcbiAgICAgICAgY29uc3QgbGlzdGVuZXIgPSBuZXcgSm9sdC5Db250YWN0TGlzdGVuZXJKUygpO1xyXG4gICAgICAgIGxpc3RlbmVyLk9uQ29udGFjdFZhbGlkYXRlID0gdGhpcy5vbkNvbnRhY3RWYWxpZGF0ZS5iaW5kKHRoaXMpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmIChjb25maWcuY29udGFjdEFkZGVkRXZlbnRzRW5hYmxlZCkge1xyXG4gICAgICAgICAgICBsaXN0ZW5lci5PbkNvbnRhY3RBZGRlZCA9IHRoaXMub25Db250YWN0QWRkZWQuYmluZCh0aGlzKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBsaXN0ZW5lci5PbkNvbnRhY3RBZGRlZCA9ICgpID0+IHt9O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGNvbmZpZy5jb250YWN0UGVyc2lzdGVkRXZlbnRzRW5hYmxlZCkge1xyXG4gICAgICAgICAgICBsaXN0ZW5lci5PbkNvbnRhY3RQZXJzaXN0ZWQgPSB0aGlzLm9uQ29udGFjdFBlcnNpc3RlZC5iaW5kKHRoaXMpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGxpc3RlbmVyLk9uQ29udGFjdFBlcnNpc3RlZCA9ICgpID0+IHt9O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGNvbmZpZy5jb250YWN0UmVtb3ZlZEV2ZW50c0VuYWJsZWQpIHtcclxuICAgICAgICAgICAgbGlzdGVuZXIuT25Db250YWN0UmVtb3ZlZCA9IHRoaXMub25Db250YWN0UmVtb3ZlZC5iaW5kKHRoaXMpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGxpc3RlbmVyLk9uQ29udGFjdFJlbW92ZWQgPSAoKSA9PiB7fTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuX2JhY2tlbmQucGh5c2ljc1N5c3RlbS5TZXRDb250YWN0TGlzdGVuZXIobGlzdGVuZXIpO1xyXG5cclxuICAgICAgICB0aGlzLl9saXN0ZW5lciA9IGxpc3RlbmVyO1xyXG4gICAgfVxyXG5cclxuICAgIG92ZXJyaWRlQ29udGFjdHMobGlzdGVuZXJUeXBlLCBvdmVycmlkZXMpIHtcclxuICAgICAgICBpZiAobGlzdGVuZXJUeXBlID09PSAnY2hhcicgJiYgIXRoaXMuX2NoYXJMaXN0ZW5lcikge1xyXG4gICAgICAgICAgICB0aGlzLmluaXRDaGFyYWN0ZXJFdmVudHMoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IGxpc3RlbmVyID0gbGlzdGVuZXJUeXBlID09PSAnY29udGFjdHMnID8gdGhpcy5fbGlzdGVuZXIgOiB0aGlzLl9jaGFyTGlzdGVuZXI7XHJcblxyXG4gICAgICAgIGZvciAoY29uc3QgW21ldGhvZCwgZnVuY1N0cl0gb2YgT2JqZWN0LmVudHJpZXMob3ZlcnJpZGVzKSkge1xyXG4gICAgICAgICAgICBsaXN0ZW5lclttZXRob2RdID0gZXZhbCgnKCcgKyBmdW5jU3RyICsgJyknKS5iaW5kKHRoaXMpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBvbkNvbnRhY3RQZXJzaXN0ZWQoYjFQb2ludGVyLCBiMlBvaW50ZXIsIG1hbmlmb2xkUG9pbnRlciwgc2V0dGluZ3NQb2ludGVyKSB7XHJcbiAgICAgICAgdGhpcy5fd3JhcEFuZFdyaXRlKGIxUG9pbnRlciwgYjJQb2ludGVyLCBDT05UQUNUX1RZUEVfUEVSU0lTVEVELCBmYWxzZSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25Db250YWN0UmVtb3ZlZChzdWJTaGFwZVBhaXJQb2ludGVyKSB7XHJcbiAgICAgICAgY29uc3QgYmFja2VuZCA9IHRoaXMuX2JhY2tlbmQ7XHJcbiAgICAgICAgY29uc3QgSm9sdCA9IGJhY2tlbmQuSm9sdDtcclxuXHJcbiAgICAgICAgY29uc3Qgc3ViU2hhcGVQYWlyID0gSm9sdC53cmFwUG9pbnRlcihzdWJTaGFwZVBhaXJQb2ludGVyLCBKb2x0LlN1YlNoYXBlSURQYWlyKTtcclxuICAgICAgICBjb25zdCBib2R5TG9ja0ludGVyZmFjZSA9IGJhY2tlbmQucGh5c2ljc1N5c3RlbS5HZXRCb2R5TG9ja0ludGVyZmFjZSgpO1xyXG5cclxuICAgICAgICBsZXQgYm9keTEgPSBib2R5TG9ja0ludGVyZmFjZS5UcnlHZXRCb2R5KHN1YlNoYXBlUGFpci5HZXRCb2R5MUlEKCkpO1xyXG4gICAgICAgIGxldCBib2R5MiA9IGJvZHlMb2NrSW50ZXJmYWNlLlRyeUdldEJvZHkoc3ViU2hhcGVQYWlyLkdldEJvZHkySUQoKSk7XHJcblxyXG4gICAgICAgIC8vIEEgYm9keSBjb3VsZCBoYXZlIGJlZW4gZGVzdHJveWVkIGJ5IHRoZSB0aW1lIHRoaXMgY2xvc3VyZSBpcyBjYWxsZWQuXHJcbiAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIGJvZHkgaXMgc3RpbGwgdmFsaWQ6XHJcbiAgICAgICAgaWYgKEpvbHQuZ2V0UG9pbnRlcihib2R5MSkgPT09IDApIHtcclxuICAgICAgICAgICAgYm9keTEgPSBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoSm9sdC5nZXRQb2ludGVyKGJvZHkyKSA9PT0gMCkge1xyXG4gICAgICAgICAgICBib2R5MiA9IG51bGw7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLl93cml0ZUNvbnRhY3RQYWlyKGJvZHkxLCBib2R5MiwgQ09OVEFDVF9UWVBFX1JFTU9WRUQsIHRydWUpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uQ29udGFjdEFkZGVkKGIxUG9pbnRlciwgYjJQb2ludGVyLCBtYW5pZm9sZFBvaW50ZXIsIHNldHRpbmdzUG9pbnRlcikge1xyXG4gICAgICAgIGNvbnN0IEpvbHQgPSB0aGlzLl9iYWNrZW5kLkpvbHQ7XHJcbiAgICAgICAgY29uc3QgZGF0YSA9IHRoaXMuX2NvbnRhY3RzRGF0YTtcclxuICAgICAgICBjb25zdCB7IGNvbnRhY3RQb2ludHMsIGNvbnRhY3RQb2ludHNBdmVyYWdlZCB9ID0gdGhpcy5fYmFja2VuZC5jb25maWc7XHJcbiAgICAgICAgY29uc3QgbWFuaWZvbGQgPSBKb2x0LndyYXBQb2ludGVyKG1hbmlmb2xkUG9pbnRlciwgSm9sdC5Db250YWN0TWFuaWZvbGQpO1xyXG5cclxuICAgICAgICB0aGlzLl93cmFwQW5kV3JpdGUoYjFQb2ludGVyLCBiMlBvaW50ZXIsIENPTlRBQ1RfVFlQRV9BRERFRCwgdHJ1ZSk7XHJcblxyXG4gICAgICAgIGNvbnN0IG4gPSBtYW5pZm9sZC5tV29ybGRTcGFjZU5vcm1hbDtcclxuICAgICAgICBjb25zdCBkID0gbWFuaWZvbGQubVBlbmV0cmF0aW9uRGVwdGg7XHJcblxyXG4gICAgICAgIGRhdGEucHVzaChuLkdldFgoKSwgbi5HZXRZKCksIG4uR2V0WigpLCBkKTtcclxuXHJcbiAgICAgICAgaWYgKGNvbnRhY3RQb2ludHMpIHtcclxuICAgICAgICAgICAgY29uc3QganYgPSBKb2x0LlZlYzMucHJvdG90eXBlLnNaZXJvKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IG9mZnNldCA9IG1hbmlmb2xkLm1CYXNlT2Zmc2V0O1xyXG4gICAgICAgICAgICBjb25zdCBwb2ludHMxID0gbWFuaWZvbGQubVJlbGF0aXZlQ29udGFjdFBvaW50c09uMTtcclxuICAgICAgICAgICAgY29uc3QgcG9pbnRzMiA9IG1hbmlmb2xkLm1SZWxhdGl2ZUNvbnRhY3RQb2ludHNPbjI7XHJcbiAgICAgICAgICAgIGNvbnN0IGNvdW50MSA9IHBvaW50czEuc2l6ZSgpO1xyXG5cclxuICAgICAgICAgICAgaWYgKGNvbnRhY3RQb2ludHNBdmVyYWdlZCkge1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb3VudDE7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGp2LkFkZChwb2ludHMxLmF0KGkpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGp2Lk11bCgxIC8gY291bnQxKTtcclxuICAgICAgICAgICAgICAgIGp2LkFkZChvZmZzZXQpO1xyXG4gICAgICAgICAgICAgICAgZGF0YS5wdXNoKGp2LkdldFgoKSwganYuR2V0WSgpLCBqdi5HZXRaKCkpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgY291bnQyID0gcG9pbnRzMS5zaXplKCk7XHJcbiAgICAgICAgICAgICAgICBkYXRhLnB1c2gob2Zmc2V0LkdldFgoKSwgb2Zmc2V0LkdldFkoKSwgb2Zmc2V0LkdldFooKSwgY291bnQxLCBjb3VudDIpO1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb3VudDE7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHAgPSBwb2ludHMxLmF0KGkpO1xyXG4gICAgICAgICAgICAgICAgICAgIGRhdGEucHVzaChwLkdldFgoKSwgcC5HZXRZKCksIHAuR2V0WigpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY291bnQyOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBwID0gcG9pbnRzMi5hdChpKTtcclxuICAgICAgICAgICAgICAgICAgICBkYXRhLnB1c2gocC5HZXRYKCksIHAuR2V0WSgpLCBwLkdldFooKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gQ2hhcmFjdGVyIGNvbnRhY3QgZXZlbnRzXHJcblxyXG4gICAgaW5pdENoYXJhY3RlckV2ZW50cygpIHtcclxuICAgICAgICBjb25zdCBKb2x0ID0gdGhpcy5fYmFja2VuZC5Kb2x0O1xyXG4gICAgICAgIGNvbnN0IGxpc3RlbmVyID0gbmV3IEpvbHQuQ2hhcmFjdGVyQ29udGFjdExpc3RlbmVySlMoKTtcclxuXHJcbiAgICAgICAgbGlzdGVuZXIuT25BZGp1c3RCb2R5VmVsb2NpdHkgPSAoKSA9PiB7fTtcclxuXHJcbiAgICAgICAgbGlzdGVuZXIuT25Db250YWN0VmFsaWRhdGUgPSAoY2hhcmFjdGVyLCBib2R5SUQyLCBzdWJTaGFwZUlEMikgPT4ge1xyXG4gICAgICAgICAgICAvLyBhbGxvdyBhbGxcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgbGlzdGVuZXIuT25Db250YWN0QWRkZWQgPSAoKSA9PiB7fTtcclxuXHJcbiAgICAgICAgbGlzdGVuZXIuT25Db250YWN0U29sdmUgPSB0aGlzLm9uQ2hhckNvbnRhY3RTb2x2ZS5iaW5kKHRoaXMpO1xyXG5cclxuICAgICAgICB0aGlzLl9jaGFyTGlzdGVuZXIgPSBsaXN0ZW5lcjtcclxuICAgIH1cclxuXHJcbiAgICBvbkNoYXJDb250YWN0U29sdmUoY2hhcmFjdGVyLCBib2R5SUQyLCBzdWJTaGFwZUlEMiwgY3AsIGNuLCBjdiwgY29udGFjdE1hdGVyaWFsLCBjaGFyYWN0ZXJWZWxvY2l0eSwgbnYpIHtcclxuICAgICAgICBjb25zdCBiYWNrZW5kID0gdGhpcy5fYmFja2VuZDtcclxuICAgICAgICBjb25zdCBKb2x0ID0gYmFja2VuZC5Kb2x0O1xyXG4gICAgICAgIGNvbnN0IHRyYWNrZXIgPSBiYWNrZW5kLnRyYWNrZXI7XHJcblxyXG4gICAgICAgIGNoYXJhY3RlciA9IEpvbHQud3JhcFBvaW50ZXIoY2hhcmFjdGVyLCBKb2x0LkNoYXJhY3RlclZpcnR1YWwpO1xyXG4gICAgICAgIGNwID0gSm9sdC53cmFwUG9pbnRlcihjcCwgSm9sdC5WZWMzKTtcclxuICAgICAgICBjbiA9IEpvbHQud3JhcFBvaW50ZXIoY24sIEpvbHQuVmVjMyk7XHJcbiAgICAgICAgY3YgPSBKb2x0LndyYXBQb2ludGVyKGN2LCBKb2x0LlZlYzMpO1xyXG4gICAgICAgIG52ID0gSm9sdC53cmFwUG9pbnRlcihudiwgSm9sdC5WZWMzKTtcclxuXHJcbiAgICAgICAgY29uc3QgZGF0YSA9IHRoaXMuX2NoYXJDb250YWN0c0RhdGE7XHJcbiAgICAgICAgY29uc3QgaW5kZXggPSB0cmFja2VyLmdldFBDSUQoSm9sdC5nZXRQb2ludGVyKGNoYXJhY3RlcikpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbnN0IGJvZHlMb2NrSW50ZXJmYWNlID0gYmFja2VuZC5waHlzaWNzU3lzdGVtLkdldEJvZHlMb2NrSW50ZXJmYWNlKCk7XHJcblxyXG4gICAgICAgIGxldCBib2R5MiA9IGJvZHlMb2NrSW50ZXJmYWNlLlRyeUdldEJvZHkoYm9keUlEMik7XHJcbiAgICAgICAgaWYgKEpvbHQuZ2V0UG9pbnRlcihib2R5MikgPT09IDApIHtcclxuICAgICAgICAgICAgYm9keTIgPSBudWxsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IGNvbnRhY3RzID0gZGF0YS5nZXQoaW5kZXgpO1xyXG4gICAgICAgIGlmICghY29udGFjdHMpIHtcclxuICAgICAgICAgICAgY29udGFjdHMgPSBbMF07XHJcbiAgICAgICAgICAgIGRhdGEuc2V0KGluZGV4LCBjb250YWN0cyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb250YWN0c1swXSA9ICsrY29udGFjdHNbMF07XHJcblxyXG4gICAgICAgIGNvbnRhY3RzLnB1c2goISFib2R5Mik7XHJcbiAgICAgICAgaWYgKGJvZHkyKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGluZGV4MiA9IHRyYWNrZXIuZ2V0UENJRChKb2x0LmdldFBvaW50ZXIoYm9keTIpKTtcclxuICAgICAgICAgICAgY29udGFjdHMucHVzaChpbmRleDIpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbnRhY3RzLnB1c2gobnVsbCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBjb250YWN0IHBvc2l0aW9uXHJcbiAgICAgICAgY29udGFjdHMucHVzaChjcC5HZXRYKCkpO1xyXG4gICAgICAgIGNvbnRhY3RzLnB1c2goY3AuR2V0WSgpKTtcclxuICAgICAgICBjb250YWN0cy5wdXNoKGNwLkdldFooKSk7XHJcblxyXG4gICAgICAgIC8vIGNvbnRhY3Qgbm9ybWFsXHJcbiAgICAgICAgY29udGFjdHMucHVzaChjbi5HZXRYKCkpO1xyXG4gICAgICAgIGNvbnRhY3RzLnB1c2goY24uR2V0WSgpKTtcclxuICAgICAgICBjb250YWN0cy5wdXNoKGNuLkdldFooKSk7XHJcblxyXG4gICAgICAgIC8vIGNvbnRhY3QgdmVsb2NpdHlcclxuICAgICAgICBjb250YWN0cy5wdXNoKGN2LkdldFgoKSk7XHJcbiAgICAgICAgY29udGFjdHMucHVzaChjdi5HZXRZKCkpO1xyXG4gICAgICAgIGNvbnRhY3RzLnB1c2goY3YuR2V0WigpKTtcclxuXHJcbiAgICAgICAgLy8gbmV3IGNoYXJhY3RlciB2ZWxvY2l0eVxyXG4gICAgICAgIGNvbnRhY3RzLnB1c2gobnYuR2V0WCgpKTtcclxuICAgICAgICBjb250YWN0cy5wdXNoKG52LkdldFkoKSk7XHJcbiAgICAgICAgY29udGFjdHMucHVzaChudi5HZXRaKCkpO1xyXG4gICAgfVxyXG5cclxuICAgIGluaXRWZWhpY2xlRXZlbnRzKGNvbnN0cmFpbnQpIHtcclxuICAgICAgICBjb25zdCBKb2x0ID0gdGhpcy5fYmFja2VuZC5Kb2x0O1xyXG4gICAgICAgIGNvbnN0IGxpc3RlbmVyID0gSm9sdC5WZWhpY2xlQ29uc3RyYWludENhbGxiYWNrc0pTKCk7XHJcblxyXG4gICAgICAgIGxpc3RlbmVyLkdldENvbWJpbmVkRnJpY3Rpb24gPSAod2hlZWxJbmRleCwgdGlyZUZyaWN0aW9uRGlyZWN0aW9uLCB0aXJlRnJpY3Rpb24sIGJvZHkyLCBzdWJTaGFwZUlEMikgPT4ge1xyXG4gICAgICAgICAgICBib2R5MiA9IEpvbHQud3JhcFBvaW50ZXIoYm9keTIsIEpvbHQuQm9keSk7XHJcbiAgICAgICAgICAgIHJldHVybiBNYXRoLnNxcnQodGlyZUZyaWN0aW9uICogYm9keTIuR2V0RnJpY3Rpb24oKSk7IC8vIFRoaXMgaXMgdGhlIGRlZmF1bHQgY2FsY3VsYXRpb25cclxuICAgICAgICB9O1xyXG4gICAgICAgIGxpc3RlbmVyLk9uUHJlU3RlcENhbGxiYWNrID0gKCkgPT4ge307XHJcbiAgICAgICAgbGlzdGVuZXIuT25Qb3N0Q29sbGlkZUNhbGxiYWNrID0gKCkgPT4ge307XHJcbiAgICAgICAgbGlzdGVuZXIuT25Qb3N0U3RlcENhbGxiYWNrID0gKCkgPT4ge307XHJcblxyXG4gICAgICAgIGxpc3RlbmVyLlNldFZlaGljbGVDb25zdHJhaW50KGNvbnN0cmFpbnQpO1xyXG5cclxuICAgICAgICB0aGlzLl92ZWhpY2xlTGlzdGVuZXIgPSBsaXN0ZW5lcjtcclxuICAgIH1cclxuXHJcbiAgICB3cml0ZShjYikge1xyXG4gICAgICAgIHRoaXMuX3dyaXRlQ29udGFjdEV2ZW50cyhjYik7XHJcbiAgICAgICAgdGhpcy5fd3JpdGVDaGFyYWN0ZXJFdmVudHMoY2IpO1xyXG4gICAgfVxyXG5cclxuICAgIHJlc2V0KGNiKSB7XHJcbiAgICAgICAgdGhpcy5fY29udGFjdHNEYXRhLmxlbmd0aCA9IDA7XHJcbiAgICAgICAgdGhpcy5fY29udGFjdHNEYXRhWzBdID0gMDtcclxuICAgICAgICB0aGlzLl9jb250YWN0c0NhY2hlLmNsZWFyKCk7XHJcbiAgICAgICAgdGhpcy5fY2hhckNvbnRhY3RzRGF0YS5jbGVhcigpO1xyXG4gICAgfVxyXG5cclxuICAgIGRlc3Ryb3koKSB7XHJcbiAgICAgICAgY29uc3QgSm9sdCA9IHRoaXMuX2JhY2tlbmQuSm9sdDtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuX2xpc3RlbmVyKSB7XHJcbiAgICAgICAgICAgIEpvbHQuZGVzdHJveSh0aGlzLl9saXN0ZW5lcik7XHJcbiAgICAgICAgICAgIHRoaXMuX2xpc3RlbmVyID0gbnVsbDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0aGlzLl9jaGFyTGlzdGVuZXIpIHtcclxuICAgICAgICAgICAgSm9sdC5kZXN0cm95KHRoaXMuX2NoYXJMaXN0ZW5lcik7XHJcbiAgICAgICAgICAgIHRoaXMuX2NoYXJMaXN0ZW5lciA9IG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIF93cml0ZUNvbnRhY3RFdmVudHMoY2IpIHtcclxuICAgICAgICBjb25zdCBkYXRhID0gdGhpcy5fY29udGFjdHNEYXRhO1xyXG4gICAgICAgIGNvbnN0IGNvbnRhY3RzQ291bnQgPSBkYXRhWzBdO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmIChjb250YWN0c0NvdW50ID09PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uc3QgeyBjb250YWN0UG9pbnRzLCBjb250YWN0UG9pbnRzQXZlcmFnZWQgfSA9IHRoaXMuX2JhY2tlbmQuY29uZmlnO1xyXG5cclxuICAgICAgICBjYi53cml0ZU9wZXJhdG9yKENPTVBPTkVOVF9TWVNURU1fQk9EWSk7XHJcbiAgICAgICAgY2Iud3JpdGVDb21tYW5kKENNRF9SRVBPUlRfQ09OVEFDVFMpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNiLndyaXRlKGNvbnRhY3RzQ291bnQsIEJVRkZFUl9XUklURV9VSU5UMzIsIGZhbHNlKTtcclxuXHJcbiAgICAgICAgLy8gVE9ET1xyXG4gICAgICAgIC8vIGF2ZXJhZ2UgcG9pbnRzIHBlciBjb250YWN0IHBhaXIsIGluc3RlYWQgb2YgYWxsIGNvbnRhY3RzXHJcblxyXG4gICAgICAgIGZvciAobGV0IGkgPSAwLCBrID0gMTsgaSA8IGNvbnRhY3RzQ291bnQ7IGkrKykge1xyXG4gICAgICAgICAgICAvLyB0eXBlXHJcbiAgICAgICAgICAgIGNvbnN0IHR5cGUgPSBkYXRhW2srK107XHJcbiAgICAgICAgICAgIGNiLndyaXRlKHR5cGUsIEJVRkZFUl9XUklURV9VSU5UOCwgZmFsc2UpO1xyXG5cclxuICAgICAgICAgICAgLy8gaWR4MSwgaWR4MiwgY2FuIGJlIC0xXHJcbiAgICAgICAgICAgIGNvbnN0IGlzVmFsaWRCb2R5MSA9IGRhdGFbaysrXTtcclxuICAgICAgICAgICAgY29uc3QgaXNWYWxpZEJvZHkyID0gZGF0YVtrKytdO1xyXG4gICAgICAgICAgICBjYi53cml0ZShpc1ZhbGlkQm9keTEsIEJVRkZFUl9XUklURV9CT09MLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIGNiLndyaXRlKGlzVmFsaWRCb2R5MiwgQlVGRkVSX1dSSVRFX0JPT0wsIGZhbHNlKTtcclxuICAgICAgICAgICAgaWYgKGlzVmFsaWRCb2R5MSkge1xyXG4gICAgICAgICAgICAgICAgY2Iud3JpdGUoZGF0YVtrKytdLCBCVUZGRVJfV1JJVEVfVUlOVDMyLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGlzVmFsaWRCb2R5Mikge1xyXG4gICAgICAgICAgICAgICAgY2Iud3JpdGUoZGF0YVtrKytdLCBCVUZGRVJfV1JJVEVfVUlOVDMyLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICh0eXBlID09PSBDT05UQUNUX1RZUEVfQURERUQpIHtcclxuICAgICAgICAgICAgICAgIC8vIG5vcm1hbCB4eXpcclxuICAgICAgICAgICAgICAgIGNiLndyaXRlKGRhdGFbaysrXSwgQlVGRkVSX1dSSVRFX0ZMT0FUMzIsIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgIGNiLndyaXRlKGRhdGFbaysrXSwgQlVGRkVSX1dSSVRFX0ZMT0FUMzIsIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgIGNiLndyaXRlKGRhdGFbaysrXSwgQlVGRkVSX1dSSVRFX0ZMT0FUMzIsIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgLy8gZGVwdGhcclxuICAgICAgICAgICAgICAgIGNiLndyaXRlKGRhdGFbaysrXSwgQlVGRkVSX1dSSVRFX0ZMT0FUMzIsIGZhbHNlKTtcclxuICAgIFxyXG4gICAgICAgICAgICAgICAgY2Iud3JpdGUoY29udGFjdFBvaW50cywgQlVGRkVSX1dSSVRFX0JPT0wsIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgIGlmIChjb250YWN0UG9pbnRzKSB7XHJcbiAgICBcclxuICAgICAgICAgICAgICAgICAgICBjYi53cml0ZShjb250YWN0UG9pbnRzQXZlcmFnZWQsIEJVRkZFUl9XUklURV9CT09MLCBmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbnRhY3RQb2ludHNBdmVyYWdlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB3b3JsZCBwb2ludFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYi53cml0ZShkYXRhW2srK10sIEJVRkZFUl9XUklURV9GTE9BVDMyLCBmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNiLndyaXRlKGRhdGFbaysrXSwgQlVGRkVSX1dSSVRFX0ZMT0FUMzIsIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2Iud3JpdGUoZGF0YVtrKytdLCBCVUZGRVJfV1JJVEVfRkxPQVQzMiwgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIG9mZnNldFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYi53cml0ZShkYXRhW2srK10sIEJVRkZFUl9XUklURV9GTE9BVDMyLCBmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNiLndyaXRlKGRhdGFbaysrXSwgQlVGRkVSX1dSSVRFX0ZMT0FUMzIsIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2Iud3JpdGUoZGF0YVtrKytdLCBCVUZGRVJfV1JJVEVfRkxPQVQzMiwgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gY291bnQxLCBjb3VudDJcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgY291bnQxID0gZGF0YVtrKytdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBjb3VudDIgPSBkYXRhW2srK107XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNiLndyaXRlKGNvdW50MSwgQlVGRkVSX1dSSVRFX1VJTlQzMiwgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYi53cml0ZShjb3VudDIsIEJVRkZFUl9XUklURV9VSU5UMzIsIGZhbHNlKTtcclxuICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBsb2NhbCBwb2ludHNcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb3VudDE7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2Iud3JpdGUoZGF0YVtrKytdLCBCVUZGRVJfV1JJVEVfRkxPQVQzMiwgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2Iud3JpdGUoZGF0YVtrKytdLCBCVUZGRVJfV1JJVEVfRkxPQVQzMiwgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2Iud3JpdGUoZGF0YVtrKytdLCBCVUZGRVJfV1JJVEVfRkxPQVQzMiwgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY291bnQyOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNiLndyaXRlKGRhdGFbaysrXSwgQlVGRkVSX1dSSVRFX0ZMT0FUMzIsIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNiLndyaXRlKGRhdGFbaysrXSwgQlVGRkVSX1dSSVRFX0ZMT0FUMzIsIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNiLndyaXRlKGRhdGFbaysrXSwgQlVGRkVSX1dSSVRFX0ZMT0FUMzIsIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIF93cml0ZUNoYXJhY3RlckV2ZW50cyhjYikge1xyXG4gICAgICAgIGNvbnN0IGRhdGEgPSB0aGlzLl9jaGFyQ29udGFjdHNEYXRhO1xyXG4gICAgICAgIGNvbnN0IGNoYXJzQ291bnQgPSBkYXRhLnNpemU7XHJcblxyXG4gICAgICAgIC8vIFNraXAgd3JpdGluZyBjb250YWN0IGV2ZW50cywgaWYgdGhlcmUgYXJlIG5vbmVcclxuICAgICAgICBsZXQgc2tpcCA9IHRydWU7XHJcbiAgICAgICAgZGF0YS5mb3JFYWNoKGNvbnRhY3RzID0+IHtcclxuICAgICAgICAgICAgaWYgKGNvbnRhY3RzWzBdID4gMClcclxuICAgICAgICAgICAgICAgIHNraXAgPSBmYWxzZTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBpZiAoc2tpcClcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG5cclxuICAgICAgICBjYi53cml0ZU9wZXJhdG9yKENPTVBPTkVOVF9TWVNURU1fQ0hBUik7XHJcbiAgICAgICAgY2Iud3JpdGVDb21tYW5kKENNRF9SRVBPUlRfQ09OVEFDVFMpO1xyXG4gICAgICAgIGNiLndyaXRlKGNoYXJzQ291bnQsIEJVRkZFUl9XUklURV9VSU5UMzIsIGZhbHNlKTtcclxuXHJcbiAgICAgICAgZGF0YS5mb3JFYWNoKChjb250YWN0cywgaW5kZXgpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgY29udGFjdHNDb3VudCA9IGNvbnRhY3RzWzBdO1xyXG5cclxuICAgICAgICAgICAgY2Iud3JpdGUoaW5kZXgsIEJVRkZFUl9XUklURV9VSU5UMzIsIGZhbHNlKTtcclxuICAgICAgICAgICAgY2Iud3JpdGUoY29udGFjdHNDb3VudCwgQlVGRkVSX1dSSVRFX1VJTlQzMiwgZmFsc2UpO1xyXG5cclxuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDAsIGsgPSAxOyBpIDwgY29udGFjdHNDb3VudDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBpcyBib2R5IDIgdmFsaWRcclxuICAgICAgICAgICAgICAgIGNiLndyaXRlKGNvbnRhY3RzW2srK10sIEJVRkZFUl9XUklURV9CT09MLCBmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICBjYi53cml0ZShjb250YWN0c1trKytdIHx8IDAsIEJVRkZFUl9XUklURV9VSU5UMzIsIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgLy8gY29udGFjdCBwb3NpdGlvblxyXG4gICAgICAgICAgICAgICAgLy8gY29udGFjdCBub3JtYWxcclxuICAgICAgICAgICAgICAgIC8vIGNvbnRhY3QgdmVsb2NpdHlcclxuICAgICAgICAgICAgICAgIC8vIG5ldyBjaGFyIHZlbG9jaXR5XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBuID0gMDsgbiA8IDEyOyBuKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBjYi53cml0ZShjb250YWN0c1trKytdLCBCVUZGRVJfV1JJVEVfRkxPQVQzMiwgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgX3dyYXBBbmRXcml0ZShiMVBvaW50ZXIsIGIyUG9pbnRlciwgdHlwZSwgaWdub3JlQ2FjaGUpIHtcclxuICAgICAgICBjb25zdCBKb2x0ID0gdGhpcy5fYmFja2VuZC5Kb2x0O1xyXG4gICAgICAgIGNvbnN0IEJvZHkgPSBKb2x0LkJvZHk7XHJcblxyXG4gICAgICAgIGNvbnN0IGJvZHkxID0gSm9sdC53cmFwUG9pbnRlcihiMVBvaW50ZXIsIEJvZHkpO1xyXG5cdFx0Y29uc3QgYm9keTIgPSBKb2x0LndyYXBQb2ludGVyKGIyUG9pbnRlciwgQm9keSk7XHJcblxyXG4gICAgICAgIHRoaXMuX3dyaXRlQ29udGFjdFBhaXIoYm9keTEsIGJvZHkyLCB0eXBlLCBpZ25vcmVDYWNoZSk7XHJcbiAgICB9XHJcblxyXG4gICAgX3dyaXRlQ29udGFjdFBhaXIoYm9keTEsIGJvZHkyLCB0eXBlLCBpZ25vcmVDYWNoZSkge1xyXG4gICAgICAgIGNvbnN0IGJhY2tlbmQgPSB0aGlzLl9iYWNrZW5kO1xyXG4gICAgICAgIGNvbnN0IGRhdGEgPSB0aGlzLl9jb250YWN0c0RhdGE7XHJcbiAgICAgICAgY29uc3QgSm9sdCA9IGJhY2tlbmQuSm9sdDtcclxuICAgICAgICBjb25zdCB0cmFja2VyID0gYmFja2VuZC50cmFja2VyO1xyXG5cclxuICAgICAgICBsZXQgaWR4MSA9IG51bGw7XHJcbiAgICAgICAgaWYgKGJvZHkxICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIGlkeDEgPSB0cmFja2VyLmdldFBDSUQoSm9sdC5nZXRQb2ludGVyKGJvZHkxKSkgPz8gbnVsbDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBpZHgyID0gbnVsbDtcclxuICAgICAgICBpZiAoYm9keTIgIT09IG51bGwpIHtcclxuICAgICAgICAgICAgaWR4MiA9IHRyYWNrZXIuZ2V0UENJRChKb2x0LmdldFBvaW50ZXIoYm9keTIpKSA/PyBudWxsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gUGVyc2lzdGVkIGNvbnRhY3RzIHdpbGwgYmUgY2FsbGVkIG9uY2UgcGVyIHN1YnN0ZXAsIHdoaWNoIG1heSBcclxuICAgICAgICAvLyBoYXBwZW4gbXVsdGlwbGUgdGltZXMgcGVyIHNpbSBzdGVwLiBGb3IgZ2VuZXJhbCBwdXJwb3NlcywgdGhlIGZpcnN0XHJcbiAgICAgICAgLy8gc3Vic3RlcCByZXN1bHRzIHNob3VsZCBiZSBlbm91Z2gsIHNvIHdlIGNhbiBkaXNjYXJkIHRoZSBzYW1lXHJcbiAgICAgICAgLy8gY29udGFjdCBwYWlyIGFmdGVyIHRoZSBmaXJzdCBzdWJzdGVwLlxyXG4gICAgICAgIGlmICghaWdub3JlQ2FjaGUgJiYgYm9keTEgJiYgYm9keTIpIHtcclxuICAgICAgICAgICAgY29uc3QgY2FjaGUgPSB0aGlzLl9jb250YWN0c0NhY2hlO1xyXG4gICAgICAgICAgICBjb25zdCBzdHIgPSBgJHsgaWR4MSB9OiR7IGlkeDIgfTokeyB0eXBlIH1gO1xyXG4gICAgICAgICAgICBpZiAoY2FjaGUuaGFzKHN0cikpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYWNoZS5hZGQoc3RyKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGRhdGFbMF0gPSArK2RhdGFbMF07XHJcblxyXG4gICAgICAgIGRhdGEucHVzaCh0eXBlKTtcclxuICAgICAgICBkYXRhLnB1c2goISFib2R5MSk7XHJcbiAgICAgICAgZGF0YS5wdXNoKCEhYm9keTIpO1xyXG5cclxuICAgICAgICBpZiAoYm9keTEpXHJcbiAgICAgICAgICAgIGRhdGEucHVzaChpZHgxKTtcclxuICAgICAgICBcclxuICAgICAgICBpZiAoYm9keTIpXHJcbiAgICAgICAgICAgIGRhdGEucHVzaChpZHgyKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IHsgTGlzdGVuZXIgfTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/backends/jolt/operators/listener.mjs\n");

/***/ }),

/***/ "./src/backends/jolt/operators/modifier.mjs":
/*!**************************************************!*\
  !*** ./src/backends/jolt/operators/modifier.mjs ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Modifier: () => (/* binding */ Modifier)\n/* harmony export */ });\n/* harmony import */ var _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../physics/components/jolt/constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n/* harmony import */ var _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../physics/debug.mjs */ \"./src/physics/debug.mjs\");\n/* harmony import */ var _motion_state_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../motion-state.mjs */ \"./src/backends/jolt/motion-state.mjs\");\n\r\n\r\n\r\n\r\nclass Modifier {\r\n    constructor(backend) {\r\n        this._backend = backend;\r\n\r\n        const Jolt = backend.Jolt;\r\n\r\n        this._joltVec3_1 = new Jolt.Vec3();\r\n        this._joltVec3_2 = new Jolt.Vec3();\r\n        this._joltVec3_3 = new Jolt.Vec3();\r\n        this._joltQuat_1 = new Jolt.Quat();\r\n    }\r\n\r\n    get joltVec3_1() {\r\n        return this._joltVec3_1;\r\n    }\r\n\r\n    get joltVec3_2() {\r\n        return this._joltVec3_2;\r\n    }\r\n\r\n    modify() {\r\n        const cb = this._backend.inBuffer;\r\n        const command = cb.readCommand();\r\n        let ok = true;\r\n\r\n        switch (command) {\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_CHANGE_GRAVITY:\r\n                ok = this._changeGravity(cb);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_ADD_FORCE:\r\n                ok = this._applyForces(cb, 'AddForce');\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_ADD_IMPULSE:\r\n                ok = this._applyForces(cb, 'AddImpulse');\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_ADD_ANGULAR_IMPULSE:\r\n                ok = this._applyForces(cb, 'AddAngularImpulse', true);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_APPLY_BUOYANCY_IMPULSE:\r\n                ok = this._applyBuoyancyImpulse(cb);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_ADD_TORQUE:\r\n                ok = this._applyForces(cb, 'AddTorque', true);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_MOVE_BODY:\r\n                ok = this._moveBody(cb);\r\n                break;\r\n            \r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_MOVE_KINEMATIC:\r\n                ok = this._moveKinematic(cb);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_PAIR_BODY:\r\n                ok  = this._pairBody(cb);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_SET_LIN_VEL:\r\n                ok = this._applyForces(cb, 'SetLinearVelocity', true);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_CHAR_SET_LIN_VEL:\r\n                this._setCharacterLinVel(cb);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_SET_ANG_VEL:\r\n                ok = this._applyForces(cb, 'SetAngularVelocity', true);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_RESET_VELOCITIES:\r\n                ok = this._resetVelocities(cb);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_SET_MOTION_TYPE:\r\n                ok = this._setMotionType(cb);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_TOGGLE_GROUP_PAIR:\r\n                ok = this._toggleGroupPair(cb);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_SET_USER_DATA:\r\n                ok = this._setUserData(cb);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_CHAR_SET_SHAPE:\r\n                ok = this._setCharShape(cb);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_USE_MOTION_STATE:\r\n                ok = this._useMotionState(cb);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_SET_CONSTRAINT_ENABLED:\r\n                ok = this._setConstraintEnabled(cb);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_SET_DRIVER_INPUT:\r\n                ok = this._setDriverInput(cb);\r\n                break;\r\n        }\r\n\r\n        return ok;\r\n    }\r\n\r\n    destroy() {\r\n        const Jolt = this._backend.Jolt;\r\n\r\n        Jolt.destroy(this._joltVec3_1);\r\n        Jolt.destroy(this._joltVec3_2);\r\n        Jolt.destroy(this._joltVec3_3);\r\n        Jolt.destroy(this._joltQuat_1);\r\n\r\n        this._joltVec3_1 = null;\r\n        this._joltVec3_2 = null;\r\n        this._joltVec3_3 = null;\r\n        this._joltQuat_1 = null;        \r\n    }\r\n\r\n    _changeGravity(cb) {\r\n        const jv = this._joltVec3;\r\n\r\n        jv.FromBuffer(cb);\r\n\r\n        try {\r\n            this._backend.system.SetGravity(jv);\r\n        } catch (e) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(e);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    _applyForces(cb, method, oneAttr = false) {\r\n        const jv1 = this._joltVec3_1;\r\n        const jv2 = this._joltVec3_2;\r\n\r\n        const body = this._getBody(cb);\r\n\r\n        try {\r\n            jv1.FromBuffer(cb);\r\n            if (oneAttr) {\r\n                body[method](jv1);\r\n            } else {\r\n                if (cb.flag) {\r\n                    jv2.FromBuffer(cb);\r\n                    body[method](jv1, jv2);\r\n                } else {\r\n                    body[method](jv1);\r\n                }\r\n            }\r\n            this._backend.bodyInterface.ActivateBody(body.GetID());\r\n        } catch (e) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(e);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    _setCharShape(cb) {\r\n        const backend = this._backend;\r\n        const tracker = backend.tracker;\r\n        const pcid = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        const useCallback = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n        const shapeIndex = cb.flag ? cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32) : null;\r\n\r\n        const char = tracker.getBodyByPCID(pcid);\r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && !char) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.warn(`Unable to locate character under id: ${ pcid }`);\r\n            return false;\r\n        }\r\n\r\n        let shape;\r\n        if (shapeIndex != null) {\r\n            shape = tracker.shapeMap.get(shapeIndex);\r\n            if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && !shape) {\r\n                _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.warn(`Unable to locate shape: ${ shapeIndex }`);\r\n                return false;\r\n            }\r\n        } else {\r\n            shape = char.originalShape;\r\n        }\r\n\r\n        let cbIndex;\r\n        if (useCallback) {\r\n            cbIndex = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        }\r\n\r\n        const ok = char.SetShape(shape, \r\n            backend.config.penetrationSlop * 1.5,\r\n            backend.bpFilter,\r\n            backend.objFilter,\r\n            backend.bodyFilter,\r\n            backend.shapeFilter,\r\n            backend.joltInterface.GetTempAllocator());\r\n        \r\n        if (ok && useCallback) {\r\n            const cb = backend.outBuffer;\r\n\r\n            cb.writeOperator(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.COMPONENT_SYSTEM_CHAR);\r\n            cb.writeCommand(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_REPORT_SET_SHAPE);\r\n            cb.write(cbIndex, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT32, false);\r\n        }\r\n        \r\n        return true;\r\n    }\r\n\r\n    _resetCharShape(cb) {\r\n        const backend = this._backend;\r\n        const tracker = backend.tracker;\r\n        const pcid = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        const useCallback = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n\r\n        let cbIndex;\r\n        if (useCallback) {\r\n            cbIndex = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        }\r\n\r\n        const char = tracker.getBodyByPCID(pcid);\r\n\r\n        const ok = char.SetShape(shape, \r\n            backend.config.penetrationSlop * 1.5,\r\n            backend.bpFilter,\r\n            backend.objFilter,\r\n            backend.bodyFilter,\r\n            backend.shapeFilter,\r\n            backend.joltInterface.GetTempAllocator());\r\n        \r\n        if (ok && useCallback) {\r\n            const cb = backend.outBuffer;\r\n\r\n            cb.writeOperator(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.COMPONENT_SYSTEM_CHAR);\r\n            cb.writeCommand(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_REPORT_SET_SHAPE);\r\n            cb.write(cbIndex, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT32, false);\r\n        }\r\n        \r\n        return true;\r\n    }\r\n\r\n    _setUserData(cb) {\r\n        const obj = this._getBody(cb);\r\n\r\n        try {\r\n            const shape = obj.GetShape();\r\n            const value = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            shape.SetUserData(value);\r\n        } catch (e) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(e);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    _useMotionState(cb) {\r\n        const body = this._getBody(cb);\r\n        const useMotionState = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n\r\n        if (!body.motionState && useMotionState) {\r\n            body.motionState = new _motion_state_mjs__WEBPACK_IMPORTED_MODULE_2__.MotionState(body);\r\n        } else if (body.motionState && !useMotionState) {\r\n            body.motionState = null;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    _setCharacterLinVel(cb) {\r\n        const jv = this._joltVec3_1;\r\n        const char = this._getBody(cb);\r\n\r\n        try {\r\n            jv.FromBuffer(cb);\r\n            char.SetLinearVelocity(jv);\r\n        } catch (e) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(e);\r\n            return false;\r\n        }        \r\n    }\r\n\r\n    _applyBuoyancyImpulse(cb) {\r\n        const backend = this._backend;\r\n        const body = this._getBody(cb);\r\n        const jv1 = this._joltVec3_1;\r\n        const jv2 = this._joltVec3_2;\r\n        const jv3 = this._joltVec3_3;\r\n\r\n        try {\r\n            const waterSurfacePosition = jv1.FromBuffer(cb);\r\n            const surfaceNormal = jv2.FromBuffer(cb);\r\n            const buoyancy = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            const linearDrag = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            const angularDrag = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32);\r\n            const fluidVelocity = jv3.FromBuffer(cb);\r\n            const deltaTime = backend.config.fixedStep;\r\n            const gravity = backend.physicsSystem.GetGravity();\r\n\r\n            body.ApplyBuoyancyImpulse(waterSurfacePosition, surfaceNormal, buoyancy, linearDrag, angularDrag, fluidVelocity, gravity, deltaTime);\r\n        } catch (e) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(e);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    _setConstraintEnabled(cb) {\r\n        const backend = this._backend;\r\n        const Jolt = backend.Jolt;\r\n\r\n        const index = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        const enabled = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n        const activate = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n\r\n        const data = backend.tracker.constraintMap.get(index);\r\n        \r\n        // An index could be old and constraint might have been already destroyed.\r\n        if (!data) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.warn(`Trying to enable/disable a constraint that has already been destroyed: ${ index }`);\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            data.constraint.SetEnabled(enabled);\r\n    \r\n            if (activate) {\r\n                const bodyInterface = backend.bodyInterface;\r\n                const { body1, body2 } = data;\r\n    \r\n                if (Jolt.getPointer(data.body1) !== 0) {\r\n                    bodyInterface.ActivateBody(body1.GetID());\r\n                }\r\n                if (Jolt.getPointer(data.body2) !== 0) {\r\n                    bodyInterface.ActivateBody(body2.GetID());\r\n                }\r\n            }\r\n        } catch (e) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(e);\r\n            return false;\r\n        }\r\n        \r\n        return true;\r\n    }\r\n\r\n    _resetVelocities(cb) {\r\n        const jv1 = this._joltVec3_1;\r\n        const body = this._getBody(cb);\r\n\r\n        try {\r\n            jv1.Set(0, 0, 0);\r\n\r\n            body.SetLinearVelocity(jv1);\r\n            body.SetAngularVelocity(jv1);\r\n        } catch (e) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(e);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    _moveBody(cb) {\r\n        const backend = this._backend;\r\n        const Jolt = backend.Jolt;\r\n        const jv = this._joltVec3_1;\r\n        const jq = this._joltQuat_1;\r\n        const body = this._getBody(cb);\r\n\r\n        try {\r\n            jv.FromBuffer(cb);\r\n            jq.FromBuffer(cb);\r\n\r\n            if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n                const type = body.GetMotionType();\r\n                if (type === Jolt.EMotionType_Dynamic || type === Jolt.EMotionType_Kinematic) {\r\n                    backend.bodyInterface.SetPositionAndRotation(body.GetID(), jv, jq, Jolt.Activate);\r\n                } else {\r\n                    _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.warnOnce('Trying to move a static body.');\r\n                }\r\n            } else {\r\n                backend.bodyInterface.SetPositionAndRotation(body.GetID(), jv, jq, Jolt.Activate);\r\n            }\r\n        } catch (e) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(e);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    _pairBody(cb) {\r\n        const char = this._getBody(cb);\r\n        const body = this._getBody(cb);\r\n\r\n        char.pairedBody = body;\r\n        body.isCharPaired = true;\r\n\r\n        return true;\r\n    }\r\n\r\n    _moveKinematic(cb) {\r\n        const backend = this._backend;\r\n        const Jolt = backend.Jolt;\r\n        const jv = this._joltVec3_1;\r\n        const jq = this._joltQuat_1;\r\n        const body = this._getBody(cb);\r\n\r\n        try {\r\n            jv.FromBuffer(cb);\r\n            jq.FromBuffer(cb);\r\n\r\n            const dt = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32) || backend.config.fixedStep;\r\n\r\n            if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n                const type = body.GetMotionType();\r\n                if (type === Jolt.EMotionType_Dynamic || type === Jolt.EMotionType_Kinematic) {\r\n                    backend.bodyInterface.MoveKinematic(body.GetID(), jv, jq, dt);\r\n                } else {\r\n                    _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.warnOnce('Trying to move a static body.');\r\n                }\r\n            } else {\r\n                backend.bodyInterface.SetPositionAndRotation(body.GetID(), jv, jq, dt);\r\n            }\r\n        } catch (e) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(e);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }    \r\n\r\n    _setDriverInput(cb) {\r\n        const backend = this._backend;\r\n        const tracker = backend.tracker;\r\n        const index = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n\r\n        const body = tracker.getBodyByPCID(index);\r\n        const data = tracker.constraintMap.get(index);\r\n        if (!data || !body) {\r\n            return true;\r\n        }\r\n\r\n        data.constraint.controller.SetDriverInput(\r\n            cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32),\r\n            cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32),\r\n            cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32),\r\n            cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_FLOAT32)\r\n        );\r\n\r\n        backend.bodyInterface.ActivateBody(body.GetID());\r\n\r\n        return true;\r\n    }\r\n\r\n    _toggleGroupPair(cb) {\r\n        const backend = this._backend;\r\n        const enable = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n        const group = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT16);\r\n        const subGroup1 = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT16);\r\n        const subGroup2 = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT16);\r\n\r\n        try {\r\n            const filter = backend.groupFilterTables[group];\r\n\r\n            if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n                let ok = true;\r\n                ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.assert(!!filter, `Unable to locate filter group: ${ group }`);\r\n                ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.assert(subGroup1 <= filter.maxIndex, `Sub group number is over the filter table size: ${ subGroup1 }`);\r\n                ok = ok && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.assert(subGroup2 <= filter.maxIndex, `Sub group number is over the filter table size: ${ subGroup2 }`);\r\n                if (!ok) return false;\r\n            }\r\n\r\n            if (enable) {\r\n                filter.EnableCollision(subGroup1, subGroup2);\r\n            } else {\r\n                filter.DisableCollision(subGroup1, subGroup2);\r\n            }\r\n        } catch (e) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(e);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    _setMotionType(cb) {\r\n        const backend = this._backend;\r\n        const Jolt = backend.Jolt;\r\n        const tracker = backend.tracker;\r\n        const bodyInterface = backend.bodyInterface;\r\n        const index = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT16);\r\n        const body = tracker.getBodyByPCID(index);\r\n        const type = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n\r\n        _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.checkUint(type);\r\n\r\n        try {\r\n            bodyInterface.SetMotionType(body.GetID(), type, Jolt.Activate);\r\n            tracker.update(body, index);\r\n        } catch (e) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(e);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    _getBody(cb) {\r\n        const index = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        return this._backend.tracker.getBodyByPCID(index);\r\n    }\r\n}\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/backends/jolt/operators/modifier.mjs\n");

/***/ }),

/***/ "./src/backends/jolt/operators/querier.mjs":
/*!*************************************************!*\
  !*** ./src/backends/jolt/operators/querier.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Querier: () => (/* binding */ Querier)\n/* harmony export */ });\n/* harmony import */ var _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../physics/components/jolt/constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n/* harmony import */ var _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../physics/debug.mjs */ \"./src/physics/debug.mjs\");\n\r\n\r\n\r\nconst params = [];\r\n\r\nclass Querier {\r\n    constructor(backend) {\r\n        this._backend = backend;\r\n        \r\n        const Jolt = backend.Jolt;\r\n\r\n        // TODO\r\n        // refactor to lazy allocate\r\n\r\n        this._rayCast = new Jolt.RRayCast();\r\n        this._rayCastSettings = new Jolt.RayCastSettings();\r\n        this._tempVectors = [\r\n            new Jolt.Quat(), new Jolt.Vec3(), new Jolt.Vec3(), \r\n            new Jolt.Vec3(), new Jolt.Vec3(), new Jolt.Vec3(),\r\n        ];\r\n\r\n        this._shapeCastSettings = new Jolt.ShapeCastSettings();\r\n\r\n        this._collectorRayFirst = new Jolt.CastRayClosestHitCollisionCollector();\r\n        this._collectorRayAll = new Jolt.CastRayAllHitCollisionCollector();\r\n\r\n        this._collectorShapeFirst = new Jolt.CastShapeClosestHitCollisionCollector();\r\n        this._collectorShapeAll = new Jolt.CastShapeAllHitCollisionCollector();\r\n\r\n        this._bodies = [];\r\n    }\r\n\r\n    query() {\r\n        const cb = this._backend.inBuffer;\r\n        const command = cb.readCommand();\r\n        let ok = true;\r\n\r\n        switch (command) {\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_CAST_RAY:\r\n                ok = this._castRay(cb);\r\n                break;\r\n\r\n            case _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_CAST_SHAPE:\r\n                ok = this._castShape(cb);\r\n                break;\r\n\r\n            default:\r\n                _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(`Invalid querier command: ${ command }`);\r\n                return false;\r\n        }\r\n\r\n        return ok;\r\n    }\r\n\r\n    destroy() {\r\n        this._tempVectors.forEach(vector => {\r\n            Jolt.destroy(vector);\r\n        });\r\n        this._tempVectors.length = 0;\r\n\r\n        Jolt.destroy(this._rayCast);\r\n        this._rayCast = null;\r\n\r\n        Jolt.destroy(this._rayCastSettings);\r\n        this._rayCastSettings = null;\r\n\r\n        Jolt.destroy(this._shapeCastSettings);\r\n        this._shapeCastSettings = null;\r\n\r\n        Jolt.destroy(this._collectorRayFirst);\r\n        this._collectorRayFirst = null;\r\n\r\n        Jolt.destroy(this._collectorRayAll);\r\n        this._collectorRayAll = null;\r\n\r\n        this._commandsBuffer.destroy();\r\n        this._commandsBuffer = null;\r\n\r\n        params.length = 0;\r\n        params = undefined;\r\n    }\r\n\r\n    _castRay(cb) {\r\n        const backend = this._backend;\r\n        const castSettings = this._rayCastSettings;\r\n        const jv = this._tempVectors[1];\r\n        const cast = this._rayCast;\r\n        const buffer = backend.outBuffer;\r\n        const tracker = backend.tracker;\r\n        const system = backend.physicsSystem;\r\n        const Jolt = backend.Jolt;\r\n        const joltInterface = backend.joltInterface;\r\n\r\n        buffer.writeOperator(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.COMPONENT_SYSTEM_MANAGER);\r\n        buffer.writeCommand(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_CAST_RAY);\r\n        \r\n        const queryIndex = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n        buffer.write(queryIndex, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT16, false);\r\n\r\n        try {\r\n            jv.FromBuffer(cb);\r\n            cast.mOrigin = jv;\r\n    \r\n            jv.FromBuffer(cb);\r\n            cast.mDirection = jv;\r\n    \r\n            const firstOnly = cb.flag ? cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL) : true;\r\n            const calculateNormal = cb.flag ? cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL) : false;\r\n            const ignoreBackFaces = cb.flag ? cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL) : true;\r\n            const solidConvex = cb.flag ? cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL) : true;\r\n            const collector = firstOnly ? this._collectorRayFirst : this._collectorRayAll;\r\n            const { bodyFilter, shapeFilter } = this._backend;\r\n\r\n            buffer.write(firstOnly, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_BOOL, false);\r\n    \r\n            castSettings.mBackFaceMode = ignoreBackFaces ? Jolt.EBackFaceMode_IgnoreBackFaces : Jolt.EBackFaceMode_CollideWithBackFaces;\r\n            castSettings.mTreatConvexAsSolid = solidConvex;\r\n            \r\n            const customBPFilter = cb.flag;\r\n            const bpFilter = customBPFilter ? new Jolt.DefaultBroadPhaseLayerFilter(joltInterface.GetObjectVsBroadPhaseLayerFilter(), cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32)) : backend.bpFilter;\r\n\r\n            const customObjFilter = cb.flag;\r\n            const objFilter = customObjFilter ? new Jolt.DefaultObjectLayerFilter(joltInterface.GetObjectLayerPairFilter(), cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32)) : backend.objFilter;\r\n\r\n            system.GetNarrowPhaseQuery().CastRay(cast, castSettings, collector, bpFilter, objFilter, bodyFilter, shapeFilter);\r\n\r\n            if (firstOnly) {\r\n                if (collector.HadHit()) {\r\n                    buffer.write(1, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT16, false); // hits count\r\n                    Querier.writeRayHit(buffer, system, tracker, cast, calculateNormal, collector.mHit, Jolt);\r\n                } else {\r\n                    buffer.write(0, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT16, false); // hits count\r\n                }\r\n            } else {\r\n                const hits = collector.mHits;\r\n                const count = hits.size();\r\n                buffer.write(count, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT16, false); // hits count\r\n                for (let i = 0; i < count; i++) {\r\n                    Querier.writeRayHit(buffer, system, tracker, cast, calculateNormal, hits.at(i), Jolt);\r\n                }\r\n            }\r\n    \r\n            collector.Reset();\r\n\r\n            if (customBPFilter) {\r\n                Jolt.destroy(bpFilter);\r\n            }\r\n\r\n            if (customObjFilter) {\r\n                Jolt.destroy(objFilter);\r\n            }\r\n            \r\n        } catch (e) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(e);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    _castShape(cb) {\r\n        const buffer = this._backend.outBuffer;\r\n        const tempVectors = this._tempVectors;\r\n        const scale = tempVectors[1];\r\n        const direction = tempVectors[2];\r\n        const position = tempVectors[3];\r\n        const offset = tempVectors[4];\r\n        const rotation = tempVectors[0];\r\n        const backend = this._backend;\r\n        const castSettings = this._shapeCastSettings;\r\n        const tracker = backend.tracker;\r\n        const system = backend.physicsSystem;\r\n        const Jolt = backend.Jolt;\r\n        const joltInterface = backend.joltInterface;\r\n\r\n        const queryIndex = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n\r\n        buffer.writeOperator(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.COMPONENT_SYSTEM_MANAGER);\r\n        buffer.writeCommand(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CMD_CAST_SHAPE);\r\n        buffer.write(queryIndex, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT16, false);\r\n        \r\n        try {\r\n            position.FromBuffer(cb);\r\n            rotation.FromBuffer(cb);\r\n            direction.FromBuffer(cb);\r\n            cb.flag ? scale.FromBuffer(cb) : scale.Set(1, 1, 1);\r\n            cb.flag ? offset.FromBuffer(cb) : offset.Set(0, 0, 0);\r\n            if (cb.flag) castSettings.mBackFaceModeTriangles = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n            if (cb.flag) castSettings.mBackFaceModeConvex = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT8);\r\n            if (cb.flag) castSettings.mUseShrunkenShapeAndConvexRadius = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n            if (cb.flag) castSettings.mReturnDeepestPoint = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL);\r\n            \r\n            const firstOnly = cb.flag ? cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL) : true;\r\n            const calculateNormal = cb.flag ? cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_BOOL) : false;\r\n            const collector = firstOnly ? this._collectorShapeFirst : this._collectorShapeAll;\r\n            const shapeIndex = cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32);\r\n\r\n            buffer.write(firstOnly, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_BOOL, false);\r\n            \r\n            params.length = 0;\r\n\r\n            const shape = tracker.shapeMap.get(shapeIndex);\r\n            if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && !shape) {\r\n                _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.warn(`Unable to locate shape for shape cast: ${ shapeIndex }`);\r\n                return false;\r\n            }\r\n\r\n            const transform = Jolt.Mat44.prototype.sRotationTranslation(rotation, position);\r\n            const shapeCast = new Jolt.RShapeCast(shape, scale, transform, direction);\r\n            const { bodyFilter, shapeFilter } = backend;\r\n\r\n            const customBPFilter = cb.flag;\r\n            const bpFilter = customBPFilter ? new Jolt.DefaultBroadPhaseLayerFilter(joltInterface.GetObjectVsBroadPhaseLayerFilter(), cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32)) : backend.bpFilter;\r\n\r\n            const customObjFilter = cb.flag;\r\n            const objFilter = customObjFilter ? new Jolt.DefaultObjectLayerFilter(joltInterface.GetObjectLayerPairFilter(), cb.read(_physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_READ_UINT32)) : backend.objFilter;\r\n\r\n            system.GetNarrowPhaseQuery().CastShape(shapeCast, castSettings, offset, collector, bpFilter, objFilter, bodyFilter, shapeFilter);\r\n            \r\n            if (firstOnly) {\r\n                if (collector.HadHit()) {\r\n                    buffer.write(1, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT16, false); // hits count\r\n                    Querier.writeShapeHit(buffer, system, tracker, shapeCast, calculateNormal, collector.mHit, Jolt);\r\n                } else {\r\n                    buffer.write(0, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT16, false); // hits count\r\n                }\r\n            } else {\r\n                const hits = collector.mHits;\r\n                const count = hits.size();\r\n                buffer.write(count, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT16, false); // hits count\r\n                for (let i = 0; i < count; i++) {\r\n                    Querier.writeShapeHit(buffer, system, tracker, shapeCast, calculateNormal, hits.at(i), Jolt);\r\n                }\r\n            }\r\n\r\n            collector.Reset();\r\n\r\n            Jolt.destroy(shapeCast);\r\n            \r\n            if (customBPFilter) {\r\n                Jolt.destroy(bpFilter);\r\n            }\r\n\r\n            if (customObjFilter) {\r\n                Jolt.destroy(objFilter);\r\n            }\r\n\r\n        } catch (e) {\r\n            _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev && _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.error(e);\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static writeRayHit(buffer, system, tracker, cast, calculateNormal, hit, Jolt) {\r\n        const body = system.GetBodyLockInterfaceNoLock().TryGetBody(hit.mBodyID);\r\n        const point = cast.GetPointOnRay(hit.mFraction);\r\n        const normal = calculateNormal ? body.GetWorldSpaceSurfaceNormal(hit.mSubShapeID2, point) : null;\r\n\r\n        const index = tracker.getPCID(Jolt.getPointer(body));\r\n        buffer.write(index, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT32, false);\r\n        buffer.write(point, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_JOLTVEC32, false);\r\n        buffer.write(normal, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_JOLTVEC32);\r\n    }\r\n\r\n    static writeShapeHit(buffer, system, tracker, cast, calculateNormal, hit, Jolt) {\r\n        const body = system.GetBodyLockInterfaceNoLock().TryGetBody(hit.mBodyID2);\r\n        const transform = cast.mCenterOfMassStart;\r\n        const point = transform.GetTranslation();\r\n        const dir = cast.mDirection;\r\n\r\n        dir.Mul(hit.mFraction);\r\n        point.Add(dir);\r\n\r\n        const normal = calculateNormal ? body.GetWorldSpaceSurfaceNormal(hit.mSubShapeID2, point) : null;\r\n\r\n        const index = tracker.getPCID(Jolt.getPointer(body));\r\n        buffer.write(index, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_UINT32, false);\r\n        buffer.write(point, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_JOLTVEC32, false);\r\n        buffer.write(normal, _physics_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_0__.BUFFER_WRITE_JOLTVEC32);\r\n    }\r\n}\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/backends/jolt/operators/querier.mjs\n");

/***/ }),

/***/ "./src/backends/jolt/operators/tracker.mjs":
/*!*************************************************!*\
  !*** ./src/backends/jolt/operators/tracker.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tracker: () => (/* binding */ Tracker)\n/* harmony export */ });\n/* harmony import */ var _physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../physics/debug.mjs */ \"./src/physics/debug.mjs\");\n\r\n\r\nclass Tracker {\r\n    constructor(Jolt) {\r\n        this._Jolt = Jolt;\r\n\r\n        // TODO\r\n        // eval: get rid of _dynamic and _kinematic\r\n        this._dynamic = new Set();\r\n        this._kinematic = new Set();\r\n\r\n        this._character = new Set();\r\n        this._bodyMap = new Map();\r\n        this._idxMap = new Map();\r\n        this._shapeMap = new Map();\r\n        this._constraintMap = new Map();\r\n\r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            this._debug = new Set();\r\n\r\n            Object.defineProperty(this, 'debug', {\r\n                get: () => { return this._debug; }\r\n            });\r\n        }\r\n    }\r\n\r\n    get dynamic() {\r\n        return this._dynamic;\r\n    }\r\n\r\n    get kinematic() {\r\n        return this._kinematic;\r\n    }\r\n\r\n    get character() {\r\n        return this._character;\r\n    }\r\n\r\n    get shapeMap() {\r\n        return this._shapeMap;\r\n    }\r\n\r\n    get constraintMap() {\r\n        return this._constraintMap;\r\n    }\r\n\r\n    add(body, index) {\r\n        const Jolt = this._Jolt;\r\n\r\n        if (body.isCharacter) {\r\n            this._character.add(body);\r\n        } else {\r\n            const motionType = body.GetMotionType();\r\n            const bodyType = body.GetBodyType();\r\n    \r\n            if (bodyType === Jolt.EBodyType_RigidBody) {\r\n                switch (motionType) {\r\n                    case Jolt.EMotionType_Dynamic:\r\n                        this._dynamic.add(body);\r\n                        break;\r\n                    case Jolt.EMotionType_Kinematic:\r\n                        this._kinematic.add(body);\r\n                        break;\r\n                    case Jolt.EMotionType_Static:\r\n                        // no need to track statics\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && body.debugDraw) {\r\n            this._debug.add(body);\r\n        }\r\n\r\n        this._idxMap.set(Jolt.getPointer(body), index);\r\n        this._bodyMap.set(index, body);\r\n    }\r\n\r\n    addConstraint(index, constraint, body1, body2) {\r\n        this._constraintMap.set(index, { constraint, body1, body2 });\r\n    }\r\n\r\n    getBodyByPCID(index) {\r\n        return this._bodyMap.get(index);\r\n    }\r\n\r\n    getPCID(index) {\r\n        return this._idxMap.get(index);\r\n    }\r\n\r\n    update(body, index) {\r\n        this.remove(body);\r\n        this.add(body, index);\r\n    }\r\n\r\n    stopTrackingBody(body) {\r\n        this._dynamic.delete(body);\r\n        this._kinematic.delete(body);\r\n        this._character.delete(body);\r\n        \r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            this._debug.delete(body);\r\n        }\r\n        \r\n        const jid = this._Jolt.getPointer(body);\r\n        const idx = this._idxMap.get(jid);\r\n\r\n        this._bodyMap.delete(idx);\r\n        this._idxMap.delete(jid);\r\n    }\r\n\r\n    destroy() {\r\n        const Jolt = this._Jolt;\r\n\r\n        this._dynamic.clear();\r\n        this._kinematic.clear();\r\n\r\n        this._character.forEach(char => {\r\n            Jolt.destroy(char);\r\n        });\r\n        this._character.clear();\r\n\r\n        this._bodyMap.forEach(body => {\r\n            Jolt.destroy(body);\r\n        });\r\n        this._bodyMap.clear();\r\n\r\n        if (_physics_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            this._debug.clear();\r\n        }\r\n\r\n        this._Jolt = null;\r\n    }\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYmFja2VuZHMvam9sdC9vcGVyYXRvcnMvdHJhY2tlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBbUQ7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHFEQUFLO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVkscURBQUs7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QywwQkFBMEI7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVkscURBQUs7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxZQUFZLHFEQUFLO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUGh5c2ljc0NvbXBvbmVudHMvLi9zcmMvYmFja2VuZHMvam9sdC9vcGVyYXRvcnMvdHJhY2tlci5tanM/MjNhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEZWJ1ZyB9IGZyb20gXCIuLi8uLi8uLi9waHlzaWNzL2RlYnVnLm1qc1wiO1xyXG5cclxuY2xhc3MgVHJhY2tlciB7XHJcbiAgICBjb25zdHJ1Y3RvcihKb2x0KSB7XHJcbiAgICAgICAgdGhpcy5fSm9sdCA9IEpvbHQ7XHJcblxyXG4gICAgICAgIC8vIFRPRE9cclxuICAgICAgICAvLyBldmFsOiBnZXQgcmlkIG9mIF9keW5hbWljIGFuZCBfa2luZW1hdGljXHJcbiAgICAgICAgdGhpcy5fZHluYW1pYyA9IG5ldyBTZXQoKTtcclxuICAgICAgICB0aGlzLl9raW5lbWF0aWMgPSBuZXcgU2V0KCk7XHJcblxyXG4gICAgICAgIHRoaXMuX2NoYXJhY3RlciA9IG5ldyBTZXQoKTtcclxuICAgICAgICB0aGlzLl9ib2R5TWFwID0gbmV3IE1hcCgpO1xyXG4gICAgICAgIHRoaXMuX2lkeE1hcCA9IG5ldyBNYXAoKTtcclxuICAgICAgICB0aGlzLl9zaGFwZU1hcCA9IG5ldyBNYXAoKTtcclxuICAgICAgICB0aGlzLl9jb25zdHJhaW50TWFwID0gbmV3IE1hcCgpO1xyXG5cclxuICAgICAgICBpZiAoRGVidWcuZGV2KSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2RlYnVnID0gbmV3IFNldCgpO1xyXG5cclxuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsICdkZWJ1ZycsIHtcclxuICAgICAgICAgICAgICAgIGdldDogKCkgPT4geyByZXR1cm4gdGhpcy5fZGVidWc7IH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGdldCBkeW5hbWljKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9keW5hbWljO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBraW5lbWF0aWMoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2tpbmVtYXRpYztcclxuICAgIH1cclxuXHJcbiAgICBnZXQgY2hhcmFjdGVyKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jaGFyYWN0ZXI7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHNoYXBlTWFwKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9zaGFwZU1hcDtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgY29uc3RyYWludE1hcCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fY29uc3RyYWludE1hcDtcclxuICAgIH1cclxuXHJcbiAgICBhZGQoYm9keSwgaW5kZXgpIHtcclxuICAgICAgICBjb25zdCBKb2x0ID0gdGhpcy5fSm9sdDtcclxuXHJcbiAgICAgICAgaWYgKGJvZHkuaXNDaGFyYWN0ZXIpIHtcclxuICAgICAgICAgICAgdGhpcy5fY2hhcmFjdGVyLmFkZChib2R5KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zdCBtb3Rpb25UeXBlID0gYm9keS5HZXRNb3Rpb25UeXBlKCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGJvZHlUeXBlID0gYm9keS5HZXRCb2R5VHlwZSgpO1xyXG4gICAgXHJcbiAgICAgICAgICAgIGlmIChib2R5VHlwZSA9PT0gSm9sdC5FQm9keVR5cGVfUmlnaWRCb2R5KSB7XHJcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKG1vdGlvblR5cGUpIHtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIEpvbHQuRU1vdGlvblR5cGVfRHluYW1pYzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fZHluYW1pYy5hZGQoYm9keSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgSm9sdC5FTW90aW9uVHlwZV9LaW5lbWF0aWM6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2tpbmVtYXRpYy5hZGQoYm9keSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgSm9sdC5FTW90aW9uVHlwZV9TdGF0aWM6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIG5vIG5lZWQgdG8gdHJhY2sgc3RhdGljc1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKERlYnVnLmRldiAmJiBib2R5LmRlYnVnRHJhdykge1xyXG4gICAgICAgICAgICB0aGlzLl9kZWJ1Zy5hZGQoYm9keSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLl9pZHhNYXAuc2V0KEpvbHQuZ2V0UG9pbnRlcihib2R5KSwgaW5kZXgpO1xyXG4gICAgICAgIHRoaXMuX2JvZHlNYXAuc2V0KGluZGV4LCBib2R5KTtcclxuICAgIH1cclxuXHJcbiAgICBhZGRDb25zdHJhaW50KGluZGV4LCBjb25zdHJhaW50LCBib2R5MSwgYm9keTIpIHtcclxuICAgICAgICB0aGlzLl9jb25zdHJhaW50TWFwLnNldChpbmRleCwgeyBjb25zdHJhaW50LCBib2R5MSwgYm9keTIgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Qm9keUJ5UENJRChpbmRleCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9ib2R5TWFwLmdldChpbmRleCk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0UENJRChpbmRleCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9pZHhNYXAuZ2V0KGluZGV4KTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGUoYm9keSwgaW5kZXgpIHtcclxuICAgICAgICB0aGlzLnJlbW92ZShib2R5KTtcclxuICAgICAgICB0aGlzLmFkZChib2R5LCBpbmRleCk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RvcFRyYWNraW5nQm9keShib2R5KSB7XHJcbiAgICAgICAgdGhpcy5fZHluYW1pYy5kZWxldGUoYm9keSk7XHJcbiAgICAgICAgdGhpcy5fa2luZW1hdGljLmRlbGV0ZShib2R5KTtcclxuICAgICAgICB0aGlzLl9jaGFyYWN0ZXIuZGVsZXRlKGJvZHkpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmIChEZWJ1Zy5kZXYpIHtcclxuICAgICAgICAgICAgdGhpcy5fZGVidWcuZGVsZXRlKGJvZHkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBjb25zdCBqaWQgPSB0aGlzLl9Kb2x0LmdldFBvaW50ZXIoYm9keSk7XHJcbiAgICAgICAgY29uc3QgaWR4ID0gdGhpcy5faWR4TWFwLmdldChqaWQpO1xyXG5cclxuICAgICAgICB0aGlzLl9ib2R5TWFwLmRlbGV0ZShpZHgpO1xyXG4gICAgICAgIHRoaXMuX2lkeE1hcC5kZWxldGUoamlkKTtcclxuICAgIH1cclxuXHJcbiAgICBkZXN0cm95KCkge1xyXG4gICAgICAgIGNvbnN0IEpvbHQgPSB0aGlzLl9Kb2x0O1xyXG5cclxuICAgICAgICB0aGlzLl9keW5hbWljLmNsZWFyKCk7XHJcbiAgICAgICAgdGhpcy5fa2luZW1hdGljLmNsZWFyKCk7XHJcblxyXG4gICAgICAgIHRoaXMuX2NoYXJhY3Rlci5mb3JFYWNoKGNoYXIgPT4ge1xyXG4gICAgICAgICAgICBKb2x0LmRlc3Ryb3koY2hhcik7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5fY2hhcmFjdGVyLmNsZWFyKCk7XHJcblxyXG4gICAgICAgIHRoaXMuX2JvZHlNYXAuZm9yRWFjaChib2R5ID0+IHtcclxuICAgICAgICAgICAgSm9sdC5kZXN0cm95KGJvZHkpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuX2JvZHlNYXAuY2xlYXIoKTtcclxuXHJcbiAgICAgICAgaWYgKERlYnVnLmRldikge1xyXG4gICAgICAgICAgICB0aGlzLl9kZWJ1Zy5jbGVhcigpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5fSm9sdCA9IG51bGw7XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCB7IFRyYWNrZXIgfTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/backends/jolt/operators/tracker.mjs\n");

/***/ }),

/***/ "./src/index.mjs":
/*!***********************!*\
  !*** ./src/index.mjs ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _physics_init_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./physics/init.mjs */ \"./src/physics/init.mjs\");\n\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({ init: _physics_init_mjs__WEBPACK_IMPORTED_MODULE_0__.init });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTBDO0FBQzFDO0FBQ0EsaUVBQWUsRUFBRSxJQUFJLHVEQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUGh5c2ljc0NvbXBvbmVudHMvLi9zcmMvaW5kZXgubWpzP2IzZGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5pdCB9IGZyb20gXCIuL3BoeXNpY3MvaW5pdC5tanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHsgaW5pdCB9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.mjs\n");

/***/ }),

/***/ "./src/physics/components/jolt/body/component.mjs":
/*!********************************************************!*\
  !*** ./src/physics/components/jolt/body/component.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BodyComponent: () => (/* binding */ BodyComponent)\n/* harmony export */ });\n/* harmony import */ var _debug_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../debug.mjs */ \"./src/physics/debug.mjs\");\n/* harmony import */ var _util_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../util.mjs */ \"./src/physics/util.mjs\");\n/* harmony import */ var _component_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../component.mjs */ \"./src/physics/components/jolt/component.mjs\");\n/* harmony import */ var _constants_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n\r\n\r\n\r\n\r\n\r\nconst vec3 = new pc.Vec3();\r\n\r\nclass BodyComponent extends _component_mjs__WEBPACK_IMPORTED_MODULE_2__.ShapeComponent {\r\n\r\n    // ---- BODY PROPS ----\r\n\r\n    // Position of the body (not of the center of mass)\r\n    _position = new pc.Vec3();\r\n\r\n    // Rotation of the body.\r\n    _rotation = new pc.Quat();\r\n\r\n    // World space linear velocity of the center of mass (m/s)\r\n    _linearVelocity = new pc.Vec3();\r\n\r\n    // World space angular velocity (rad/s)\r\n    _angularVelocity = new pc.Vec3();\r\n\r\n    // Motion type, determines if the object is static, dynamic or kinematic.\r\n    _motionType = pc.JOLT_MOTION_TYPE_STATIC;\r\n\r\n    // Enables/disables the use of motion state for this entity. Not used by static bodies.\r\n    _useMotionState = true;\r\n\r\n    // The collision layer this body belongs to (determines if two objects can collide).\r\n    // Allows cheap filtering.\r\n    _objectLayer = 0;\r\n\r\n    // The collision group this body belongs to (determines if two objects can collide).\r\n    // Expensive, so disabled by default.\r\n    _collisionGroup = null;\r\n\r\n    // Sub-group (within the collision group). Expensive, so disabled by default.\r\n    _subGroup = null;\r\n\r\n    // Which degrees of freedom this body has (can be used to limit simulation to 2D)\r\n    _allowedDOFs = pc.JOLT_ALLOWED_DOFS_ALL;\r\n\r\n    // When this body is created as static, this setting tells the system to create a\r\n    // MotionProperties object so that the object can be switched to kinematic or dynamic.\r\n    _allowDynamicOrKinematic = false;\r\n\r\n    // If this body is a sensor. A sensor will receive collision callbacks, but will not\r\n    // cause any collision responses and can be used as a trigger volume.\r\n    _isSensor = false;\r\n\r\n    // Motion quality, or how well it detects collisions when it has a high velocity.\r\n    _motionQuality = pc.JOLT_MOTION_QUALITY_DISCRETE;\r\n\r\n    // If this body can go to sleep or not.\r\n    _allowSleeping = true;\r\n\r\n    // Friction of the body (dimensionless number, usually between 0 and 1, 0 = no friction,\r\n    // 1 = friction force equals force that presses the two bodies together). Note that bodies\r\n    // can have negative friction but the combined friction should never go below zero.\r\n    _friction = 0.2;\r\n\r\n    // Restitution of body (dimensionless number, usually between 0 and 1, 0 = completely\r\n    // inelastic collision response, 1 = completely elastic collision response). Note that\r\n    // bodies can have negative restitution but the combined restitution should never go below zero.\r\n    _restitution = 0;\r\n\r\n    // Linear damping: dv/dt = -c * v. c must be between 0 and 1 but is usually close to 0.\r\n    _linearDamping = 0;\r\n\r\n    // Angular damping: dw/dt = -c * w. c must be between 0 and 1 but is usually close to 0.\r\n    _angularDamping = 0;\r\n\r\n    // Maximum linear velocity that this body can reach (m/s)\r\n    _maxLinearVelocity = 500;\r\n\r\n    // Maximum angular velocity that this body can reach (rad/s)\r\n    _maxAngularVelocity = 0.25 * Math.PI * 60;\r\n\r\n    // Value to multiply gravity with for this body.\r\n    _gravityFactor = 1;\r\n\r\n    // When calculating the inertia (not when it is provided) the calculated inertia will be multiplied by this value.\r\n    _inertiaMultiplier = 1;\r\n\r\n    // Determines how mMassPropertiesOverride will be used. By default tells Jolt to\r\n    // auto-calculate by the shape.\r\n    _overrideMassProperties = pc.JOLT_OMP_CALCULATE_MASS_AND_INERTIA;\r\n\r\n    // Used only if Jolt.CalculateInertia or Jolt.MassAndInertiaProvided is selected for\r\n    // mass calculation method\r\n    _overrideMass = 1;\r\n\r\n    // Used if Jolt.MassAndInertiaProvided is selected for mass calculation method.\r\n    // Backend will create inertia matrix from the given position/rotation.\r\n    _overrideInertiaPosition = new pc.Vec3();\r\n    _overrideInertiaRotation = new pc.Quat();\r\n\r\n    constructor(system, entity) {\r\n        super(system, entity);\r\n    }\r\n\r\n    set linearVelocity(vec) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            const ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkVec(vec, `Invalid linear velocity vector`);\r\n            if (!ok) return;\r\n        }\r\n\r\n        if (!vec.equals(this._linearVelocity)) {\r\n            this._linearVelocity.copy(vec);\r\n            this.system.addCommand(\r\n                _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.OPERATOR_MODIFIER, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.CMD_SET_LIN_VEL, this._index,\r\n                vec, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false\r\n            );\r\n        }\r\n    }\r\n\r\n    get linearVelocity() {\r\n        return this._linearVelocity;\r\n    }\r\n\r\n    set angularVelocity(vec) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            const ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkVec(vec, `Invalid angular velocity vector`);\r\n            if (!ok) return;\r\n        }\r\n\r\n        if (!vec.equals(this._angularVelocity)) {\r\n            this._angularVelocity.copy(vec);\r\n            this.system.addCommand(\r\n                _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.OPERATOR_MODIFIER, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.CMD_SET_ANG_VEL, this._index,\r\n                vec, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false\r\n            );\r\n        }\r\n    }\r\n\r\n    get angularVelocity() {\r\n        return this._angularVelocity;\r\n    }\r\n\r\n    set motionType(type) {\r\n        _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkUint(type, `Invalid motion type: ${ type }`);\r\n        this._motionType = type;\r\n        this.system.addCommand(\r\n            _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.OPERATOR_MODIFIER, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.CMD_SET_MOTION_TYPE, this._index,\r\n            type, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_UINT8, false\r\n        );\r\n    }\r\n\r\n    get motionType() {\r\n        return this._motionType;\r\n    }\r\n\r\n    get collisionGroup() {\r\n        return this._group;\r\n    }\r\n\r\n    get subGroup() {\r\n        return this._subGroup;\r\n    }\r\n\r\n    get index() {\r\n        return this._index;\r\n    }\r\n\r\n    get userData() {\r\n        return this._userData;\r\n    }\r\n\r\n    set userData(num) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            let ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(num, `Invalid user data value. Should be a number: ${ num }`);\r\n            if (!ok)\r\n                return;\r\n        }\r\n\r\n        this._userData = num;\r\n\r\n        this.system.addCommand(\r\n            _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.OPERATOR_MODIFIER, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.CMD_SET_USER_DATA, this._index,\r\n            num, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false\r\n        );      \r\n    }\r\n\r\n    get useMotionState() {\r\n        return this._useMotionState;\r\n    }\r\n\r\n    set useMotionState(bool) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            const ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkBool(bool, `Invalid bool value for useMotionState property: ${ bool }`);\r\n            if (!ok)\r\n                return;\r\n        }\r\n\r\n        this.system.addCommand(\r\n            _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.OPERATOR_MODIFIER, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.CMD_USE_MOTION_STATE, this._index,\r\n            bool, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_BOOL, false\r\n        );\r\n    }\r\n\r\n    addForce(force, offset, isOffsetLocal = false) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            let ok = true;\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkVec(force, `Invalid add force vector`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkVec(offset, `Invalid add force offset`);\r\n            if (!ok) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        let _offset = null;\r\n        if (offset) {\r\n            _offset = vec3.copy(offset);\r\n\r\n            if (isOffsetLocal) {\r\n                this._localToWorld(_offset);\r\n            }\r\n        }\r\n\r\n        this.system.addCommand(\r\n            _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.OPERATOR_MODIFIER, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.CMD_ADD_FORCE, this._index,\r\n            force, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false,\r\n            _offset, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, true\r\n        );\r\n    }\r\n\r\n    addForceScalars(forceX, forceY, forceZ, offsetX = 0, offsetY = 0, offsetZ = 0, isOffsetLocal = false) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            let ok = true;\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(forceX, `Invalid add impulse X component: ${ forceX }`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(forceY, `Invalid add impulse Y component: ${ forceY }`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(forceZ, `Invalid add impulse Z component: ${ forceZ }`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(offsetX, `Invalid add impulse offset X component: ${ offsetX }`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(offsetY, `Invalid add impulse offset Y component: ${ offsetY }`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(offsetZ, `Invalid add impulse offset Z component: ${ offsetZ }`);\r\n            if (!ok) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        let offset = null;\r\n        if (offsetX !== 0 || offsetY !== 0 || offsetZ !== 0) {\r\n            offset = vec3.set(offsetX, offsetY, offsetZ);\r\n\r\n            if (isOffsetLocal) {\r\n                this._localToWorld(offset);\r\n            }\r\n        }\r\n\r\n        this.system.addCommand(\r\n            _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.OPERATOR_MODIFIER, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.CMD_ADD_FORCE, this._index,\r\n            forceX, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false,\r\n            forceY, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false,\r\n            forceZ, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false,\r\n            offset, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, true\r\n        );\r\n    }\r\n\r\n    addImpulse(impulse, offset = pc.Vec3.ZERO, isOffsetLocal = false) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            let ok = true;\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkVec(impulse, `Invalid add impulse vector:`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkVec(offset, `Invalid add impulse offset:`);\r\n            if (!ok) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        let _offset = null;\r\n        if (offset) {\r\n            _offset = vec3.copy(offset);\r\n\r\n            if (isOffsetLocal) {\r\n                this._localToWorld(_offset);\r\n            }\r\n        }\r\n\r\n        this.system.addCommand(\r\n            _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.OPERATOR_MODIFIER, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.CMD_ADD_IMPULSE, this._index,\r\n            impulse, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false,\r\n            _offset, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, true\r\n        );\r\n    }\r\n\r\n    addImpulseScalars(impulseX, impulseY, impulseZ, offsetX = 0, offsetY = 0, offsetZ = 0, isOffsetLocal = false) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            let ok = true;\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(impulseX, `Invalid add impulse X component: ${ impulseX }`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(impulseY, `Invalid add impulse Y component: ${ impulseY }`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(impulseZ, `Invalid add impulse Z component: ${ impulseZ }`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(offsetX, `Invalid add impulse offset X component: ${ offsetX }`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(offsetY, `Invalid add impulse offset Y component: ${ offsetY }`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(offsetZ, `Invalid add impulse offset Z component: ${ offsetZ }`);\r\n            if (!ok) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        let offset = null;\r\n        if (offsetX !== 0 || offsetY !== 0 || offsetZ !== 0) {\r\n            offset = vec3.set(offsetX, offsetY, offsetZ);\r\n\r\n            if (isOffsetLocal) {\r\n                this._localToWorld(offset);\r\n            }\r\n        }\r\n\r\n        this.system.addCommand(\r\n            _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.OPERATOR_MODIFIER, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.CMD_ADD_FORCE, this._index,\r\n            impulseX, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false,\r\n            impulseY, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false,\r\n            impulseZ, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false,\r\n            offset, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, true\r\n        );\r\n    }\r\n\r\n    applyBuoyancyImpulse(waterSurfacePosition, surfaceNormal, buoyancy, linearDrag, angularDrag, fluidVelocity) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            let ok = true;\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkVec(waterSurfacePosition, `Invalid water surface position vector`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkVec(surfaceNormal, `Invalid surface normal`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(buoyancy, `Invalid buoyancy scalar: ${ buoyancy }`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(linearDrag, `Invalid linear drag scalar: ${ linearDrag }`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(angularDrag, `Invalid angular drag scalar: ${ angularDrag }`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkVec(fluidVelocity, `Invalid fluid velocity vector`);\r\n            if (!ok) return;\r\n        }\r\n\r\n        this.system.addCommand(\r\n            _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.OPERATOR_MODIFIER, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.CMD_APPLY_BUOYANCY_IMPULSE, this._index,\r\n            waterSurfacePosition, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false,\r\n            surfaceNormal, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false,\r\n            buoyancy, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false,\r\n            linearDrag, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false,\r\n            angularDrag, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false,\r\n            fluidVelocity, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false\r\n        );\r\n    }\r\n\r\n    addAngularImpulse(impulse) {\r\n        this.system.addCommand(\r\n            _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.OPERATOR_MODIFIER, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.CMD_ADD_IMPULSE, this._index,\r\n            impulse, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false\r\n        );\r\n    }\r\n\r\n    addTorque(torque) {\r\n        this.system.addCommand(\r\n            _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.OPERATOR_MODIFIER, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.CMD_ADD_FORCE, this._index,\r\n            torque, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false\r\n        );\r\n    }\r\n\r\n    writeIsometry() {\r\n        const entity = this.entity;\r\n        if (entity._dirtyWorld) {\r\n            const position = entity.getPosition();\r\n            const rotation = entity.getRotation();\r\n\r\n            this.system.addCommand(\r\n                _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.OPERATOR_MODIFIER, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.CMD_MOVE_BODY, this._index,\r\n                position, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false,\r\n                rotation, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false\r\n            );\r\n\r\n            if (this._motionType === pc.JOLT_MOTION_TYPE_DYNAMIC) {\r\n                this.resetVelocities();\r\n            }\r\n        }\r\n    }\r\n\r\n    moveKinematic(pos, rot, dt = 0) {\r\n        this.system.addCommand(\r\n            _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.OPERATOR_MODIFIER, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.CMD_MOVE_KINEMATIC, this._index,\r\n            pos, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false,\r\n            rot, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false,\r\n            dt, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false\r\n        );\r\n    }\r\n\r\n    writeComponentData(cb) {\r\n        const ok = _component_mjs__WEBPACK_IMPORTED_MODULE_2__.ShapeComponent.writeShapeData(cb, this);\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && !ok) {\r\n            _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.warn('Error creating a shape data.');\r\n            cb.reset();\r\n            return;\r\n        }\r\n\r\n        cb.write(this._index, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_UINT32, false);\r\n\r\n        // We always use world position and rotation from the current entity the component\r\n        // is attached to (instead of default zero vectors)\r\n        const entity = this.entity;\r\n        const pos = entity.getPosition();\r\n        const rot = entity.getRotation();\r\n\r\n        // TODO\r\n        // get rid of flags\r\n\r\n        // Loss of precision for pos/rot (64 -> 32)\r\n        cb.write(pos, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false);\r\n        cb.write(rot, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false);\r\n\r\n        cb.write(this._motionType, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_UINT8, false);\r\n        cb.write(this._useMotionState, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_BOOL, false);\r\n        cb.write(this._objectLayer, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_UINT32, false);\r\n        cb.write(this._linearVelocity, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false);\r\n        cb.write(this._angularVelocity, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false);\r\n        cb.write(this._maxLinearVelocity, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._maxAngularVelocity, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._friction, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._restitution, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._linearDamping, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._angularDamping, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._gravityFactor, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._inertiaMultiplier, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._allowedDOFs, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_UINT8, false);\r\n        cb.write(this._allowDynamicOrKinematic, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_BOOL, false);\r\n        cb.write(this._isSensor, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_BOOL, false);\r\n        cb.write(this._motionQuality, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_UINT8, false);\r\n        cb.write(this._allowSleeping, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_BOOL, false);\r\n        cb.write(this._collisionGroup, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_UINT32);\r\n        cb.write(this._subGroup, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_UINT32);\r\n\r\n        const massProps = this._overrideMassProperties;\r\n        cb.write(massProps, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_UINT8, false);\r\n\r\n        if (massProps !== pc.JOLT_OMP_CALCULATE_MASS_AND_INERTIA) {\r\n            cb.write(this._overrideMass, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false);\r\n\r\n            if (this._overrideMassProperties === pc.JOLT_OMP_MASS_AND_INERTIA_PROVIDED) {\r\n                // override inertia\r\n                // Potential precision loss (64 -> 32)\r\n                cb.write(this._overrideInertiaPosition, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false);\r\n                cb.write(this._overrideInertiaRotation, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false);\r\n            }\r\n        }\r\n\r\n        _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && cb.write(this._debugDraw, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_BOOL, false);\r\n    }\r\n\r\n    resetVelocities() {\r\n        this.system.addCommand(_constants_mjs__WEBPACK_IMPORTED_MODULE_3__.OPERATOR_MODIFIER, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.CMD_RESET_VELOCITIES, this._index);\r\n    }\r\n\r\n    onEnable() {\r\n        const system = this.system;\r\n        const shape = this._shape;\r\n        const isCompoundChild = this._isCompoundChild;\r\n\r\n        this._index = system.getIndex(this.entity);\r\n\r\n        if ((shape === _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.SHAPE_MESH || shape === _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.SHAPE_CONVEX_HULL || shape === _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.SHAPE_HEIGHTFIELD) && \r\n            this._renderAsset && !this._meshes) {\r\n            this._addMeshes();\r\n        } else if (!isCompoundChild) {\r\n            system.createBody(this);\r\n        }\r\n\r\n        if (!isCompoundChild) {\r\n            const motionType = this._motionType;\r\n            if ((motionType === pc.JOLT_MOTION_TYPE_DYNAMIC && this._trackDynamic) || motionType === pc.JOLT_MOTION_TYPE_KINEMATIC) {\r\n                this._isometryEvent = this.system.on('write-isometry', this.writeIsometry, this);\r\n            }\r\n        }\r\n    }\r\n\r\n    onDisable() {\r\n        super.onDisable();\r\n\r\n        const system = this.system;\r\n        const componentIndex = this._index;\r\n\r\n        system.setIndexFree(componentIndex);\r\n\r\n        // TODO\r\n        // Jolt currently exposes only static compounds to Wasm. Which means,\r\n        // that a compound parent cannot change children. So, currently\r\n        // a child cannot be added/removed, we can only destroy/create\r\n        // parent.\r\n\r\n        if (this._isCompoundChild) return;\r\n\r\n        system.addCommand(_constants_mjs__WEBPACK_IMPORTED_MODULE_3__.OPERATOR_CLEANER, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.CMD_DESTROY_BODY, componentIndex);\r\n\r\n        this._isometryEvent?.off();\r\n        this._isometryEvent = null;\r\n    }\r\n\r\n    _localToWorld(vec) {\r\n        const m4 = this.entity.getWorldTransform();\r\n        m4.transformPoint(vec, vec);\r\n    }\r\n\r\n    _addMeshes() {\r\n        const id = this._renderAsset;\r\n        const assets = this.system.app.assets;\r\n\r\n        const onAssetFullyReady = (asset) => {\r\n            this._meshes = asset.resource.meshes;\r\n            this.system.createBody(this);\r\n        };\r\n\r\n        const loadAndHandleAsset = (asset) => {\r\n            asset.ready((asset) => {\r\n                if (asset.data.containerAsset) {\r\n                    const containerAsset = assets.get(asset.data.containerAsset);\r\n                    if (containerAsset.loaded) {\r\n                        onAssetFullyReady(asset);\r\n                    } else {\r\n                        containerAsset.ready(() => {\r\n                            onAssetFullyReady(asset);\r\n                        });\r\n                        assets.load(containerAsset);\r\n                    }\r\n                } else {\r\n                    onAssetFullyReady(asset);\r\n                }\r\n            });\r\n\r\n            assets.load(asset);\r\n        };\r\n\r\n        const asset = assets.get(id);\r\n        if (asset) {\r\n            loadAndHandleAsset(asset);\r\n        } else {\r\n            assets.once('add:' + id, loadAndHandleAsset);\r\n        }        \r\n    }\r\n}\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/physics/components/jolt/body/component.mjs\n");

/***/ }),

/***/ "./src/physics/components/jolt/body/system.mjs":
/*!*****************************************************!*\
  !*** ./src/physics/components/jolt/body/system.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BodyComponentSystem: () => (/* binding */ BodyComponentSystem)\n/* harmony export */ });\n/* harmony import */ var _debug_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../debug.mjs */ \"./src/physics/debug.mjs\");\n/* harmony import */ var _util_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../util.mjs */ \"./src/physics/util.mjs\");\n/* harmony import */ var _constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n/* harmony import */ var _response_handler_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../response-handler.mjs */ \"./src/physics/components/jolt/response-handler.mjs\");\n/* harmony import */ var _system_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../system.mjs */ \"./src/physics/components/jolt/system.mjs\");\n/* harmony import */ var _component_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./component.mjs */ \"./src/physics/components/jolt/body/component.mjs\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst schema = [\r\n    // Jolt body\r\n    'position',\r\n    'rotation',\r\n    'linearVelocity',\r\n    'angularVelocity',\r\n    'friction',\r\n    'restitution',\r\n    'linearDamping',\r\n    'angularDamping',\r\n    'maxLinearVelocity',\r\n    'maxAngularVelocity',\r\n    'gravityFactor',\r\n    'inertiaMultiplier',\r\n    'overrideMass',\r\n    'overrideMassProperties',\r\n    'overrideInertiaPosition',\r\n    'overrideInertiaRotation',\r\n    'motionType',\r\n    'objectLayer',\r\n    'collisionGroup',\r\n    'subGroup',\r\n    'allowedDOFs',\r\n    'allowDynamicOrKinematic',\r\n    'isSensor',\r\n    'motionQuality',\r\n    'allowSleeping',\r\n];\r\n\r\nclass BodyComponentSystem extends _system_mjs__WEBPACK_IMPORTED_MODULE_4__.ShapeComponentSystem {\r\n\r\n    constructor(app, manager, id) {\r\n        super(app, manager);\r\n\r\n        this.id = 'body';\r\n        this.schema = [...this.schema, ...schema];\r\n        this.ComponentType = _component_mjs__WEBPACK_IMPORTED_MODULE_5__.BodyComponent;\r\n\r\n        manager.systems.set(id, this);\r\n\r\n        this.on('beforeremove', this.onBeforeRemove, this);\r\n    }\r\n\r\n    overrideContacts(callbacks = {}) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            !!callbacks.OnContactValidate && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.assert(typeof callbacks.OnContactValidate === 'function', 'OnContactValidate must be a function', callbacks);\r\n            !!callbacks.OnContactAdded && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.assert(typeof callbacks.OnContactAdded === 'function', 'OnContactAdded must be a function', callbacks);\r\n            !!callbacks.OnContactPersisted && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.assert(typeof callbacks.OnContactPersisted === 'function', 'OnContactPersisted must be a function', callbacks);\r\n            !!callbacks.OnContactRemoved && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.assert(typeof callbacks.OnContactRemoved === 'function', 'OnContactRemoved must be a function', callbacks);\r\n        }\r\n\r\n        const overrides = Object.create(null);\r\n        if (callbacks.OnContactValidate) {\r\n            overrides.OnContactValidate = new String(callbacks.OnContactValidate);\r\n        }\r\n        if (callbacks.OnContactAdded) {\r\n            overrides.OnContactAdded = new String(callbacks.OnContactAdded);\r\n        }\r\n        if (callbacks.OnContactPersisted) {\r\n            overrides.OnContactPersisted = new String(callbacks.OnContactPersisted);\r\n        }\r\n        if (callbacks.OnContactRemoved) {\r\n            overrides.OnContactRemoved = new String(callbacks.OnContactRemoved);\r\n        }\r\n\r\n        const msg = Object.create(null);\r\n        msg.type = 'override-contacts';\r\n        msg.listener = 'contacts';\r\n        msg.overrides = overrides;\r\n        this._manager.sendUncompressed(msg);\r\n    }\r\n\r\n    createBody(component) {\r\n        const cb = this._manager.commandsBuffer;\r\n\r\n        cb.writeOperator(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.OPERATOR_CREATOR);\r\n        cb.writeCommand(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CMD_CREATE_BODY);\r\n\r\n        component.writeComponentData(cb);\r\n    }\r\n\r\n    processCommands(cb) {\r\n        const command = cb.readCommand();\r\n\r\n        switch (command) {\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CMD_UPDATE_TRANSFORMS:\r\n                // TODO\r\n                // move to ResponseHandler\r\n                _system_mjs__WEBPACK_IMPORTED_MODULE_4__.ShapeComponentSystem.updateDynamic(cb);\r\n                break;\r\n\r\n            // TODO\r\n            // handle by manager directly\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CMD_CAST_RAY:\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CMD_CAST_SHAPE:\r\n                _response_handler_mjs__WEBPACK_IMPORTED_MODULE_3__.ResponseHandler.handleQuery(cb, this.entityMap, this._manager.queryMap);\r\n                break;\r\n\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CMD_REPORT_CONTACTS:\r\n                _response_handler_mjs__WEBPACK_IMPORTED_MODULE_3__.ResponseHandler.handleContact(cb, this.entityMap, this._manager.config);\r\n                break;\r\n        }\r\n    }\r\n\r\n    requestIsometry() {\r\n        this.fire('write-isometry');\r\n    }\r\n\r\n    initializeComponentData(component, data) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            const ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.verifyProperties(data, this.schema);\r\n            if (!ok)\r\n                return;\r\n        }\r\n\r\n        super.initializeComponentData(component, data);\r\n    }\r\n\r\n    onBeforeRemove(entity, component) {\r\n        if (component.enabled) {\r\n            component.enabled = false;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGh5c2ljcy9jb21wb25lbnRzL2pvbHQvYm9keS9zeXN0ZW0ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMkM7QUFDUTtBQVN6QjtBQUNnQztBQUNMO0FBQ0w7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLDZEQUFvQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIseURBQWE7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DLFlBQVksNkNBQUs7QUFDakIsNkNBQTZDLDZDQUFLO0FBQ2xELDBDQUEwQyw2Q0FBSztBQUMvQyw4Q0FBOEMsNkNBQUs7QUFDbkQsNENBQTRDLDZDQUFLO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsNERBQWdCO0FBQ3pDLHdCQUF3QiwyREFBZTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGlFQUFxQjtBQUN0QztBQUNBO0FBQ0EsZ0JBQWdCLDZEQUFvQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix3REFBWTtBQUM3QixpQkFBaUIsMERBQWM7QUFDL0IsZ0JBQWdCLGtFQUFlO0FBQy9CO0FBQ0E7QUFDQSxpQkFBaUIsK0RBQW1CO0FBQ3BDLGdCQUFnQixrRUFBZTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDZDQUFLO0FBQ2pCLHVCQUF1Qiw2Q0FBSztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQytCO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUGh5c2ljc0NvbXBvbmVudHMvLi9zcmMvcGh5c2ljcy9jb21wb25lbnRzL2pvbHQvYm9keS9zeXN0ZW0ubWpzPzFlMmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGVidWcgfSBmcm9tIFwiLi4vLi4vLi4vZGVidWcubWpzXCI7XHJcbmltcG9ydCB7IGJ1aWxkQWNjZXNzb3JzIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWwubWpzXCI7XHJcbmltcG9ydCB7XHJcbiAgICBDTURfQ0FTVF9SQVksXHJcbiAgICBDTURfQ0FTVF9TSEFQRSxcclxuICAgIENNRF9DUkVBVEVfQk9EWSxcclxuICAgIENNRF9SRVBPUlRfQ09OVEFDVFMsXHJcbiAgICBDTURfVVBEQVRFX1RSQU5TRk9STVMsXHJcbiAgICBDT01QT05FTlRfU1lTVEVNX0JPRFksXHJcbiAgICBPUEVSQVRPUl9DUkVBVE9SXHJcbn0gZnJvbSBcIi4uL2NvbnN0YW50cy5tanNcIjtcclxuaW1wb3J0IHsgUmVzcG9uc2VIYW5kbGVyIH0gZnJvbSBcIi4uL3Jlc3BvbnNlLWhhbmRsZXIubWpzXCI7XHJcbmltcG9ydCB7IFNoYXBlQ29tcG9uZW50U3lzdGVtIH0gZnJvbSBcIi4uL3N5c3RlbS5tanNcIjtcclxuaW1wb3J0IHsgQm9keUNvbXBvbmVudCB9IGZyb20gXCIuL2NvbXBvbmVudC5tanNcIjtcclxuXHJcbmNvbnN0IHNjaGVtYSA9IFtcclxuICAgIC8vIEpvbHQgYm9keVxyXG4gICAgJ3Bvc2l0aW9uJyxcclxuICAgICdyb3RhdGlvbicsXHJcbiAgICAnbGluZWFyVmVsb2NpdHknLFxyXG4gICAgJ2FuZ3VsYXJWZWxvY2l0eScsXHJcbiAgICAnZnJpY3Rpb24nLFxyXG4gICAgJ3Jlc3RpdHV0aW9uJyxcclxuICAgICdsaW5lYXJEYW1waW5nJyxcclxuICAgICdhbmd1bGFyRGFtcGluZycsXHJcbiAgICAnbWF4TGluZWFyVmVsb2NpdHknLFxyXG4gICAgJ21heEFuZ3VsYXJWZWxvY2l0eScsXHJcbiAgICAnZ3Jhdml0eUZhY3RvcicsXHJcbiAgICAnaW5lcnRpYU11bHRpcGxpZXInLFxyXG4gICAgJ292ZXJyaWRlTWFzcycsXHJcbiAgICAnb3ZlcnJpZGVNYXNzUHJvcGVydGllcycsXHJcbiAgICAnb3ZlcnJpZGVJbmVydGlhUG9zaXRpb24nLFxyXG4gICAgJ292ZXJyaWRlSW5lcnRpYVJvdGF0aW9uJyxcclxuICAgICdtb3Rpb25UeXBlJyxcclxuICAgICdvYmplY3RMYXllcicsXHJcbiAgICAnY29sbGlzaW9uR3JvdXAnLFxyXG4gICAgJ3N1Ykdyb3VwJyxcclxuICAgICdhbGxvd2VkRE9GcycsXHJcbiAgICAnYWxsb3dEeW5hbWljT3JLaW5lbWF0aWMnLFxyXG4gICAgJ2lzU2Vuc29yJyxcclxuICAgICdtb3Rpb25RdWFsaXR5JyxcclxuICAgICdhbGxvd1NsZWVwaW5nJyxcclxuXTtcclxuXHJcbmNsYXNzIEJvZHlDb21wb25lbnRTeXN0ZW0gZXh0ZW5kcyBTaGFwZUNvbXBvbmVudFN5c3RlbSB7XHJcblxyXG4gICAgY29uc3RydWN0b3IoYXBwLCBtYW5hZ2VyLCBpZCkge1xyXG4gICAgICAgIHN1cGVyKGFwcCwgbWFuYWdlcik7XHJcblxyXG4gICAgICAgIHRoaXMuaWQgPSAnYm9keSc7XHJcbiAgICAgICAgdGhpcy5zY2hlbWEgPSBbLi4udGhpcy5zY2hlbWEsIC4uLnNjaGVtYV07XHJcbiAgICAgICAgdGhpcy5Db21wb25lbnRUeXBlID0gQm9keUNvbXBvbmVudDtcclxuXHJcbiAgICAgICAgbWFuYWdlci5zeXN0ZW1zLnNldChpZCwgdGhpcyk7XHJcblxyXG4gICAgICAgIHRoaXMub24oJ2JlZm9yZXJlbW92ZScsIHRoaXMub25CZWZvcmVSZW1vdmUsIHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIG92ZXJyaWRlQ29udGFjdHMoY2FsbGJhY2tzID0ge30pIHtcclxuICAgICAgICBpZiAoRGVidWcuZGV2KSB7XHJcbiAgICAgICAgICAgICEhY2FsbGJhY2tzLk9uQ29udGFjdFZhbGlkYXRlICYmIERlYnVnLmFzc2VydCh0eXBlb2YgY2FsbGJhY2tzLk9uQ29udGFjdFZhbGlkYXRlID09PSAnZnVuY3Rpb24nLCAnT25Db250YWN0VmFsaWRhdGUgbXVzdCBiZSBhIGZ1bmN0aW9uJywgY2FsbGJhY2tzKTtcclxuICAgICAgICAgICAgISFjYWxsYmFja3MuT25Db250YWN0QWRkZWQgJiYgRGVidWcuYXNzZXJ0KHR5cGVvZiBjYWxsYmFja3MuT25Db250YWN0QWRkZWQgPT09ICdmdW5jdGlvbicsICdPbkNvbnRhY3RBZGRlZCBtdXN0IGJlIGEgZnVuY3Rpb24nLCBjYWxsYmFja3MpO1xyXG4gICAgICAgICAgICAhIWNhbGxiYWNrcy5PbkNvbnRhY3RQZXJzaXN0ZWQgJiYgRGVidWcuYXNzZXJ0KHR5cGVvZiBjYWxsYmFja3MuT25Db250YWN0UGVyc2lzdGVkID09PSAnZnVuY3Rpb24nLCAnT25Db250YWN0UGVyc2lzdGVkIG11c3QgYmUgYSBmdW5jdGlvbicsIGNhbGxiYWNrcyk7XHJcbiAgICAgICAgICAgICEhY2FsbGJhY2tzLk9uQ29udGFjdFJlbW92ZWQgJiYgRGVidWcuYXNzZXJ0KHR5cGVvZiBjYWxsYmFja3MuT25Db250YWN0UmVtb3ZlZCA9PT0gJ2Z1bmN0aW9uJywgJ09uQ29udGFjdFJlbW92ZWQgbXVzdCBiZSBhIGZ1bmN0aW9uJywgY2FsbGJhY2tzKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IG92ZXJyaWRlcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XHJcbiAgICAgICAgaWYgKGNhbGxiYWNrcy5PbkNvbnRhY3RWYWxpZGF0ZSkge1xyXG4gICAgICAgICAgICBvdmVycmlkZXMuT25Db250YWN0VmFsaWRhdGUgPSBuZXcgU3RyaW5nKGNhbGxiYWNrcy5PbkNvbnRhY3RWYWxpZGF0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChjYWxsYmFja3MuT25Db250YWN0QWRkZWQpIHtcclxuICAgICAgICAgICAgb3ZlcnJpZGVzLk9uQ29udGFjdEFkZGVkID0gbmV3IFN0cmluZyhjYWxsYmFja3MuT25Db250YWN0QWRkZWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoY2FsbGJhY2tzLk9uQ29udGFjdFBlcnNpc3RlZCkge1xyXG4gICAgICAgICAgICBvdmVycmlkZXMuT25Db250YWN0UGVyc2lzdGVkID0gbmV3IFN0cmluZyhjYWxsYmFja3MuT25Db250YWN0UGVyc2lzdGVkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGNhbGxiYWNrcy5PbkNvbnRhY3RSZW1vdmVkKSB7XHJcbiAgICAgICAgICAgIG92ZXJyaWRlcy5PbkNvbnRhY3RSZW1vdmVkID0gbmV3IFN0cmluZyhjYWxsYmFja3MuT25Db250YWN0UmVtb3ZlZCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBtc2cgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xyXG4gICAgICAgIG1zZy50eXBlID0gJ292ZXJyaWRlLWNvbnRhY3RzJztcclxuICAgICAgICBtc2cubGlzdGVuZXIgPSAnY29udGFjdHMnO1xyXG4gICAgICAgIG1zZy5vdmVycmlkZXMgPSBvdmVycmlkZXM7XHJcbiAgICAgICAgdGhpcy5fbWFuYWdlci5zZW5kVW5jb21wcmVzc2VkKG1zZyk7XHJcbiAgICB9XHJcblxyXG4gICAgY3JlYXRlQm9keShjb21wb25lbnQpIHtcclxuICAgICAgICBjb25zdCBjYiA9IHRoaXMuX21hbmFnZXIuY29tbWFuZHNCdWZmZXI7XHJcblxyXG4gICAgICAgIGNiLndyaXRlT3BlcmF0b3IoT1BFUkFUT1JfQ1JFQVRPUik7XHJcbiAgICAgICAgY2Iud3JpdGVDb21tYW5kKENNRF9DUkVBVEVfQk9EWSk7XHJcblxyXG4gICAgICAgIGNvbXBvbmVudC53cml0ZUNvbXBvbmVudERhdGEoY2IpO1xyXG4gICAgfVxyXG5cclxuICAgIHByb2Nlc3NDb21tYW5kcyhjYikge1xyXG4gICAgICAgIGNvbnN0IGNvbW1hbmQgPSBjYi5yZWFkQ29tbWFuZCgpO1xyXG5cclxuICAgICAgICBzd2l0Y2ggKGNvbW1hbmQpIHtcclxuICAgICAgICAgICAgY2FzZSBDTURfVVBEQVRFX1RSQU5TRk9STVM6XHJcbiAgICAgICAgICAgICAgICAvLyBUT0RPXHJcbiAgICAgICAgICAgICAgICAvLyBtb3ZlIHRvIFJlc3BvbnNlSGFuZGxlclxyXG4gICAgICAgICAgICAgICAgU2hhcGVDb21wb25lbnRTeXN0ZW0udXBkYXRlRHluYW1pYyhjYik7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgIC8vIFRPRE9cclxuICAgICAgICAgICAgLy8gaGFuZGxlIGJ5IG1hbmFnZXIgZGlyZWN0bHlcclxuICAgICAgICAgICAgY2FzZSBDTURfQ0FTVF9SQVk6XHJcbiAgICAgICAgICAgIGNhc2UgQ01EX0NBU1RfU0hBUEU6XHJcbiAgICAgICAgICAgICAgICBSZXNwb25zZUhhbmRsZXIuaGFuZGxlUXVlcnkoY2IsIHRoaXMuZW50aXR5TWFwLCB0aGlzLl9tYW5hZ2VyLnF1ZXJ5TWFwKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgY2FzZSBDTURfUkVQT1JUX0NPTlRBQ1RTOlxyXG4gICAgICAgICAgICAgICAgUmVzcG9uc2VIYW5kbGVyLmhhbmRsZUNvbnRhY3QoY2IsIHRoaXMuZW50aXR5TWFwLCB0aGlzLl9tYW5hZ2VyLmNvbmZpZyk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmVxdWVzdElzb21ldHJ5KCkge1xyXG4gICAgICAgIHRoaXMuZmlyZSgnd3JpdGUtaXNvbWV0cnknKTtcclxuICAgIH1cclxuXHJcbiAgICBpbml0aWFsaXplQ29tcG9uZW50RGF0YShjb21wb25lbnQsIGRhdGEpIHtcclxuICAgICAgICBpZiAoRGVidWcuZGV2KSB7XHJcbiAgICAgICAgICAgIGNvbnN0IG9rID0gRGVidWcudmVyaWZ5UHJvcGVydGllcyhkYXRhLCB0aGlzLnNjaGVtYSk7XHJcbiAgICAgICAgICAgIGlmICghb2spXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBzdXBlci5pbml0aWFsaXplQ29tcG9uZW50RGF0YShjb21wb25lbnQsIGRhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uQmVmb3JlUmVtb3ZlKGVudGl0eSwgY29tcG9uZW50KSB7XHJcbiAgICAgICAgaWYgKGNvbXBvbmVudC5lbmFibGVkKSB7XHJcbiAgICAgICAgICAgIGNvbXBvbmVudC5lbmFibGVkID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBCb2R5Q29tcG9uZW50U3lzdGVtIH07XHJcblxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/physics/components/jolt/body/system.mjs\n");

/***/ }),

/***/ "./src/physics/components/jolt/char/component.mjs":
/*!********************************************************!*\
  !*** ./src/physics/components/jolt/char/component.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CharComponent: () => (/* binding */ CharComponent)\n/* harmony export */ });\n/* harmony import */ var _debug_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../debug.mjs */ \"./src/physics/debug.mjs\");\n/* harmony import */ var _component_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../component.mjs */ \"./src/physics/components/jolt/component.mjs\");\n/* harmony import */ var _constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n/* harmony import */ var _system_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../system.mjs */ \"./src/physics/components/jolt/system.mjs\");\n\r\n\r\n\r\n\r\n\r\nclass CharComponent extends _component_mjs__WEBPACK_IMPORTED_MODULE_1__.ShapeComponent {\r\n    // ---- SHAPE PROPS ----\r\n\r\n    // Shape type\r\n    _shape = _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.SHAPE_CAPSULE;\r\n\r\n    // ---- CHARACTER PROPS ----\r\n\r\n    // Vector indicating the up direction of the character.\r\n    _up = pc.Vec3.UP;\r\n\r\n    // Enables/disables the use of motion state for the character.\r\n    _useMotionState = true;\r\n\r\n    // Character linear velocity. Must be set by user. Backend will use it to calculate next\r\n    // position.\r\n    _linearVelocity = new pc.Vec3();\r\n\r\n    // Plane, defined in local space relative to the character. Every contact \r\n    // behind this plane can support the character, every contact in front of \r\n    // this plane is treated as only colliding with the player. Default: Accept\r\n    // any contact.\r\n    _supportingVolume = new pc.Plane(pc.Vec3.UP, -1);\r\n\r\n    // Maximum angle of slope that character can still walk on (radians).\r\n    _maxSlopeAngle = 45 * pc.math.DEG_TO_RAD;\r\n\r\n    // Character mass (kg). Used to push down objects with gravity when the \r\n    // character is standing on top.\r\n    _mass = 70;\r\n\r\n    // Maximum force with which the character can push other bodies (N).\r\n    _maxStrength = 100;\r\n\r\n    // An extra offset applied to the shape in local space.\r\n    _shapeOffset = pc.Vec3.ZERO;\r\n\r\n    // When colliding with back faces, the character will not be able to move through\r\n    // back facing triangles. Use this if you have triangles that need to collide\r\n    // on both sides.\r\n    _backFaceMode = pc.JOLT_BFM_COLLIDE_BACK_FACES;\r\n\r\n    // How far to scan outside of the shape for predictive contacts. A value of 0 will\r\n    // most likely cause the character to get stuck as it cannot properly calculate a sliding\r\n    // direction anymore. A value that's too high will cause ghost collisions.\r\n    _predictiveContactDistance = 0.1;\r\n\r\n    // Max amount of collision loops\r\n    _maxCollisionIterations = 5;\r\n\r\n    // How often to try stepping in the constraint solving.\r\n    _maxConstraintIterations = 15;\r\n\r\n    // Early out condition: If this much time is left to simulate we are done.\r\n    _minTimeRemaining = 1.0e-4;\r\n\r\n    // How far we're willing to penetrate geometry\r\n    _collisionTolerance = 1.0e-3;\r\n\r\n    // How far we try to stay away from the geometry, this ensures that the sweep will\r\n    // hit as little as possible lowering the collision cost and reducing the risk of\r\n    // getting stuck.\r\n    _characterPadding = 0.02;\r\n\r\n    // Max num hits to collect in order to avoid excess of contact points collection.\r\n    _maxNumHits = 256;\r\n\r\n    // Cos(angle) where angle is the maximum angle between two hits contact normals that \r\n    // are allowed to be merged during hit reduction. Default is around 2.5 degrees. Set \r\n    // to -1 to turn off.\r\n    _hitReductionCosMaxAngle = 0.999;\r\n\r\n    // This value governs how fast a penetration will be resolved, 0 = nothing is resolved,\r\n    // 1 = everything in one update.\r\n    _penetrationRecoverySpeed = 1;\r\n\r\n    // Read-only. True if the character is supported by normal or steep ground.\r\n    _isSupported = false;\r\n\r\n    // Read-only. True if the ground is too steep to walk on.\r\n    _isSlopeTooSteep = false;\r\n\r\n    // Read-only. If the character is supported, this will tell the ground entity.\r\n    _groundEntity = null;\r\n\r\n    // Read-only. If the character is supported, this will tell the ground normal. Otherwise\r\n    // will be a zero vector.\r\n    _groundNormal = new pc.Vec3();\r\n\r\n    // If the character is not supported, will be a zero vector.\r\n    _groundVelocity = new pc.Vec3();\r\n\r\n    // Ground state.\r\n    _state = pc.JOLT_GROUND_STATE_NOT_SUPPORTED;\r\n\r\n    // User data to be associated with a shape.\r\n    _userData = null;\r\n\r\n    // An entity with a kinemaitc or dynamic body, that will be paired with this character to enable\r\n    // a world presence (allow raycasts and collisions detection vs character)\r\n    _pairedEntity = null;\r\n\r\n    constructor(system, entity) {\r\n        super(system, entity);\r\n    }\r\n\r\n    get linearVelocity() {\r\n        return this._linearVelocity;\r\n    }\r\n\r\n    set linearVelocity(vel) {\r\n        _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkVec(vel, `Invalid character linear velocity`, vel);\r\n        this.system.addCommand(\r\n            _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.OPERATOR_MODIFIER, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CMD_CHAR_SET_LIN_VEL, this._index,\r\n            vel, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false\r\n        );\r\n    }\r\n\r\n    get userData() {\r\n        return this._userData;\r\n    }\r\n\r\n    set userData(num) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            let ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(num, `Invalid user data value. Should be a number: ${ num }`);\r\n            if (!ok)\r\n                return;\r\n        }\r\n\r\n        this._userData = num;\r\n\r\n        this.system.addCommand(\r\n            _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.OPERATOR_MODIFIER, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CMD_SET_USER_DATA, this._index,\r\n            num, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false\r\n        );        \r\n    }\r\n\r\n    get pairedEntity() {\r\n        return this._pairedEntity;\r\n    }\r\n\r\n    set pairedEntity(entity) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            let ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.assert(!!entity.body, `Invalid entity to pair. Needs to have a \"body\" component.`, entity);\r\n            if (!ok)\r\n                return;\r\n        }\r\n\r\n        this._pairedEntity = entity;\r\n\r\n        this.system.addCommand(\r\n            _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.OPERATOR_MODIFIER, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CMD_PAIR_BODY, this._index,\r\n            entity.body.index, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false\r\n        );\r\n    }\r\n\r\n    setShape(shapeIndex = null, callback = null) {\r\n        const system = this.system;\r\n\r\n        system.addCommand(\r\n            _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.OPERATOR_MODIFIER, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CMD_CHAR_SET_SHAPE, this._index,\r\n            !!callback, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_BOOL, false,\r\n            shapeIndex, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, true\r\n        );\r\n\r\n        if (callback) {\r\n            this._writeCallback(callback);\r\n        }\r\n    }\r\n\r\n    writeComponentData(cb) {\r\n        const ok = _component_mjs__WEBPACK_IMPORTED_MODULE_1__.ShapeComponent.writeShapeData(cb, this, true /* force write rotation */);\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && !ok) {\r\n            _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.warn('Error creating a shape data.');\r\n            return false;\r\n        }\r\n\r\n        cb.write(this._index, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n        cb.write(this._useMotionState, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_BOOL, false);\r\n        cb.write(this._up, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n        cb.write(this._supportingVolume, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_PLANE, false);\r\n        cb.write(this._maxSlopeAngle, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._mass, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._maxStrength, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._shapeOffset, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n        cb.write(this._backFaceMode, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT8, false);\r\n        cb.write(this._predictiveContactDistance, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._maxCollisionIterations, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n        cb.write(this._maxConstraintIterations, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n        cb.write(this._minTimeRemaining, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._collisionTolerance, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._characterPadding, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._maxNumHits, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n        cb.write(this._hitReductionCosMaxAngle, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._penetrationRecoverySpeed, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n\r\n        const entity = this.entity;\r\n        const pos = entity.getPosition();\r\n        const rot = entity.getRotation();\r\n\r\n        // Loss of precision for pos/rot (64 -> 32)\r\n        cb.write(pos, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n        cb.write(rot, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n\r\n        _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && cb.write(this._debugDraw, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_BOOL, false);\r\n    }\r\n\r\n    updateTransforms(cb, map) {\r\n        const entity = this.entity;\r\n\r\n        const px = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_FLOAT32);\r\n        const py = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_FLOAT32);\r\n        const pz = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_FLOAT32);\r\n        entity.setPosition(px, py, pz);\r\n\r\n        entity.setRotation(\r\n            cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_FLOAT32),\r\n            cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_FLOAT32),\r\n            cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_FLOAT32),\r\n            cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_FLOAT32)\r\n        );\r\n\r\n        this._linearVelocity.set(\r\n            cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_FLOAT32),\r\n            cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_FLOAT32),\r\n            cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_FLOAT32)\r\n        );\r\n\r\n        const pe = this._pairedEntity;\r\n        if (pe) {\r\n            pe.setPosition(px, py + this._shapeOffset.y + this._shapePosition.y, pz);\r\n            pe.setRotation(0, 0, 0, 1); // char never rotates\r\n        }\r\n\r\n        const isSupported = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_BOOL);\r\n        this._isSupported = isSupported;\r\n        this._state = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_UINT8);\r\n\r\n        if (isSupported && cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_BOOL)) {\r\n            const groundIndex = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_UINT32);\r\n            this._groundEntity = map.get(groundIndex) || null;\r\n            this._isSlopeTooSteep = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_BOOL);\r\n            this._groundVelocity.set(\r\n                cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_FLOAT32),\r\n                cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_FLOAT32),\r\n                cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_FLOAT32)\r\n            );\r\n            this._groundNormal.set(\r\n                cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_FLOAT32),\r\n                cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_FLOAT32),\r\n                cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_FLOAT32)\r\n            );\r\n        } else {\r\n            this._groundEntity = null;\r\n            this._groundNormal.set(0, 0, 0);\r\n            this._groundVelocity.set(0, 0, 0);\r\n        }\r\n    }\r\n\r\n    onEnable() {\r\n        const system = this.system;\r\n\r\n        this._index = system.getIndex(this.entity);\r\n\r\n        system.createCharacter(this);\r\n    }\r\n\r\n    onDisable() {\r\n        super.onDisable();\r\n\r\n        const system = this.system;\r\n        const componentIndex = this._index;\r\n\r\n        system.setIndexFree(componentIndex);\r\n\r\n        system.addCommand(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.OPERATOR_CLEANER, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CMD_DESTROY_BODY, componentIndex);\r\n    }    \r\n\r\n    _writeCallback(callback) {\r\n        if (callback) {\r\n            const system = this.system;\r\n            const callbackIndex = system.getCallbackIndex(callback);\r\n            system.addCommandArgs(callbackIndex, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGh5c2ljcy9jb21wb25lbnRzL2pvbHQvY2hhci9jb21wb25lbnQubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTJDO0FBQ087QUFtQnhCO0FBQzJCO0FBQ3JEO0FBQ0EsNEJBQTRCLDBEQUFjO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLGFBQWEseURBQWE7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDZDQUFLLFFBQVEsNkNBQUs7QUFDMUI7QUFDQSxZQUFZLDZEQUFpQixFQUFFLGdFQUFvQjtBQUNuRCxpQkFBaUIsOERBQWtCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDZDQUFLO0FBQ2pCLHFCQUFxQiw2Q0FBSyxrRUFBa0UsS0FBSztBQUNqRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksNkRBQWlCLEVBQUUsNkRBQWlCO0FBQ2hELGlCQUFpQixnRUFBb0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksNkNBQUs7QUFDakIscUJBQXFCLDZDQUFLO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSw2REFBaUIsRUFBRSx5REFBYTtBQUM1QywrQkFBK0IsK0RBQW1CO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSw2REFBaUIsRUFBRSw4REFBa0I7QUFDakQsd0JBQXdCLDZEQUFpQjtBQUN6Qyx3QkFBd0IsK0RBQW1CO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsMERBQWM7QUFDakMsWUFBWSw2Q0FBSztBQUNqQixZQUFZLDZDQUFLO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QiwrREFBbUI7QUFDakQsdUNBQXVDLDZEQUFpQjtBQUN4RCwyQkFBMkIsOERBQWtCO0FBQzdDLHlDQUF5Qyw4REFBa0I7QUFDM0Qsc0NBQXNDLGdFQUFvQjtBQUMxRCw2QkFBNkIsZ0VBQW9CO0FBQ2pELG9DQUFvQyxnRUFBb0I7QUFDeEQsb0NBQW9DLDhEQUFrQjtBQUN0RCxxQ0FBcUMsOERBQWtCO0FBQ3ZELGtEQUFrRCxnRUFBb0I7QUFDdEUsK0NBQStDLCtEQUFtQjtBQUNsRSxnREFBZ0QsK0RBQW1CO0FBQ25FLHlDQUF5QyxnRUFBb0I7QUFDN0QsMkNBQTJDLGdFQUFvQjtBQUMvRCx5Q0FBeUMsZ0VBQW9CO0FBQzdELG1DQUFtQywrREFBbUI7QUFDdEQsZ0RBQWdELGdFQUFvQjtBQUNwRSxpREFBaUQsZ0VBQW9CO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw4REFBa0I7QUFDeEMsc0JBQXNCLDhEQUFrQjtBQUN4QztBQUNBLFFBQVEsNkNBQUssa0NBQWtDLDZEQUFpQjtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLCtEQUFtQjtBQUM5QywyQkFBMkIsK0RBQW1CO0FBQzlDLDJCQUEyQiwrREFBbUI7QUFDOUM7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLCtEQUFtQjtBQUN2QyxvQkFBb0IsK0RBQW1CO0FBQ3ZDLG9CQUFvQiwrREFBbUI7QUFDdkMsb0JBQW9CLCtEQUFtQjtBQUN2QztBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsK0RBQW1CO0FBQ3ZDLG9CQUFvQiwrREFBbUI7QUFDdkMsb0JBQW9CLCtEQUFtQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQSxvQ0FBb0MsNERBQWdCO0FBQ3BEO0FBQ0EsOEJBQThCLDZEQUFpQjtBQUMvQztBQUNBLG1DQUFtQyw0REFBZ0I7QUFDbkQsd0NBQXdDLDhEQUFrQjtBQUMxRDtBQUNBLDRDQUE0Qyw0REFBZ0I7QUFDNUQ7QUFDQSx3QkFBd0IsK0RBQW1CO0FBQzNDLHdCQUF3QiwrREFBbUI7QUFDM0Msd0JBQXdCLCtEQUFtQjtBQUMzQztBQUNBO0FBQ0Esd0JBQXdCLCtEQUFtQjtBQUMzQyx3QkFBd0IsK0RBQW1CO0FBQzNDLHdCQUF3QiwrREFBbUI7QUFDM0M7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsNERBQWdCLEVBQUUsNERBQWdCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCwrREFBbUI7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QaHlzaWNzQ29tcG9uZW50cy8uL3NyYy9waHlzaWNzL2NvbXBvbmVudHMvam9sdC9jaGFyL2NvbXBvbmVudC5tanM/NmIzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEZWJ1ZyB9IGZyb20gXCIuLi8uLi8uLi9kZWJ1Zy5tanNcIjtcclxuaW1wb3J0IHsgU2hhcGVDb21wb25lbnQgfSBmcm9tIFwiLi4vY29tcG9uZW50Lm1qc1wiO1xyXG5pbXBvcnQge1xyXG4gICAgQlVGRkVSX1JFQURfQk9PTCwgQlVGRkVSX1JFQURfRkxPQVQzMixcclxuICAgIEJVRkZFUl9SRUFEX1VJTlQzMixcclxuICAgIEJVRkZFUl9SRUFEX1VJTlQ4LFxyXG4gICAgQlVGRkVSX1dSSVRFX0JPT0wsXHJcbiAgICBCVUZGRVJfV1JJVEVfRkxPQVQzMixcclxuICAgIEJVRkZFUl9XUklURV9QTEFORSxcclxuICAgIEJVRkZFUl9XUklURV9VSU5UMzIsXHJcbiAgICBCVUZGRVJfV1JJVEVfVUlOVDgsXHJcbiAgICBCVUZGRVJfV1JJVEVfVkVDMzIsXHJcbiAgICBDTURfQ0hBUl9TRVRfTElOX1ZFTCxcclxuICAgIENNRF9DSEFSX1NFVF9TSEFQRSxcclxuICAgIENNRF9ERVNUUk9ZX0JPRFksXHJcbiAgICBDTURfUEFJUl9CT0RZLFxyXG4gICAgQ01EX1NFVF9VU0VSX0RBVEEsXHJcbiAgICBPUEVSQVRPUl9DTEVBTkVSLFxyXG4gICAgT1BFUkFUT1JfTU9ESUZJRVIsXHJcbiAgICBTSEFQRV9DQVBTVUxFXHJcbn0gZnJvbSBcIi4uL2NvbnN0YW50cy5tanNcIjtcclxuaW1wb3J0IHsgU2hhcGVDb21wb25lbnRTeXN0ZW0gfSBmcm9tIFwiLi4vc3lzdGVtLm1qc1wiO1xyXG5cclxuY2xhc3MgQ2hhckNvbXBvbmVudCBleHRlbmRzIFNoYXBlQ29tcG9uZW50IHtcclxuICAgIC8vIC0tLS0gU0hBUEUgUFJPUFMgLS0tLVxyXG5cclxuICAgIC8vIFNoYXBlIHR5cGVcclxuICAgIF9zaGFwZSA9IFNIQVBFX0NBUFNVTEU7XHJcblxyXG4gICAgLy8gLS0tLSBDSEFSQUNURVIgUFJPUFMgLS0tLVxyXG5cclxuICAgIC8vIFZlY3RvciBpbmRpY2F0aW5nIHRoZSB1cCBkaXJlY3Rpb24gb2YgdGhlIGNoYXJhY3Rlci5cclxuICAgIF91cCA9IHBjLlZlYzMuVVA7XHJcblxyXG4gICAgLy8gRW5hYmxlcy9kaXNhYmxlcyB0aGUgdXNlIG9mIG1vdGlvbiBzdGF0ZSBmb3IgdGhlIGNoYXJhY3Rlci5cclxuICAgIF91c2VNb3Rpb25TdGF0ZSA9IHRydWU7XHJcblxyXG4gICAgLy8gQ2hhcmFjdGVyIGxpbmVhciB2ZWxvY2l0eS4gTXVzdCBiZSBzZXQgYnkgdXNlci4gQmFja2VuZCB3aWxsIHVzZSBpdCB0byBjYWxjdWxhdGUgbmV4dFxyXG4gICAgLy8gcG9zaXRpb24uXHJcbiAgICBfbGluZWFyVmVsb2NpdHkgPSBuZXcgcGMuVmVjMygpO1xyXG5cclxuICAgIC8vIFBsYW5lLCBkZWZpbmVkIGluIGxvY2FsIHNwYWNlIHJlbGF0aXZlIHRvIHRoZSBjaGFyYWN0ZXIuIEV2ZXJ5IGNvbnRhY3QgXHJcbiAgICAvLyBiZWhpbmQgdGhpcyBwbGFuZSBjYW4gc3VwcG9ydCB0aGUgY2hhcmFjdGVyLCBldmVyeSBjb250YWN0IGluIGZyb250IG9mIFxyXG4gICAgLy8gdGhpcyBwbGFuZSBpcyB0cmVhdGVkIGFzIG9ubHkgY29sbGlkaW5nIHdpdGggdGhlIHBsYXllci4gRGVmYXVsdDogQWNjZXB0XHJcbiAgICAvLyBhbnkgY29udGFjdC5cclxuICAgIF9zdXBwb3J0aW5nVm9sdW1lID0gbmV3IHBjLlBsYW5lKHBjLlZlYzMuVVAsIC0xKTtcclxuXHJcbiAgICAvLyBNYXhpbXVtIGFuZ2xlIG9mIHNsb3BlIHRoYXQgY2hhcmFjdGVyIGNhbiBzdGlsbCB3YWxrIG9uIChyYWRpYW5zKS5cclxuICAgIF9tYXhTbG9wZUFuZ2xlID0gNDUgKiBwYy5tYXRoLkRFR19UT19SQUQ7XHJcblxyXG4gICAgLy8gQ2hhcmFjdGVyIG1hc3MgKGtnKS4gVXNlZCB0byBwdXNoIGRvd24gb2JqZWN0cyB3aXRoIGdyYXZpdHkgd2hlbiB0aGUgXHJcbiAgICAvLyBjaGFyYWN0ZXIgaXMgc3RhbmRpbmcgb24gdG9wLlxyXG4gICAgX21hc3MgPSA3MDtcclxuXHJcbiAgICAvLyBNYXhpbXVtIGZvcmNlIHdpdGggd2hpY2ggdGhlIGNoYXJhY3RlciBjYW4gcHVzaCBvdGhlciBib2RpZXMgKE4pLlxyXG4gICAgX21heFN0cmVuZ3RoID0gMTAwO1xyXG5cclxuICAgIC8vIEFuIGV4dHJhIG9mZnNldCBhcHBsaWVkIHRvIHRoZSBzaGFwZSBpbiBsb2NhbCBzcGFjZS5cclxuICAgIF9zaGFwZU9mZnNldCA9IHBjLlZlYzMuWkVSTztcclxuXHJcbiAgICAvLyBXaGVuIGNvbGxpZGluZyB3aXRoIGJhY2sgZmFjZXMsIHRoZSBjaGFyYWN0ZXIgd2lsbCBub3QgYmUgYWJsZSB0byBtb3ZlIHRocm91Z2hcclxuICAgIC8vIGJhY2sgZmFjaW5nIHRyaWFuZ2xlcy4gVXNlIHRoaXMgaWYgeW91IGhhdmUgdHJpYW5nbGVzIHRoYXQgbmVlZCB0byBjb2xsaWRlXHJcbiAgICAvLyBvbiBib3RoIHNpZGVzLlxyXG4gICAgX2JhY2tGYWNlTW9kZSA9IHBjLkpPTFRfQkZNX0NPTExJREVfQkFDS19GQUNFUztcclxuXHJcbiAgICAvLyBIb3cgZmFyIHRvIHNjYW4gb3V0c2lkZSBvZiB0aGUgc2hhcGUgZm9yIHByZWRpY3RpdmUgY29udGFjdHMuIEEgdmFsdWUgb2YgMCB3aWxsXHJcbiAgICAvLyBtb3N0IGxpa2VseSBjYXVzZSB0aGUgY2hhcmFjdGVyIHRvIGdldCBzdHVjayBhcyBpdCBjYW5ub3QgcHJvcGVybHkgY2FsY3VsYXRlIGEgc2xpZGluZ1xyXG4gICAgLy8gZGlyZWN0aW9uIGFueW1vcmUuIEEgdmFsdWUgdGhhdCdzIHRvbyBoaWdoIHdpbGwgY2F1c2UgZ2hvc3QgY29sbGlzaW9ucy5cclxuICAgIF9wcmVkaWN0aXZlQ29udGFjdERpc3RhbmNlID0gMC4xO1xyXG5cclxuICAgIC8vIE1heCBhbW91bnQgb2YgY29sbGlzaW9uIGxvb3BzXHJcbiAgICBfbWF4Q29sbGlzaW9uSXRlcmF0aW9ucyA9IDU7XHJcblxyXG4gICAgLy8gSG93IG9mdGVuIHRvIHRyeSBzdGVwcGluZyBpbiB0aGUgY29uc3RyYWludCBzb2x2aW5nLlxyXG4gICAgX21heENvbnN0cmFpbnRJdGVyYXRpb25zID0gMTU7XHJcblxyXG4gICAgLy8gRWFybHkgb3V0IGNvbmRpdGlvbjogSWYgdGhpcyBtdWNoIHRpbWUgaXMgbGVmdCB0byBzaW11bGF0ZSB3ZSBhcmUgZG9uZS5cclxuICAgIF9taW5UaW1lUmVtYWluaW5nID0gMS4wZS00O1xyXG5cclxuICAgIC8vIEhvdyBmYXIgd2UncmUgd2lsbGluZyB0byBwZW5ldHJhdGUgZ2VvbWV0cnlcclxuICAgIF9jb2xsaXNpb25Ub2xlcmFuY2UgPSAxLjBlLTM7XHJcblxyXG4gICAgLy8gSG93IGZhciB3ZSB0cnkgdG8gc3RheSBhd2F5IGZyb20gdGhlIGdlb21ldHJ5LCB0aGlzIGVuc3VyZXMgdGhhdCB0aGUgc3dlZXAgd2lsbFxyXG4gICAgLy8gaGl0IGFzIGxpdHRsZSBhcyBwb3NzaWJsZSBsb3dlcmluZyB0aGUgY29sbGlzaW9uIGNvc3QgYW5kIHJlZHVjaW5nIHRoZSByaXNrIG9mXHJcbiAgICAvLyBnZXR0aW5nIHN0dWNrLlxyXG4gICAgX2NoYXJhY3RlclBhZGRpbmcgPSAwLjAyO1xyXG5cclxuICAgIC8vIE1heCBudW0gaGl0cyB0byBjb2xsZWN0IGluIG9yZGVyIHRvIGF2b2lkIGV4Y2VzcyBvZiBjb250YWN0IHBvaW50cyBjb2xsZWN0aW9uLlxyXG4gICAgX21heE51bUhpdHMgPSAyNTY7XHJcblxyXG4gICAgLy8gQ29zKGFuZ2xlKSB3aGVyZSBhbmdsZSBpcyB0aGUgbWF4aW11bSBhbmdsZSBiZXR3ZWVuIHR3byBoaXRzIGNvbnRhY3Qgbm9ybWFscyB0aGF0IFxyXG4gICAgLy8gYXJlIGFsbG93ZWQgdG8gYmUgbWVyZ2VkIGR1cmluZyBoaXQgcmVkdWN0aW9uLiBEZWZhdWx0IGlzIGFyb3VuZCAyLjUgZGVncmVlcy4gU2V0IFxyXG4gICAgLy8gdG8gLTEgdG8gdHVybiBvZmYuXHJcbiAgICBfaGl0UmVkdWN0aW9uQ29zTWF4QW5nbGUgPSAwLjk5OTtcclxuXHJcbiAgICAvLyBUaGlzIHZhbHVlIGdvdmVybnMgaG93IGZhc3QgYSBwZW5ldHJhdGlvbiB3aWxsIGJlIHJlc29sdmVkLCAwID0gbm90aGluZyBpcyByZXNvbHZlZCxcclxuICAgIC8vIDEgPSBldmVyeXRoaW5nIGluIG9uZSB1cGRhdGUuXHJcbiAgICBfcGVuZXRyYXRpb25SZWNvdmVyeVNwZWVkID0gMTtcclxuXHJcbiAgICAvLyBSZWFkLW9ubHkuIFRydWUgaWYgdGhlIGNoYXJhY3RlciBpcyBzdXBwb3J0ZWQgYnkgbm9ybWFsIG9yIHN0ZWVwIGdyb3VuZC5cclxuICAgIF9pc1N1cHBvcnRlZCA9IGZhbHNlO1xyXG5cclxuICAgIC8vIFJlYWQtb25seS4gVHJ1ZSBpZiB0aGUgZ3JvdW5kIGlzIHRvbyBzdGVlcCB0byB3YWxrIG9uLlxyXG4gICAgX2lzU2xvcGVUb29TdGVlcCA9IGZhbHNlO1xyXG5cclxuICAgIC8vIFJlYWQtb25seS4gSWYgdGhlIGNoYXJhY3RlciBpcyBzdXBwb3J0ZWQsIHRoaXMgd2lsbCB0ZWxsIHRoZSBncm91bmQgZW50aXR5LlxyXG4gICAgX2dyb3VuZEVudGl0eSA9IG51bGw7XHJcblxyXG4gICAgLy8gUmVhZC1vbmx5LiBJZiB0aGUgY2hhcmFjdGVyIGlzIHN1cHBvcnRlZCwgdGhpcyB3aWxsIHRlbGwgdGhlIGdyb3VuZCBub3JtYWwuIE90aGVyd2lzZVxyXG4gICAgLy8gd2lsbCBiZSBhIHplcm8gdmVjdG9yLlxyXG4gICAgX2dyb3VuZE5vcm1hbCA9IG5ldyBwYy5WZWMzKCk7XHJcblxyXG4gICAgLy8gSWYgdGhlIGNoYXJhY3RlciBpcyBub3Qgc3VwcG9ydGVkLCB3aWxsIGJlIGEgemVybyB2ZWN0b3IuXHJcbiAgICBfZ3JvdW5kVmVsb2NpdHkgPSBuZXcgcGMuVmVjMygpO1xyXG5cclxuICAgIC8vIEdyb3VuZCBzdGF0ZS5cclxuICAgIF9zdGF0ZSA9IHBjLkpPTFRfR1JPVU5EX1NUQVRFX05PVF9TVVBQT1JURUQ7XHJcblxyXG4gICAgLy8gVXNlciBkYXRhIHRvIGJlIGFzc29jaWF0ZWQgd2l0aCBhIHNoYXBlLlxyXG4gICAgX3VzZXJEYXRhID0gbnVsbDtcclxuXHJcbiAgICAvLyBBbiBlbnRpdHkgd2l0aCBhIGtpbmVtYWl0YyBvciBkeW5hbWljIGJvZHksIHRoYXQgd2lsbCBiZSBwYWlyZWQgd2l0aCB0aGlzIGNoYXJhY3RlciB0byBlbmFibGVcclxuICAgIC8vIGEgd29ybGQgcHJlc2VuY2UgKGFsbG93IHJheWNhc3RzIGFuZCBjb2xsaXNpb25zIGRldGVjdGlvbiB2cyBjaGFyYWN0ZXIpXHJcbiAgICBfcGFpcmVkRW50aXR5ID0gbnVsbDtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihzeXN0ZW0sIGVudGl0eSkge1xyXG4gICAgICAgIHN1cGVyKHN5c3RlbSwgZW50aXR5KTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgbGluZWFyVmVsb2NpdHkoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2xpbmVhclZlbG9jaXR5O1xyXG4gICAgfVxyXG5cclxuICAgIHNldCBsaW5lYXJWZWxvY2l0eSh2ZWwpIHtcclxuICAgICAgICBEZWJ1Zy5kZXYgJiYgRGVidWcuY2hlY2tWZWModmVsLCBgSW52YWxpZCBjaGFyYWN0ZXIgbGluZWFyIHZlbG9jaXR5YCwgdmVsKTtcclxuICAgICAgICB0aGlzLnN5c3RlbS5hZGRDb21tYW5kKFxyXG4gICAgICAgICAgICBPUEVSQVRPUl9NT0RJRklFUiwgQ01EX0NIQVJfU0VUX0xJTl9WRUwsIHRoaXMuX2luZGV4LFxyXG4gICAgICAgICAgICB2ZWwsIEJVRkZFUl9XUklURV9WRUMzMiwgZmFsc2VcclxuICAgICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCB1c2VyRGF0YSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fdXNlckRhdGE7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IHVzZXJEYXRhKG51bSkge1xyXG4gICAgICAgIGlmIChEZWJ1Zy5kZXYpIHtcclxuICAgICAgICAgICAgbGV0IG9rID0gRGVidWcuY2hlY2tGbG9hdChudW0sIGBJbnZhbGlkIHVzZXIgZGF0YSB2YWx1ZS4gU2hvdWxkIGJlIGEgbnVtYmVyOiAkeyBudW0gfWApO1xyXG4gICAgICAgICAgICBpZiAoIW9rKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5fdXNlckRhdGEgPSBudW07XHJcblxyXG4gICAgICAgIHRoaXMuc3lzdGVtLmFkZENvbW1hbmQoXHJcbiAgICAgICAgICAgIE9QRVJBVE9SX01PRElGSUVSLCBDTURfU0VUX1VTRVJfREFUQSwgdGhpcy5faW5kZXgsXHJcbiAgICAgICAgICAgIG51bSwgQlVGRkVSX1dSSVRFX0ZMT0FUMzIsIGZhbHNlXHJcbiAgICAgICAgKTsgICAgICAgIFxyXG4gICAgfVxyXG5cclxuICAgIGdldCBwYWlyZWRFbnRpdHkoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3BhaXJlZEVudGl0eTtcclxuICAgIH1cclxuXHJcbiAgICBzZXQgcGFpcmVkRW50aXR5KGVudGl0eSkge1xyXG4gICAgICAgIGlmIChEZWJ1Zy5kZXYpIHtcclxuICAgICAgICAgICAgbGV0IG9rID0gRGVidWcuYXNzZXJ0KCEhZW50aXR5LmJvZHksIGBJbnZhbGlkIGVudGl0eSB0byBwYWlyLiBOZWVkcyB0byBoYXZlIGEgXCJib2R5XCIgY29tcG9uZW50LmAsIGVudGl0eSk7XHJcbiAgICAgICAgICAgIGlmICghb2spXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLl9wYWlyZWRFbnRpdHkgPSBlbnRpdHk7XHJcblxyXG4gICAgICAgIHRoaXMuc3lzdGVtLmFkZENvbW1hbmQoXHJcbiAgICAgICAgICAgIE9QRVJBVE9SX01PRElGSUVSLCBDTURfUEFJUl9CT0RZLCB0aGlzLl9pbmRleCxcclxuICAgICAgICAgICAgZW50aXR5LmJvZHkuaW5kZXgsIEJVRkZFUl9XUklURV9VSU5UMzIsIGZhbHNlXHJcbiAgICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRTaGFwZShzaGFwZUluZGV4ID0gbnVsbCwgY2FsbGJhY2sgPSBudWxsKSB7XHJcbiAgICAgICAgY29uc3Qgc3lzdGVtID0gdGhpcy5zeXN0ZW07XHJcblxyXG4gICAgICAgIHN5c3RlbS5hZGRDb21tYW5kKFxyXG4gICAgICAgICAgICBPUEVSQVRPUl9NT0RJRklFUiwgQ01EX0NIQVJfU0VUX1NIQVBFLCB0aGlzLl9pbmRleCxcclxuICAgICAgICAgICAgISFjYWxsYmFjaywgQlVGRkVSX1dSSVRFX0JPT0wsIGZhbHNlLFxyXG4gICAgICAgICAgICBzaGFwZUluZGV4LCBCVUZGRVJfV1JJVEVfVUlOVDMyLCB0cnVlXHJcbiAgICAgICAgKTtcclxuXHJcbiAgICAgICAgaWYgKGNhbGxiYWNrKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3dyaXRlQ2FsbGJhY2soY2FsbGJhY2spO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB3cml0ZUNvbXBvbmVudERhdGEoY2IpIHtcclxuICAgICAgICBjb25zdCBvayA9IFNoYXBlQ29tcG9uZW50LndyaXRlU2hhcGVEYXRhKGNiLCB0aGlzLCB0cnVlIC8qIGZvcmNlIHdyaXRlIHJvdGF0aW9uICovKTtcclxuICAgICAgICBpZiAoRGVidWcuZGV2ICYmICFvaykge1xyXG4gICAgICAgICAgICBEZWJ1Zy53YXJuKCdFcnJvciBjcmVhdGluZyBhIHNoYXBlIGRhdGEuJyk7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNiLndyaXRlKHRoaXMuX2luZGV4LCBCVUZGRVJfV1JJVEVfVUlOVDMyLCBmYWxzZSk7XHJcbiAgICAgICAgY2Iud3JpdGUodGhpcy5fdXNlTW90aW9uU3RhdGUsIEJVRkZFUl9XUklURV9CT09MLCBmYWxzZSk7XHJcbiAgICAgICAgY2Iud3JpdGUodGhpcy5fdXAsIEJVRkZFUl9XUklURV9WRUMzMiwgZmFsc2UpO1xyXG4gICAgICAgIGNiLndyaXRlKHRoaXMuX3N1cHBvcnRpbmdWb2x1bWUsIEJVRkZFUl9XUklURV9QTEFORSwgZmFsc2UpO1xyXG4gICAgICAgIGNiLndyaXRlKHRoaXMuX21heFNsb3BlQW5nbGUsIEJVRkZFUl9XUklURV9GTE9BVDMyLCBmYWxzZSk7XHJcbiAgICAgICAgY2Iud3JpdGUodGhpcy5fbWFzcywgQlVGRkVSX1dSSVRFX0ZMT0FUMzIsIGZhbHNlKTtcclxuICAgICAgICBjYi53cml0ZSh0aGlzLl9tYXhTdHJlbmd0aCwgQlVGRkVSX1dSSVRFX0ZMT0FUMzIsIGZhbHNlKTtcclxuICAgICAgICBjYi53cml0ZSh0aGlzLl9zaGFwZU9mZnNldCwgQlVGRkVSX1dSSVRFX1ZFQzMyLCBmYWxzZSk7XHJcbiAgICAgICAgY2Iud3JpdGUodGhpcy5fYmFja0ZhY2VNb2RlLCBCVUZGRVJfV1JJVEVfVUlOVDgsIGZhbHNlKTtcclxuICAgICAgICBjYi53cml0ZSh0aGlzLl9wcmVkaWN0aXZlQ29udGFjdERpc3RhbmNlLCBCVUZGRVJfV1JJVEVfRkxPQVQzMiwgZmFsc2UpO1xyXG4gICAgICAgIGNiLndyaXRlKHRoaXMuX21heENvbGxpc2lvbkl0ZXJhdGlvbnMsIEJVRkZFUl9XUklURV9VSU5UMzIsIGZhbHNlKTtcclxuICAgICAgICBjYi53cml0ZSh0aGlzLl9tYXhDb25zdHJhaW50SXRlcmF0aW9ucywgQlVGRkVSX1dSSVRFX1VJTlQzMiwgZmFsc2UpO1xyXG4gICAgICAgIGNiLndyaXRlKHRoaXMuX21pblRpbWVSZW1haW5pbmcsIEJVRkZFUl9XUklURV9GTE9BVDMyLCBmYWxzZSk7XHJcbiAgICAgICAgY2Iud3JpdGUodGhpcy5fY29sbGlzaW9uVG9sZXJhbmNlLCBCVUZGRVJfV1JJVEVfRkxPQVQzMiwgZmFsc2UpO1xyXG4gICAgICAgIGNiLndyaXRlKHRoaXMuX2NoYXJhY3RlclBhZGRpbmcsIEJVRkZFUl9XUklURV9GTE9BVDMyLCBmYWxzZSk7XHJcbiAgICAgICAgY2Iud3JpdGUodGhpcy5fbWF4TnVtSGl0cywgQlVGRkVSX1dSSVRFX1VJTlQzMiwgZmFsc2UpO1xyXG4gICAgICAgIGNiLndyaXRlKHRoaXMuX2hpdFJlZHVjdGlvbkNvc01heEFuZ2xlLCBCVUZGRVJfV1JJVEVfRkxPQVQzMiwgZmFsc2UpO1xyXG4gICAgICAgIGNiLndyaXRlKHRoaXMuX3BlbmV0cmF0aW9uUmVjb3ZlcnlTcGVlZCwgQlVGRkVSX1dSSVRFX0ZMT0FUMzIsIGZhbHNlKTtcclxuXHJcbiAgICAgICAgY29uc3QgZW50aXR5ID0gdGhpcy5lbnRpdHk7XHJcbiAgICAgICAgY29uc3QgcG9zID0gZW50aXR5LmdldFBvc2l0aW9uKCk7XHJcbiAgICAgICAgY29uc3Qgcm90ID0gZW50aXR5LmdldFJvdGF0aW9uKCk7XHJcblxyXG4gICAgICAgIC8vIExvc3Mgb2YgcHJlY2lzaW9uIGZvciBwb3Mvcm90ICg2NCAtPiAzMilcclxuICAgICAgICBjYi53cml0ZShwb3MsIEJVRkZFUl9XUklURV9WRUMzMiwgZmFsc2UpO1xyXG4gICAgICAgIGNiLndyaXRlKHJvdCwgQlVGRkVSX1dSSVRFX1ZFQzMyLCBmYWxzZSk7XHJcblxyXG4gICAgICAgIERlYnVnLmRldiAmJiBjYi53cml0ZSh0aGlzLl9kZWJ1Z0RyYXcsIEJVRkZFUl9XUklURV9CT09MLCBmYWxzZSk7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlVHJhbnNmb3JtcyhjYiwgbWFwKSB7XHJcbiAgICAgICAgY29uc3QgZW50aXR5ID0gdGhpcy5lbnRpdHk7XHJcblxyXG4gICAgICAgIGNvbnN0IHB4ID0gY2IucmVhZChCVUZGRVJfUkVBRF9GTE9BVDMyKTtcclxuICAgICAgICBjb25zdCBweSA9IGNiLnJlYWQoQlVGRkVSX1JFQURfRkxPQVQzMik7XHJcbiAgICAgICAgY29uc3QgcHogPSBjYi5yZWFkKEJVRkZFUl9SRUFEX0ZMT0FUMzIpO1xyXG4gICAgICAgIGVudGl0eS5zZXRQb3NpdGlvbihweCwgcHksIHB6KTtcclxuXHJcbiAgICAgICAgZW50aXR5LnNldFJvdGF0aW9uKFxyXG4gICAgICAgICAgICBjYi5yZWFkKEJVRkZFUl9SRUFEX0ZMT0FUMzIpLFxyXG4gICAgICAgICAgICBjYi5yZWFkKEJVRkZFUl9SRUFEX0ZMT0FUMzIpLFxyXG4gICAgICAgICAgICBjYi5yZWFkKEJVRkZFUl9SRUFEX0ZMT0FUMzIpLFxyXG4gICAgICAgICAgICBjYi5yZWFkKEJVRkZFUl9SRUFEX0ZMT0FUMzIpXHJcbiAgICAgICAgKTtcclxuXHJcbiAgICAgICAgdGhpcy5fbGluZWFyVmVsb2NpdHkuc2V0KFxyXG4gICAgICAgICAgICBjYi5yZWFkKEJVRkZFUl9SRUFEX0ZMT0FUMzIpLFxyXG4gICAgICAgICAgICBjYi5yZWFkKEJVRkZFUl9SRUFEX0ZMT0FUMzIpLFxyXG4gICAgICAgICAgICBjYi5yZWFkKEJVRkZFUl9SRUFEX0ZMT0FUMzIpXHJcbiAgICAgICAgKTtcclxuXHJcbiAgICAgICAgY29uc3QgcGUgPSB0aGlzLl9wYWlyZWRFbnRpdHk7XHJcbiAgICAgICAgaWYgKHBlKSB7XHJcbiAgICAgICAgICAgIHBlLnNldFBvc2l0aW9uKHB4LCBweSArIHRoaXMuX3NoYXBlT2Zmc2V0LnkgKyB0aGlzLl9zaGFwZVBvc2l0aW9uLnksIHB6KTtcclxuICAgICAgICAgICAgcGUuc2V0Um90YXRpb24oMCwgMCwgMCwgMSk7IC8vIGNoYXIgbmV2ZXIgcm90YXRlc1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgaXNTdXBwb3J0ZWQgPSBjYi5yZWFkKEJVRkZFUl9SRUFEX0JPT0wpO1xyXG4gICAgICAgIHRoaXMuX2lzU3VwcG9ydGVkID0gaXNTdXBwb3J0ZWQ7XHJcbiAgICAgICAgdGhpcy5fc3RhdGUgPSBjYi5yZWFkKEJVRkZFUl9SRUFEX1VJTlQ4KTtcclxuXHJcbiAgICAgICAgaWYgKGlzU3VwcG9ydGVkICYmIGNiLnJlYWQoQlVGRkVSX1JFQURfQk9PTCkpIHtcclxuICAgICAgICAgICAgY29uc3QgZ3JvdW5kSW5kZXggPSBjYi5yZWFkKEJVRkZFUl9SRUFEX1VJTlQzMik7XHJcbiAgICAgICAgICAgIHRoaXMuX2dyb3VuZEVudGl0eSA9IG1hcC5nZXQoZ3JvdW5kSW5kZXgpIHx8IG51bGw7XHJcbiAgICAgICAgICAgIHRoaXMuX2lzU2xvcGVUb29TdGVlcCA9IGNiLnJlYWQoQlVGRkVSX1JFQURfQk9PTCk7XHJcbiAgICAgICAgICAgIHRoaXMuX2dyb3VuZFZlbG9jaXR5LnNldChcclxuICAgICAgICAgICAgICAgIGNiLnJlYWQoQlVGRkVSX1JFQURfRkxPQVQzMiksXHJcbiAgICAgICAgICAgICAgICBjYi5yZWFkKEJVRkZFUl9SRUFEX0ZMT0FUMzIpLFxyXG4gICAgICAgICAgICAgICAgY2IucmVhZChCVUZGRVJfUkVBRF9GTE9BVDMyKVxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgICB0aGlzLl9ncm91bmROb3JtYWwuc2V0KFxyXG4gICAgICAgICAgICAgICAgY2IucmVhZChCVUZGRVJfUkVBRF9GTE9BVDMyKSxcclxuICAgICAgICAgICAgICAgIGNiLnJlYWQoQlVGRkVSX1JFQURfRkxPQVQzMiksXHJcbiAgICAgICAgICAgICAgICBjYi5yZWFkKEJVRkZFUl9SRUFEX0ZMT0FUMzIpXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5fZ3JvdW5kRW50aXR5ID0gbnVsbDtcclxuICAgICAgICAgICAgdGhpcy5fZ3JvdW5kTm9ybWFsLnNldCgwLCAwLCAwKTtcclxuICAgICAgICAgICAgdGhpcy5fZ3JvdW5kVmVsb2NpdHkuc2V0KDAsIDAsIDApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBvbkVuYWJsZSgpIHtcclxuICAgICAgICBjb25zdCBzeXN0ZW0gPSB0aGlzLnN5c3RlbTtcclxuXHJcbiAgICAgICAgdGhpcy5faW5kZXggPSBzeXN0ZW0uZ2V0SW5kZXgodGhpcy5lbnRpdHkpO1xyXG5cclxuICAgICAgICBzeXN0ZW0uY3JlYXRlQ2hhcmFjdGVyKHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uRGlzYWJsZSgpIHtcclxuICAgICAgICBzdXBlci5vbkRpc2FibGUoKTtcclxuXHJcbiAgICAgICAgY29uc3Qgc3lzdGVtID0gdGhpcy5zeXN0ZW07XHJcbiAgICAgICAgY29uc3QgY29tcG9uZW50SW5kZXggPSB0aGlzLl9pbmRleDtcclxuXHJcbiAgICAgICAgc3lzdGVtLnNldEluZGV4RnJlZShjb21wb25lbnRJbmRleCk7XHJcblxyXG4gICAgICAgIHN5c3RlbS5hZGRDb21tYW5kKE9QRVJBVE9SX0NMRUFORVIsIENNRF9ERVNUUk9ZX0JPRFksIGNvbXBvbmVudEluZGV4KTtcclxuICAgIH0gICAgXHJcblxyXG4gICAgX3dyaXRlQ2FsbGJhY2soY2FsbGJhY2spIHtcclxuICAgICAgICBpZiAoY2FsbGJhY2spIHtcclxuICAgICAgICAgICAgY29uc3Qgc3lzdGVtID0gdGhpcy5zeXN0ZW07XHJcbiAgICAgICAgICAgIGNvbnN0IGNhbGxiYWNrSW5kZXggPSBzeXN0ZW0uZ2V0Q2FsbGJhY2tJbmRleChjYWxsYmFjayk7XHJcbiAgICAgICAgICAgIHN5c3RlbS5hZGRDb21tYW5kQXJncyhjYWxsYmFja0luZGV4LCBCVUZGRVJfV1JJVEVfVUlOVDMyLCBmYWxzZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBDaGFyQ29tcG9uZW50IH07XHJcblxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/physics/components/jolt/char/component.mjs\n");

/***/ }),

/***/ "./src/physics/components/jolt/char/system.mjs":
/*!*****************************************************!*\
  !*** ./src/physics/components/jolt/char/system.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CharComponentSystem: () => (/* binding */ CharComponentSystem)\n/* harmony export */ });\n/* harmony import */ var _util_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../util.mjs */ \"./src/physics/util.mjs\");\n/* harmony import */ var _debug_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../debug.mjs */ \"./src/physics/debug.mjs\");\n/* harmony import */ var _constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n/* harmony import */ var _indexed_cache_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../indexed-cache.mjs */ \"./src/physics/indexed-cache.mjs\");\n/* harmony import */ var _component_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./component.mjs */ \"./src/physics/components/jolt/char/component.mjs\");\n/* harmony import */ var _response_handler_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../response-handler.mjs */ \"./src/physics/components/jolt/response-handler.mjs\");\n/* harmony import */ var _system_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../system.mjs */ \"./src/physics/components/jolt/system.mjs\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst schema = [\r\n    // Jolt virtual character\r\n    'up',\r\n    'supportingVolume',\r\n    'maxSlopeAngle',\r\n    'mass',\r\n    'maxStrength',\r\n    'shapeOffset',\r\n    'backFaceMode',\r\n    'predictiveContactDistance',\r\n    'maxCollisionIterations',\r\n    'maxConstraintIterations',\r\n    'minTimeRemaining',\r\n    'collisionTolerance',\r\n    'characterPadding',\r\n    'maxNumHits',\r\n    'hitReductionCosMaxAngle',\r\n    'penetrationRecoverySpeed',\r\n    'isSupported',\r\n    'isSlopeTooSteep',\r\n    'groundEntity',\r\n    'groundNormal',\r\n    'groundVelocity',\r\n    'state',\r\n    'pairedEntity',\r\n];\r\n\r\nclass CharComponentSystem extends _system_mjs__WEBPACK_IMPORTED_MODULE_6__.ShapeComponentSystem {\r\n    constructor(app, manager, id) {\r\n        super(app, manager);\r\n\r\n        this.id = 'char';\r\n        this.schema = [...this.schema, ...schema];\r\n        this.ComponentType = _component_mjs__WEBPACK_IMPORTED_MODULE_4__.CharComponent;\r\n\r\n        this._queryMap = new _indexed_cache_mjs__WEBPACK_IMPORTED_MODULE_3__.IndexedCache();\r\n\r\n        this._exposeConstants();\r\n\r\n        manager.systems.set(id, this);\r\n    }\r\n\r\n    getCallbackIndex(callback) {\r\n        return this._manager.queryMap.add(callback);\r\n    }\r\n\r\n    initializeComponentData(component, data) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n            const ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.verifyProperties(data, this.schema);\r\n            if (!ok) return;\r\n        }\r\n\r\n        super.initializeComponentData(component, data);\r\n    }\r\n\r\n    processCommands(cb) {\r\n        const command = cb.readCommand();\r\n\r\n        switch (command) {\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CMD_UPDATE_TRANSFORMS:\r\n                this._updateCharTransforms(cb);\r\n                break;\r\n\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CMD_REPORT_CONTACTS:\r\n                _response_handler_mjs__WEBPACK_IMPORTED_MODULE_5__.ResponseHandler.handleCharContacts(cb, this.entityMap);\r\n                break;\r\n\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CMD_REPORT_SET_SHAPE:\r\n                _response_handler_mjs__WEBPACK_IMPORTED_MODULE_5__.ResponseHandler.handleCharSetShape(cb, this._manager.queryMap);\r\n                break;\r\n        }\r\n    }\r\n\r\n    createCharacter(component) {\r\n        const cb = this._manager.commandsBuffer;\r\n\r\n        cb.writeOperator(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.OPERATOR_CREATOR);\r\n        cb.writeCommand(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CMD_CREATE_CHAR);\r\n\r\n        component.writeComponentData(cb);\r\n    }\r\n\r\n    overrideContacts(callbacks = {}) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.dev) {\r\n            !!callbacks.OnAdjustBodyVelocity && _debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.assert(typeof callbacks.OnAdjustBodyVelocity === 'function', 'OnAdjustBodyVelocity must be a function', callbacks);\r\n            !!callbacks.OnContactValidate && _debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.assert(typeof callbacks.OnContactValidate === 'function', 'OnContactValidate must be a function', callbacks);\r\n            !!callbacks.OnContactAdded && _debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.assert(typeof callbacks.OnContactAdded === 'function', 'OnContactAdded must be a function', callbacks);\r\n            !!callbacks.OnContactSolve && _debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.assert(typeof callbacks.OnContactSolve === 'function', 'OnContactSolve must be a function', callbacks);\r\n        }\r\n\r\n        const overrides = Object.create(null);\r\n        if (callbacks.OnAdjustBodyVelocity) {\r\n            overrides.OnAdjustBodyVelocity = new String(callbacks.OnAdjustBodyVelocity);\r\n        }\r\n        if (callbacks.OnContactValidate) {\r\n            overrides.OnContactValidate = new String(callbacks.OnContactValidate);\r\n        }\r\n        if (callbacks.OnContactAdded) {\r\n            overrides.OnContactAdded = new String(callbacks.OnContactAdded);\r\n        }\r\n        if (callbacks.OnContactSolve) {\r\n            overrides.OnContactSolve = new String(callbacks.OnContactSolve);\r\n        }\r\n\r\n        const msg = Object.create(null);\r\n        msg.type = 'override-contacts';\r\n        msg.listener = 'char';\r\n        msg.overrides = overrides;\r\n        this._manager.sendUncompressed(msg);\r\n    }\r\n\r\n    _exposeConstants() { }\r\n\r\n    _updateCharTransforms(cb) {\r\n        const charsCount = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_UINT32);\r\n\r\n        for (let i = 0; i < charsCount; i++) {\r\n            const index = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_UINT32);\r\n            const entity = this.entityMap.get(index);\r\n\r\n            entity?.char?.updateTransforms(cb, this.entityMap);\r\n        }\r\n    }\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGh5c2ljcy9jb21wb25lbnRzL2pvbHQvY2hhci9zeXN0ZW0ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQW1EO0FBQ1I7QUFDdUk7QUFDeEg7QUFDVjtBQUNVO0FBQ0w7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsNkRBQW9CO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIseURBQWE7QUFDMUM7QUFDQSw2QkFBNkIsNERBQVk7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksNkNBQUs7QUFDakIsdUJBQXVCLDZDQUFLO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGlFQUFxQjtBQUN0QztBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsK0RBQW1CO0FBQ3BDLGdCQUFnQixrRUFBZTtBQUMvQjtBQUNBO0FBQ0EsaUJBQWlCLGdFQUFvQjtBQUNyQyxnQkFBZ0Isa0VBQWU7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsNERBQWdCO0FBQ3pDLHdCQUF3QiwyREFBZTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQyxZQUFZLDZDQUFLO0FBQ2pCLGdEQUFnRCw2Q0FBSztBQUNyRCw2Q0FBNkMsNkNBQUs7QUFDbEQsMENBQTBDLDZDQUFLO0FBQy9DLDBDQUEwQyw2Q0FBSztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLDhEQUFrQjtBQUNyRDtBQUNBLHdCQUF3QixnQkFBZ0I7QUFDeEMsa0NBQWtDLDhEQUFrQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL1BoeXNpY3NDb21wb25lbnRzLy4vc3JjL3BoeXNpY3MvY29tcG9uZW50cy9qb2x0L2NoYXIvc3lzdGVtLm1qcz9kYjFmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJ1aWxkQWNjZXNzb3JzIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWwubWpzXCI7XHJcbmltcG9ydCB7IERlYnVnIH0gZnJvbSBcIi4uLy4uLy4uL2RlYnVnLm1qc1wiO1xyXG5pbXBvcnQgeyBCVUZGRVJfUkVBRF9VSU5UMzIsIENNRF9DUkVBVEVfQ0hBUiwgQ01EX1JFUE9SVF9DT05UQUNUUywgQ01EX1JFUE9SVF9TRVRfU0hBUEUsIENNRF9VUERBVEVfVFJBTlNGT1JNUywgQ09NUE9ORU5UX1NZU1RFTV9DSEFSLCBPUEVSQVRPUl9DUkVBVE9SIH0gZnJvbSBcIi4uL2NvbnN0YW50cy5tanNcIjtcclxuaW1wb3J0IHsgSW5kZXhlZENhY2hlIH0gZnJvbSBcIi4uLy4uLy4uL2luZGV4ZWQtY2FjaGUubWpzXCI7XHJcbmltcG9ydCB7IENoYXJDb21wb25lbnQgfSBmcm9tIFwiLi9jb21wb25lbnQubWpzXCI7XHJcbmltcG9ydCB7IFJlc3BvbnNlSGFuZGxlciB9IGZyb20gXCIuLi9yZXNwb25zZS1oYW5kbGVyLm1qc1wiO1xyXG5pbXBvcnQgeyBTaGFwZUNvbXBvbmVudFN5c3RlbSB9IGZyb20gXCIuLi9zeXN0ZW0ubWpzXCI7XHJcblxyXG5jb25zdCBzY2hlbWEgPSBbXHJcbiAgICAvLyBKb2x0IHZpcnR1YWwgY2hhcmFjdGVyXHJcbiAgICAndXAnLFxyXG4gICAgJ3N1cHBvcnRpbmdWb2x1bWUnLFxyXG4gICAgJ21heFNsb3BlQW5nbGUnLFxyXG4gICAgJ21hc3MnLFxyXG4gICAgJ21heFN0cmVuZ3RoJyxcclxuICAgICdzaGFwZU9mZnNldCcsXHJcbiAgICAnYmFja0ZhY2VNb2RlJyxcclxuICAgICdwcmVkaWN0aXZlQ29udGFjdERpc3RhbmNlJyxcclxuICAgICdtYXhDb2xsaXNpb25JdGVyYXRpb25zJyxcclxuICAgICdtYXhDb25zdHJhaW50SXRlcmF0aW9ucycsXHJcbiAgICAnbWluVGltZVJlbWFpbmluZycsXHJcbiAgICAnY29sbGlzaW9uVG9sZXJhbmNlJyxcclxuICAgICdjaGFyYWN0ZXJQYWRkaW5nJyxcclxuICAgICdtYXhOdW1IaXRzJyxcclxuICAgICdoaXRSZWR1Y3Rpb25Db3NNYXhBbmdsZScsXHJcbiAgICAncGVuZXRyYXRpb25SZWNvdmVyeVNwZWVkJyxcclxuICAgICdpc1N1cHBvcnRlZCcsXHJcbiAgICAnaXNTbG9wZVRvb1N0ZWVwJyxcclxuICAgICdncm91bmRFbnRpdHknLFxyXG4gICAgJ2dyb3VuZE5vcm1hbCcsXHJcbiAgICAnZ3JvdW5kVmVsb2NpdHknLFxyXG4gICAgJ3N0YXRlJyxcclxuICAgICdwYWlyZWRFbnRpdHknLFxyXG5dO1xyXG5cclxuY2xhc3MgQ2hhckNvbXBvbmVudFN5c3RlbSBleHRlbmRzIFNoYXBlQ29tcG9uZW50U3lzdGVtIHtcclxuICAgIGNvbnN0cnVjdG9yKGFwcCwgbWFuYWdlciwgaWQpIHtcclxuICAgICAgICBzdXBlcihhcHAsIG1hbmFnZXIpO1xyXG5cclxuICAgICAgICB0aGlzLmlkID0gJ2NoYXInO1xyXG4gICAgICAgIHRoaXMuc2NoZW1hID0gWy4uLnRoaXMuc2NoZW1hLCAuLi5zY2hlbWFdO1xyXG4gICAgICAgIHRoaXMuQ29tcG9uZW50VHlwZSA9IENoYXJDb21wb25lbnQ7XHJcblxyXG4gICAgICAgIHRoaXMuX3F1ZXJ5TWFwID0gbmV3IEluZGV4ZWRDYWNoZSgpO1xyXG5cclxuICAgICAgICB0aGlzLl9leHBvc2VDb25zdGFudHMoKTtcclxuXHJcbiAgICAgICAgbWFuYWdlci5zeXN0ZW1zLnNldChpZCwgdGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Q2FsbGJhY2tJbmRleChjYWxsYmFjaykge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9tYW5hZ2VyLnF1ZXJ5TWFwLmFkZChjYWxsYmFjayk7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdGlhbGl6ZUNvbXBvbmVudERhdGEoY29tcG9uZW50LCBkYXRhKSB7XHJcbiAgICAgICAgaWYgKERlYnVnLmRldikge1xyXG4gICAgICAgICAgICBjb25zdCBvayA9IERlYnVnLnZlcmlmeVByb3BlcnRpZXMoZGF0YSwgdGhpcy5zY2hlbWEpO1xyXG4gICAgICAgICAgICBpZiAoIW9rKSByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBzdXBlci5pbml0aWFsaXplQ29tcG9uZW50RGF0YShjb21wb25lbnQsIGRhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIHByb2Nlc3NDb21tYW5kcyhjYikge1xyXG4gICAgICAgIGNvbnN0IGNvbW1hbmQgPSBjYi5yZWFkQ29tbWFuZCgpO1xyXG5cclxuICAgICAgICBzd2l0Y2ggKGNvbW1hbmQpIHtcclxuICAgICAgICAgICAgY2FzZSBDTURfVVBEQVRFX1RSQU5TRk9STVM6XHJcbiAgICAgICAgICAgICAgICB0aGlzLl91cGRhdGVDaGFyVHJhbnNmb3JtcyhjYik7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgIGNhc2UgQ01EX1JFUE9SVF9DT05UQUNUUzpcclxuICAgICAgICAgICAgICAgIFJlc3BvbnNlSGFuZGxlci5oYW5kbGVDaGFyQ29udGFjdHMoY2IsIHRoaXMuZW50aXR5TWFwKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgY2FzZSBDTURfUkVQT1JUX1NFVF9TSEFQRTpcclxuICAgICAgICAgICAgICAgIFJlc3BvbnNlSGFuZGxlci5oYW5kbGVDaGFyU2V0U2hhcGUoY2IsIHRoaXMuX21hbmFnZXIucXVlcnlNYXApO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGNyZWF0ZUNoYXJhY3Rlcihjb21wb25lbnQpIHtcclxuICAgICAgICBjb25zdCBjYiA9IHRoaXMuX21hbmFnZXIuY29tbWFuZHNCdWZmZXI7XHJcblxyXG4gICAgICAgIGNiLndyaXRlT3BlcmF0b3IoT1BFUkFUT1JfQ1JFQVRPUik7XHJcbiAgICAgICAgY2Iud3JpdGVDb21tYW5kKENNRF9DUkVBVEVfQ0hBUik7XHJcblxyXG4gICAgICAgIGNvbXBvbmVudC53cml0ZUNvbXBvbmVudERhdGEoY2IpO1xyXG4gICAgfVxyXG5cclxuICAgIG92ZXJyaWRlQ29udGFjdHMoY2FsbGJhY2tzID0ge30pIHtcclxuICAgICAgICBpZiAoRGVidWcuZGV2KSB7XHJcbiAgICAgICAgICAgICEhY2FsbGJhY2tzLk9uQWRqdXN0Qm9keVZlbG9jaXR5ICYmIERlYnVnLmFzc2VydCh0eXBlb2YgY2FsbGJhY2tzLk9uQWRqdXN0Qm9keVZlbG9jaXR5ID09PSAnZnVuY3Rpb24nLCAnT25BZGp1c3RCb2R5VmVsb2NpdHkgbXVzdCBiZSBhIGZ1bmN0aW9uJywgY2FsbGJhY2tzKTtcclxuICAgICAgICAgICAgISFjYWxsYmFja3MuT25Db250YWN0VmFsaWRhdGUgJiYgRGVidWcuYXNzZXJ0KHR5cGVvZiBjYWxsYmFja3MuT25Db250YWN0VmFsaWRhdGUgPT09ICdmdW5jdGlvbicsICdPbkNvbnRhY3RWYWxpZGF0ZSBtdXN0IGJlIGEgZnVuY3Rpb24nLCBjYWxsYmFja3MpO1xyXG4gICAgICAgICAgICAhIWNhbGxiYWNrcy5PbkNvbnRhY3RBZGRlZCAmJiBEZWJ1Zy5hc3NlcnQodHlwZW9mIGNhbGxiYWNrcy5PbkNvbnRhY3RBZGRlZCA9PT0gJ2Z1bmN0aW9uJywgJ09uQ29udGFjdEFkZGVkIG11c3QgYmUgYSBmdW5jdGlvbicsIGNhbGxiYWNrcyk7XHJcbiAgICAgICAgICAgICEhY2FsbGJhY2tzLk9uQ29udGFjdFNvbHZlICYmIERlYnVnLmFzc2VydCh0eXBlb2YgY2FsbGJhY2tzLk9uQ29udGFjdFNvbHZlID09PSAnZnVuY3Rpb24nLCAnT25Db250YWN0U29sdmUgbXVzdCBiZSBhIGZ1bmN0aW9uJywgY2FsbGJhY2tzKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNvbnN0IG92ZXJyaWRlcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XHJcbiAgICAgICAgaWYgKGNhbGxiYWNrcy5PbkFkanVzdEJvZHlWZWxvY2l0eSkge1xyXG4gICAgICAgICAgICBvdmVycmlkZXMuT25BZGp1c3RCb2R5VmVsb2NpdHkgPSBuZXcgU3RyaW5nKGNhbGxiYWNrcy5PbkFkanVzdEJvZHlWZWxvY2l0eSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChjYWxsYmFja3MuT25Db250YWN0VmFsaWRhdGUpIHtcclxuICAgICAgICAgICAgb3ZlcnJpZGVzLk9uQ29udGFjdFZhbGlkYXRlID0gbmV3IFN0cmluZyhjYWxsYmFja3MuT25Db250YWN0VmFsaWRhdGUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoY2FsbGJhY2tzLk9uQ29udGFjdEFkZGVkKSB7XHJcbiAgICAgICAgICAgIG92ZXJyaWRlcy5PbkNvbnRhY3RBZGRlZCA9IG5ldyBTdHJpbmcoY2FsbGJhY2tzLk9uQ29udGFjdEFkZGVkKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGNhbGxiYWNrcy5PbkNvbnRhY3RTb2x2ZSkge1xyXG4gICAgICAgICAgICBvdmVycmlkZXMuT25Db250YWN0U29sdmUgPSBuZXcgU3RyaW5nKGNhbGxiYWNrcy5PbkNvbnRhY3RTb2x2ZSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBtc2cgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xyXG4gICAgICAgIG1zZy50eXBlID0gJ292ZXJyaWRlLWNvbnRhY3RzJztcclxuICAgICAgICBtc2cubGlzdGVuZXIgPSAnY2hhcic7XHJcbiAgICAgICAgbXNnLm92ZXJyaWRlcyA9IG92ZXJyaWRlcztcclxuICAgICAgICB0aGlzLl9tYW5hZ2VyLnNlbmRVbmNvbXByZXNzZWQobXNnKTtcclxuICAgIH1cclxuXHJcbiAgICBfZXhwb3NlQ29uc3RhbnRzKCkgeyB9XHJcblxyXG4gICAgX3VwZGF0ZUNoYXJUcmFuc2Zvcm1zKGNiKSB7XHJcbiAgICAgICAgY29uc3QgY2hhcnNDb3VudCA9IGNiLnJlYWQoQlVGRkVSX1JFQURfVUlOVDMyKTtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGFyc0NvdW50OyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3QgaW5kZXggPSBjYi5yZWFkKEJVRkZFUl9SRUFEX1VJTlQzMik7XHJcbiAgICAgICAgICAgIGNvbnN0IGVudGl0eSA9IHRoaXMuZW50aXR5TWFwLmdldChpbmRleCk7XHJcblxyXG4gICAgICAgICAgICBlbnRpdHk/LmNoYXI/LnVwZGF0ZVRyYW5zZm9ybXMoY2IsIHRoaXMuZW50aXR5TWFwKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCB7IENoYXJDb21wb25lbnRTeXN0ZW0gfTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/physics/components/jolt/char/system.mjs\n");

/***/ }),

/***/ "./src/physics/components/jolt/component.mjs":
/*!***************************************************!*\
  !*** ./src/physics/components/jolt/component.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ShapeComponent: () => (/* binding */ ShapeComponent)\n/* harmony export */ });\n/* harmony import */ var _debug_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../debug.mjs */ \"./src/physics/debug.mjs\");\n/* harmony import */ var _util_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util.mjs */ \"./src/physics/util.mjs\");\n/* harmony import */ var _constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n\r\n\r\n\r\n\r\nconst quat = new pc.Quat();\r\n\r\nclass ShapeComponent extends pc.EventHandler {\r\n\r\n    // ---- COMPONENT PROPS ----\r\n\r\n    // Shape type\r\n    _shape = _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.SHAPE_BOX;\r\n\r\n    // Enable / disable component\r\n    _enabled = true;\r\n\r\n\r\n    // TODO\r\n    // get rid of trackDynamic, it doesn't work well with workers and in some parent/child edge cases\r\n\r\n    // Automatically moves dynamic bodies, when the position is set on entity.\r\n    _trackDynamic = true;\r\n\r\n    // Unique body index. This can change during entity lifecycle, e.g. every time entity is enabled, a new\r\n    // index is assigned and a new body is created. The index is used to map entity to body. Indices can be reused.\r\n    _index = -1;\r\n\r\n    // Render asset ID, used for mesh or convex hulls.\r\n    _renderAsset = null;\r\n\r\n    // Meshes used for mesh or convex hulls\r\n    _meshes = null;\r\n\r\n    // Tells if the component describes a compound child\r\n    _isCompoundChild = false;\r\n\r\n    // Applies entity scale on the shape\r\n    _useEntityScale = true;\r\n\r\n    // Read-only. Constraint indices applied on this body.\r\n    // TODO\r\n    // remove default Map\r\n    _constraints = new Map();\r\n\r\n    // Debug draw\r\n    _debugDraw = false;\r\n\r\n    // ---- SHAPE PROPS ----\r\n\r\n    // Half extents for a box shape\r\n    _halfExtent = new pc.Vec3(0.5, 0.5, 0.5);\r\n\r\n    // Raidus for radius based shapes\r\n    _radius = 0.5;\r\n\r\n    // Internally the convex radius will be subtracted from the half extent so the total box will not grow with the convex radius\r\n    _convexRadius = 0.05;\r\n\r\n    // Half height of radius based shapes, e.g. cylinder, capsule\r\n    _halfHeight = 0.5;\r\n\r\n    // Density of the object in kg / m^3\r\n    _density = 1000;\r\n\r\n    // Shape local position offset\r\n    _shapePosition = pc.Vec3.ZERO;\r\n\r\n    // Shape local rotation offset (vec3, Eulers)\r\n    _shapeRotation = pc.Vec3.ZERO;\r\n\r\n    // Offset center of mass in local space of the body. Does not move the shape.\r\n    _massOffset = pc.Vec3.ZERO;\r\n\r\n    _hfSamples = null;\r\n\r\n    _hfSampleCount = 0;\r\n\r\n    // The HeightField is divided in blocks of hfBlockSize * hfBlockSize * 2 triangles and the\r\n    // acceleration structure culls blocks only, bigger block sizes reduce memory consumption\r\n    // but also reduce query performance. Sensible values are [2, 8], does not need to be a\r\n    // power of 2. Note that at run-time Jolt performs one more grid subdivision, so the effective\r\n    // block size is half of what is provided here.\r\n    _hfBlockSize = 2;\r\n\r\n    // How many bits per sample to use to compress the HeightField. Can be in the range [1, 8].\r\n    // Note that each sample is compressed relative to the min/max value of its block of\r\n    // hfBlockSize * hfBlockSize pixels so the effective precision is higher. Also note that\r\n    // increasing hfBlockSize saves more memory than reducing the amount of bits per sample.\r\n    _hfBitsPerSample = 8;\r\n\r\n    // Cosine of the threshold angle (if the angle between the two triangles in HeightField is\r\n    // bigger than this, the edge is active, note that a concave edge is always inactive). Setting\r\n    // this value too small can cause ghost collisions with edges, setting it too big can cause\r\n    // depenetration artifacts (objects not depenetrating quickly). Valid ranges are between\r\n    // cos(0 degrees) and cos(90 degrees). The default value is cos(5 degrees).\r\n    _hfActiveEdgeCosThresholdAngle = 0.996195;\r\n\r\n    _hfScale = pc.Vec3.ONE;\r\n\r\n    // The height field is a surface defined by: hfOffset + hfScale * (x, hfHeightSamples[y * hfSampleCount + x], y).\r\n    // where x and y are integers in the range x and y e [0, hfSampleCount - 1].\r\n    _hfOffset = pc.Vec3.ZERO;\r\n\r\n    // The ComponentSystem used to create this Component.\r\n    system;\r\n\r\n    // The Entity that this Component is attached to.\r\n    entity;\r\n\r\n    constructor(system, entity) {\r\n        super();\r\n\r\n        this.system = system;\r\n        this.entity = entity;\r\n\r\n        if (system.schema && !this._accessorsBuilt) {\r\n            (0,_util_mjs__WEBPACK_IMPORTED_MODULE_1__.buildAccessors)(this, system.schema);\r\n        }\r\n\r\n        this.on('set', function (name, oldValue, newValue) {\r\n            this.fire('set_' + name, name, oldValue, newValue);\r\n        });\r\n\r\n        this.on('set_enabled', this.onSetEnabled, this);\r\n    }\r\n\r\n\r\n    get constraints() {\r\n        return this._constraints;\r\n    }\r\n    \r\n    onSetEnabled(name, oldValue, newValue) {\r\n        if (oldValue !== newValue) {\r\n            if (this.entity.enabled) {\r\n                if (newValue) {\r\n                    this.onEnable();\r\n                } else {\r\n                    this.onDisable();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onEnable() {}\r\n\r\n    onDisable() {\r\n        const constraints = this._constraints;\r\n\r\n        constraints.forEach((entity2, index) => {\r\n            entity2?.body?.constraints.delete(index);\r\n            this.system.freeConstraintIndex(index);\r\n        });\r\n        constraints.clear();\r\n    }\r\n\r\n    onPostStateChange() {}\r\n\r\n    static writeShapeData(cb, props, forceWriteRotation = false) {\r\n        const shape = props.shape;\r\n        cb.write(shape, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT8, false);\r\n\r\n        const scale = props.scale || props.entity.getLocalScale();\r\n        let useEntityScale = props.useEntityScale;\r\n        \r\n        if (useEntityScale && scale.x === 1 && scale.y === 1 && scale.z === 1 && \r\n            shape !== _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.SHAPE_MESH && shape !== _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.SHAPE_CONVEX_HULL) {\r\n            useEntityScale = false;\r\n        }\r\n        \r\n        useEntityScale = useEntityScale || (shape === _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.SHAPE_MESH || shape === _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.SHAPE_CONVEX_HULL);\r\n        cb.write(useEntityScale, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_BOOL, false);\r\n        if (useEntityScale) {\r\n            // Potential precision loss 64 -> 32\r\n            cb.write(scale, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n        }\r\n    \r\n        let ok = true;\r\n        switch (shape) {\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.SHAPE_BOX:\r\n                cb.write(props.halfExtent, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n                cb.write(props.convexRadius, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n                break;\r\n    \r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.SHAPE_CAPSULE:\r\n                cb.write(props.halfHeight, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n                cb.write(props.radius, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n                break;\r\n    \r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.SHAPE_CYLINDER:\r\n                cb.write(props.halfHeight, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n                cb.write(props.radius, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n                cb.write(props.convexRadius, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n                break;\r\n    \r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.SHAPE_SPHERE:\r\n                cb.write(props.radius, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n                break;\r\n    \r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.SHAPE_STATIC_COMPOUND:\r\n                ok = ShapeComponent.addCompoundChildren(cb, props.entity);\r\n                break;\r\n    \r\n            // intentional fall-through\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.SHAPE_CONVEX_HULL:\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.SHAPE_MESH:\r\n                ShapeComponent.addMeshes(props.meshes, cb);\r\n                break;\r\n            \r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.SHAPE_HEIGHTFIELD:\r\n                cb.write(props.hfOffset, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n                cb.write(props.hfScale, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n                cb.write(props.hfSampleCount, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n                cb.write(props.hfBlockSize, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT8, false);\r\n                cb.write(props.hfBitsPerSample, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT8, false);\r\n                cb.write(props.hfActiveEdgeCosThresholdAngle, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n                cb.addBuffer(props.hfSamples.buffer);\r\n                break;\r\n    \r\n            default:\r\n                _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.warn('Unsupperted shape type', shape);\r\n                return false;\r\n        }\r\n    \r\n        const isCompoundChild = props.isCompoundChild;\r\n        cb.write(isCompoundChild, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_BOOL, false);\r\n        if (!isCompoundChild) {\r\n            cb.write(props.density, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        }\r\n    \r\n        const position = props.shapePosition;\r\n        const rotation = props.shapeRotation;\r\n        const massOffset = props.massOffset;\r\n        const hasPositionOffset = !position.equals(pc.Vec3.ZERO);\r\n        const hasRotationOffset = forceWriteRotation || !rotation.equals(pc.Vec3.ZERO);\r\n        const hasShapeOffset = hasPositionOffset || hasRotationOffset;\r\n        const hasMassOffset = !massOffset.equals(pc.Vec3.ZERO);\r\n\r\n        cb.write(hasShapeOffset, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_BOOL, false);\r\n        if (hasShapeOffset) {\r\n            quat.setFromEulerAngles(rotation);\r\n            cb.write(position, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n            cb.write(quat, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n        }\r\n\r\n        cb.write(hasMassOffset, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_BOOL, false);\r\n        if (hasMassOffset) {\r\n            cb.write(massOffset, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n        }\r\n\r\n        return ok;\r\n    }\r\n\r\n    static addCompoundChildren(cb, parent) {\r\n        const components = parent.findComponents('body');\r\n        const count = components.length;\r\n        const childrenCount = count - 1; // -1 to exclude the parent\r\n\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && childrenCount === 0) {\r\n            _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.warn('Trying to create a static (immutable) compound body without children shapes. Aborting.');\r\n            return false;\r\n        }\r\n\r\n        cb.write(childrenCount, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n\r\n        for (let i = 0; i < count; i++) {\r\n            const component = components[i];\r\n            if (component.entity === parent) {\r\n                continue;\r\n            }\r\n\r\n            const ok = ShapeComponent.writeShapeData(cb, component);\r\n            if (!ok) {\r\n                return false;\r\n            }\r\n\r\n            const entity = component.entity;\r\n            const pos = entity.getLocalPosition();\r\n            const rot = entity.getLocalRotation();\r\n\r\n            // Loss of precision for pos/rot (64 -> 32)\r\n            cb.write(pos, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n            cb.write(rot, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static addMeshes(meshes, cb) {\r\n        for (let i = 0; i < meshes.length; i++) {\r\n            const mesh = meshes[i];\r\n            const vb = mesh.vertexBuffer;\r\n            const ib = mesh.indexBuffer[0];\r\n            const format = vb.getFormat();\r\n\r\n            for (let i = 0; i < format.elements.length; i++) {\r\n                const element = format.elements[i];\r\n                if (element.name === pc.SEMANTIC_POSITION) {\r\n                    cb.write(mesh.primitive[0].base, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT8, false);\r\n                    cb.write(element.offset, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n                    cb.write(element.stride / _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.FLOAT32_SIZE, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT8, false);\r\n                    cb.addBuffer(vb.storage);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            cb.write(vb.numVertices, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n            cb.write(ib.numIndices, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n\r\n            // TODO\r\n            // workaround until this is fixed:\r\n            // https://github.com/playcanvas/engine/issues/5869\r\n            // buffer.addBuffer(ib.storage);\r\n\r\n            const storage = ib.storage;\r\n            const isView = ArrayBuffer.isView(storage);\r\n\r\n            let byteLength, byteOffset;\r\n            if (isView) {\r\n                // byteLength = storage.byteLength;\r\n                byteOffset = storage.byteOffset;\r\n            } else {\r\n                // byteLength = storage.byteLength / ib.bytesPerIndex;\r\n                byteOffset = storage.buffer.byteOffset;\r\n            }\r\n\r\n            // cb.write(byteLength, BUFFER_WRITE_UINT32, false);\r\n            cb.write(byteOffset, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n            cb.addBuffer(isView ? storage.buffer : storage);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/physics/components/jolt/component.mjs\n");

/***/ }),

/***/ "./src/physics/components/jolt/constants.mjs":
/*!***************************************************!*\
  !*** ./src/physics/components/jolt/constants.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BP_LAYER_MOVING: () => (/* binding */ BP_LAYER_MOVING),\n/* harmony export */   BP_LAYER_NON_MOVING: () => (/* binding */ BP_LAYER_NON_MOVING),\n/* harmony export */   BUFFER_READ_BOOL: () => (/* binding */ BUFFER_READ_BOOL),\n/* harmony export */   BUFFER_READ_FLOAT32: () => (/* binding */ BUFFER_READ_FLOAT32),\n/* harmony export */   BUFFER_READ_INT32: () => (/* binding */ BUFFER_READ_INT32),\n/* harmony export */   BUFFER_READ_UINT16: () => (/* binding */ BUFFER_READ_UINT16),\n/* harmony export */   BUFFER_READ_UINT32: () => (/* binding */ BUFFER_READ_UINT32),\n/* harmony export */   BUFFER_READ_UINT8: () => (/* binding */ BUFFER_READ_UINT8),\n/* harmony export */   BUFFER_WRITE_BOOL: () => (/* binding */ BUFFER_WRITE_BOOL),\n/* harmony export */   BUFFER_WRITE_FLOAT32: () => (/* binding */ BUFFER_WRITE_FLOAT32),\n/* harmony export */   BUFFER_WRITE_INT32: () => (/* binding */ BUFFER_WRITE_INT32),\n/* harmony export */   BUFFER_WRITE_JOLTVEC32: () => (/* binding */ BUFFER_WRITE_JOLTVEC32),\n/* harmony export */   BUFFER_WRITE_PLANE: () => (/* binding */ BUFFER_WRITE_PLANE),\n/* harmony export */   BUFFER_WRITE_UINT16: () => (/* binding */ BUFFER_WRITE_UINT16),\n/* harmony export */   BUFFER_WRITE_UINT32: () => (/* binding */ BUFFER_WRITE_UINT32),\n/* harmony export */   BUFFER_WRITE_UINT8: () => (/* binding */ BUFFER_WRITE_UINT8),\n/* harmony export */   BUFFER_WRITE_VEC32: () => (/* binding */ BUFFER_WRITE_VEC32),\n/* harmony export */   CMD_ADD_ANGULAR_IMPULSE: () => (/* binding */ CMD_ADD_ANGULAR_IMPULSE),\n/* harmony export */   CMD_ADD_FORCE: () => (/* binding */ CMD_ADD_FORCE),\n/* harmony export */   CMD_ADD_IMPULSE: () => (/* binding */ CMD_ADD_IMPULSE),\n/* harmony export */   CMD_ADD_TORQUE: () => (/* binding */ CMD_ADD_TORQUE),\n/* harmony export */   CMD_APPLY_BUOYANCY_IMPULSE: () => (/* binding */ CMD_APPLY_BUOYANCY_IMPULSE),\n/* harmony export */   CMD_CAST_RAY: () => (/* binding */ CMD_CAST_RAY),\n/* harmony export */   CMD_CAST_SHAPE: () => (/* binding */ CMD_CAST_SHAPE),\n/* harmony export */   CMD_CHANGE_GRAVITY: () => (/* binding */ CMD_CHANGE_GRAVITY),\n/* harmony export */   CMD_CHAR_SET_LIN_VEL: () => (/* binding */ CMD_CHAR_SET_LIN_VEL),\n/* harmony export */   CMD_CHAR_SET_SHAPE: () => (/* binding */ CMD_CHAR_SET_SHAPE),\n/* harmony export */   CMD_CREATE_BODY: () => (/* binding */ CMD_CREATE_BODY),\n/* harmony export */   CMD_CREATE_CHAR: () => (/* binding */ CMD_CREATE_CHAR),\n/* harmony export */   CMD_CREATE_CONSTRAINT: () => (/* binding */ CMD_CREATE_CONSTRAINT),\n/* harmony export */   CMD_CREATE_GROUPS: () => (/* binding */ CMD_CREATE_GROUPS),\n/* harmony export */   CMD_CREATE_SHAPE: () => (/* binding */ CMD_CREATE_SHAPE),\n/* harmony export */   CMD_CREATE_SOFT_BODY: () => (/* binding */ CMD_CREATE_SOFT_BODY),\n/* harmony export */   CMD_CREATE_VEHICLE: () => (/* binding */ CMD_CREATE_VEHICLE),\n/* harmony export */   CMD_DESTROY_BODY: () => (/* binding */ CMD_DESTROY_BODY),\n/* harmony export */   CMD_DESTROY_CONSTRAINT: () => (/* binding */ CMD_DESTROY_CONSTRAINT),\n/* harmony export */   CMD_DESTROY_SHAPE: () => (/* binding */ CMD_DESTROY_SHAPE),\n/* harmony export */   CMD_MOVE_BODY: () => (/* binding */ CMD_MOVE_BODY),\n/* harmony export */   CMD_MOVE_KINEMATIC: () => (/* binding */ CMD_MOVE_KINEMATIC),\n/* harmony export */   CMD_PAIR_BODY: () => (/* binding */ CMD_PAIR_BODY),\n/* harmony export */   CMD_REPORT_CONTACTS: () => (/* binding */ CMD_REPORT_CONTACTS),\n/* harmony export */   CMD_REPORT_SET_SHAPE: () => (/* binding */ CMD_REPORT_SET_SHAPE),\n/* harmony export */   CMD_RESET_VELOCITIES: () => (/* binding */ CMD_RESET_VELOCITIES),\n/* harmony export */   CMD_SET_ANG_VEL: () => (/* binding */ CMD_SET_ANG_VEL),\n/* harmony export */   CMD_SET_CONSTRAINT_ENABLED: () => (/* binding */ CMD_SET_CONSTRAINT_ENABLED),\n/* harmony export */   CMD_SET_DRIVER_INPUT: () => (/* binding */ CMD_SET_DRIVER_INPUT),\n/* harmony export */   CMD_SET_LIN_VEL: () => (/* binding */ CMD_SET_LIN_VEL),\n/* harmony export */   CMD_SET_MOTION_TYPE: () => (/* binding */ CMD_SET_MOTION_TYPE),\n/* harmony export */   CMD_SET_USER_DATA: () => (/* binding */ CMD_SET_USER_DATA),\n/* harmony export */   CMD_TOGGLE_GROUP_PAIR: () => (/* binding */ CMD_TOGGLE_GROUP_PAIR),\n/* harmony export */   CMD_UPDATE_TRANSFORMS: () => (/* binding */ CMD_UPDATE_TRANSFORMS),\n/* harmony export */   CMD_USE_MOTION_STATE: () => (/* binding */ CMD_USE_MOTION_STATE),\n/* harmony export */   COMPONENT_SYSTEM_BODY: () => (/* binding */ COMPONENT_SYSTEM_BODY),\n/* harmony export */   COMPONENT_SYSTEM_CHAR: () => (/* binding */ COMPONENT_SYSTEM_CHAR),\n/* harmony export */   COMPONENT_SYSTEM_MANAGER: () => (/* binding */ COMPONENT_SYSTEM_MANAGER),\n/* harmony export */   COMPONENT_SYSTEM_SOFT_BODY: () => (/* binding */ COMPONENT_SYSTEM_SOFT_BODY),\n/* harmony export */   COMPONENT_SYSTEM_VEHICLE: () => (/* binding */ COMPONENT_SYSTEM_VEHICLE),\n/* harmony export */   CONSTRAINT_SIX_DOF_ROTATION_X: () => (/* binding */ CONSTRAINT_SIX_DOF_ROTATION_X),\n/* harmony export */   CONSTRAINT_SIX_DOF_ROTATION_Y: () => (/* binding */ CONSTRAINT_SIX_DOF_ROTATION_Y),\n/* harmony export */   CONSTRAINT_SIX_DOF_ROTATION_Z: () => (/* binding */ CONSTRAINT_SIX_DOF_ROTATION_Z),\n/* harmony export */   CONSTRAINT_SIX_DOF_TRANSLATION_X: () => (/* binding */ CONSTRAINT_SIX_DOF_TRANSLATION_X),\n/* harmony export */   CONSTRAINT_SIX_DOF_TRANSLATION_Y: () => (/* binding */ CONSTRAINT_SIX_DOF_TRANSLATION_Y),\n/* harmony export */   CONSTRAINT_SIX_DOF_TRANSLATION_Z: () => (/* binding */ CONSTRAINT_SIX_DOF_TRANSLATION_Z),\n/* harmony export */   CONSTRAINT_SPACE_LOCAL: () => (/* binding */ CONSTRAINT_SPACE_LOCAL),\n/* harmony export */   CONSTRAINT_SPACE_WORLD: () => (/* binding */ CONSTRAINT_SPACE_WORLD),\n/* harmony export */   CONSTRAINT_TYPE_CONE: () => (/* binding */ CONSTRAINT_TYPE_CONE),\n/* harmony export */   CONSTRAINT_TYPE_DISTANCE: () => (/* binding */ CONSTRAINT_TYPE_DISTANCE),\n/* harmony export */   CONSTRAINT_TYPE_FIXED: () => (/* binding */ CONSTRAINT_TYPE_FIXED),\n/* harmony export */   CONSTRAINT_TYPE_HINGE: () => (/* binding */ CONSTRAINT_TYPE_HINGE),\n/* harmony export */   CONSTRAINT_TYPE_POINT: () => (/* binding */ CONSTRAINT_TYPE_POINT),\n/* harmony export */   CONSTRAINT_TYPE_SIX_DOF: () => (/* binding */ CONSTRAINT_TYPE_SIX_DOF),\n/* harmony export */   CONSTRAINT_TYPE_SLIDER: () => (/* binding */ CONSTRAINT_TYPE_SLIDER),\n/* harmony export */   CONSTRAINT_TYPE_SWING_TWIST: () => (/* binding */ CONSTRAINT_TYPE_SWING_TWIST),\n/* harmony export */   CONTACT_TYPE_ADDED: () => (/* binding */ CONTACT_TYPE_ADDED),\n/* harmony export */   CONTACT_TYPE_PERSISTED: () => (/* binding */ CONTACT_TYPE_PERSISTED),\n/* harmony export */   CONTACT_TYPE_REMOVED: () => (/* binding */ CONTACT_TYPE_REMOVED),\n/* harmony export */   FLOAT32_SIZE: () => (/* binding */ FLOAT32_SIZE),\n/* harmony export */   INT32_SIZE: () => (/* binding */ INT32_SIZE),\n/* harmony export */   OBJ_LAYER_MOVING: () => (/* binding */ OBJ_LAYER_MOVING),\n/* harmony export */   OBJ_LAYER_NON_MOVING: () => (/* binding */ OBJ_LAYER_NON_MOVING),\n/* harmony export */   OPERATOR_CLEANER: () => (/* binding */ OPERATOR_CLEANER),\n/* harmony export */   OPERATOR_CREATOR: () => (/* binding */ OPERATOR_CREATOR),\n/* harmony export */   OPERATOR_MODIFIER: () => (/* binding */ OPERATOR_MODIFIER),\n/* harmony export */   OPERATOR_QUERIER: () => (/* binding */ OPERATOR_QUERIER),\n/* harmony export */   SHAPE_BOX: () => (/* binding */ SHAPE_BOX),\n/* harmony export */   SHAPE_CAPSULE: () => (/* binding */ SHAPE_CAPSULE),\n/* harmony export */   SHAPE_CONVEX_HULL: () => (/* binding */ SHAPE_CONVEX_HULL),\n/* harmony export */   SHAPE_CYLINDER: () => (/* binding */ SHAPE_CYLINDER),\n/* harmony export */   SHAPE_HEIGHTFIELD: () => (/* binding */ SHAPE_HEIGHTFIELD),\n/* harmony export */   SHAPE_MESH: () => (/* binding */ SHAPE_MESH),\n/* harmony export */   SHAPE_SPHERE: () => (/* binding */ SHAPE_SPHERE),\n/* harmony export */   SHAPE_STATIC_COMPOUND: () => (/* binding */ SHAPE_STATIC_COMPOUND),\n/* harmony export */   SPRING_MODE_FREQUENCY: () => (/* binding */ SPRING_MODE_FREQUENCY),\n/* harmony export */   SPRING_MODE_STIFFNESS: () => (/* binding */ SPRING_MODE_STIFFNESS),\n/* harmony export */   UINT16_SIZE: () => (/* binding */ UINT16_SIZE),\n/* harmony export */   UINT32_SIZE: () => (/* binding */ UINT32_SIZE),\n/* harmony export */   UINT8_SIZE: () => (/* binding */ UINT8_SIZE),\n/* harmony export */   VEHICLE_CAST_TYPE_CYLINDER: () => (/* binding */ VEHICLE_CAST_TYPE_CYLINDER),\n/* harmony export */   VEHICLE_CAST_TYPE_RAY: () => (/* binding */ VEHICLE_CAST_TYPE_RAY),\n/* harmony export */   VEHICLE_CAST_TYPE_SPHERE: () => (/* binding */ VEHICLE_CAST_TYPE_SPHERE),\n/* harmony export */   VEHICLE_TYPE_MOTORCYCLE: () => (/* binding */ VEHICLE_TYPE_MOTORCYCLE),\n/* harmony export */   VEHICLE_TYPE_TRACK: () => (/* binding */ VEHICLE_TYPE_TRACK),\n/* harmony export */   VEHICLE_TYPE_WHEEL: () => (/* binding */ VEHICLE_TYPE_WHEEL)\n/* harmony export */ });\nconst OPERATOR_CREATOR = 0;\r\nconst OPERATOR_MODIFIER = 1;\r\nconst OPERATOR_QUERIER = 2;\r\nconst OPERATOR_CLEANER = 3;\r\n\r\nconst CONSTRAINT_TYPE_FIXED = 0;\r\nconst CONSTRAINT_TYPE_POINT = 1;\r\nconst CONSTRAINT_TYPE_DISTANCE = 2;\r\nconst CONSTRAINT_TYPE_HINGE = 3;\r\nconst CONSTRAINT_TYPE_SLIDER = 4;\r\nconst CONSTRAINT_TYPE_CONE = 5;\r\nconst CONSTRAINT_TYPE_SWING_TWIST = 6;\r\nconst CONSTRAINT_TYPE_SIX_DOF = 7;\r\n\r\nconst CONSTRAINT_SIX_DOF_TRANSLATION_X = 0;\r\nconst CONSTRAINT_SIX_DOF_TRANSLATION_Y = 1;\r\nconst CONSTRAINT_SIX_DOF_TRANSLATION_Z = 2;\r\nconst CONSTRAINT_SIX_DOF_ROTATION_X = 3;\r\nconst CONSTRAINT_SIX_DOF_ROTATION_Y = 4;\r\nconst CONSTRAINT_SIX_DOF_ROTATION_Z = 5;\r\n\r\nconst CONSTRAINT_SPACE_LOCAL = 0;\r\nconst CONSTRAINT_SPACE_WORLD = 1;\r\n\r\nconst SPRING_MODE_FREQUENCY = 0;\r\nconst SPRING_MODE_STIFFNESS = 1;\r\n\r\nconst VEHICLE_CAST_TYPE_RAY = 0;\r\nconst VEHICLE_CAST_TYPE_SPHERE = 1;\r\nconst VEHICLE_CAST_TYPE_CYLINDER = 2;\r\n\r\nconst OBJ_LAYER_NON_MOVING = 0;\r\nconst OBJ_LAYER_MOVING = 1;\r\n\r\nconst BP_LAYER_NON_MOVING = 0;\r\nconst BP_LAYER_MOVING = 1;\r\n\r\nconst SHAPE_BOX = 0;\r\nconst SHAPE_CAPSULE = 1;\r\nconst SHAPE_CYLINDER = 2;\r\nconst SHAPE_SPHERE = 3;\r\nconst SHAPE_MESH = 4;\r\nconst SHAPE_CONVEX_HULL = 5;\r\nconst SHAPE_STATIC_COMPOUND = 6;\r\nconst SHAPE_HEIGHTFIELD = 7;\r\n\r\nconst VEHICLE_TYPE_WHEEL = 0;\r\nconst VEHICLE_TYPE_TRACK = 1;\r\nconst VEHICLE_TYPE_MOTORCYCLE = 2;\r\n\r\nconst CONTACT_TYPE_ADDED = 0;\r\nconst CONTACT_TYPE_PERSISTED = 1;\r\nconst CONTACT_TYPE_REMOVED = 2;\r\n\r\nconst COMPONENT_SYSTEM_MANAGER = 0;\r\nconst COMPONENT_SYSTEM_BODY = 1;\r\nconst COMPONENT_SYSTEM_CHAR = 2;\r\nconst COMPONENT_SYSTEM_VEHICLE = 3;\r\nconst COMPONENT_SYSTEM_SOFT_BODY = 4;\r\n\r\nconst FLOAT32_SIZE = Float32Array.BYTES_PER_ELEMENT;\r\nconst INT32_SIZE = Int32Array.BYTES_PER_ELEMENT;\r\nconst UINT32_SIZE = Uint32Array.BYTES_PER_ELEMENT;\r\nconst UINT16_SIZE = Uint16Array.BYTES_PER_ELEMENT;\r\nconst UINT8_SIZE = Uint8Array.BYTES_PER_ELEMENT;\r\n\r\nconst BUFFER_WRITE_UINT8 = 'writeUint8';\r\nconst BUFFER_WRITE_UINT16 = 'writeUint16';\r\nconst BUFFER_WRITE_UINT32 = 'writeUint32';\r\nconst BUFFER_WRITE_INT32 = 'writeInt32';\r\nconst BUFFER_WRITE_VEC32 = 'writeVector32';\r\nconst BUFFER_WRITE_FLOAT32 = 'writeFloat32';\r\nconst BUFFER_WRITE_BOOL = 'writeBool';\r\nconst BUFFER_WRITE_PLANE = 'writePlane';\r\nconst BUFFER_WRITE_JOLTVEC32 = 'writeJoltVec32';\r\n\r\nconst BUFFER_READ_UINT8 = 'readUint8';\r\nconst BUFFER_READ_UINT16 = 'readUint16';\r\nconst BUFFER_READ_UINT32 = 'readUint32';\r\nconst BUFFER_READ_INT32 = 'readInt32';\r\nconst BUFFER_READ_FLOAT32 = 'readFloat32';\r\nconst BUFFER_READ_BOOL = 'readBool';\r\n\r\n\r\nlet i = 0;\r\n// frontend -> backend\r\nconst CMD_CREATE_BODY = i++;\r\nconst CMD_CREATE_CHAR = i++;\r\nconst CMD_CREATE_SHAPE = i++;\r\nconst CMD_CREATE_VEHICLE = i++;\r\nconst CMD_CREATE_SOFT_BODY = i++;\r\nconst CMD_ADD_FORCE = i++;\r\nconst CMD_ADD_IMPULSE = i++;\r\nconst CMD_APPLY_BUOYANCY_IMPULSE = i++;\r\nconst CMD_ADD_ANGULAR_IMPULSE = i++;\r\nconst CMD_ADD_TORQUE = i++;\r\nconst CMD_CAST_RAY = i++;\r\nconst CMD_CAST_SHAPE = i++;\r\nconst CMD_DESTROY_BODY = i++;\r\nconst CMD_DESTROY_SHAPE = i++;\r\nconst CMD_MOVE_BODY = i++;\r\nconst CMD_MOVE_KINEMATIC = i++;\r\nconst CMD_SET_LIN_VEL = i++;\r\nconst CMD_SET_ANG_VEL = i++;\r\nconst CMD_SET_MOTION_TYPE = i++;\r\nconst CMD_RESET_VELOCITIES = i++;\r\nconst CMD_TOGGLE_GROUP_PAIR = i++;\r\nconst CMD_CREATE_GROUPS = i++;\r\nconst CMD_CREATE_CONSTRAINT = i++;\r\nconst CMD_CHANGE_GRAVITY = i++;\r\nconst CMD_CHAR_SET_LIN_VEL = i++;\r\nconst CMD_CHAR_SET_SHAPE = i++;\r\nconst CMD_SET_USER_DATA = i++;\r\nconst CMD_USE_MOTION_STATE = i++;\r\nconst CMD_SET_CONSTRAINT_ENABLED = i++;\r\nconst CMD_DESTROY_CONSTRAINT = i++;\r\nconst CMD_SET_DRIVER_INPUT = i++;\r\nconst CMD_PAIR_BODY = i++;\r\n// backend -> frontend\r\nconst CMD_UPDATE_TRANSFORMS = i++;\r\nconst CMD_REPORT_CONTACTS = i++;\r\nconst CMD_REPORT_SET_SHAPE = i++;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGh5c2ljcy9jb21wb25lbnRzL2pvbHQvY29uc3RhbnRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQU87QUFDQTtBQUNBO0FBQ0E7QUFDUDtBQUNPO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDUDtBQUNPO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNQO0FBQ087QUFDQTtBQUNQO0FBQ087QUFDQTtBQUNQO0FBQ087QUFDQTtBQUNBO0FBQ1A7QUFDTztBQUNBO0FBQ1A7QUFDTztBQUNBO0FBQ1A7QUFDTztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ1A7QUFDTztBQUNBO0FBQ0E7QUFDUDtBQUNPO0FBQ0E7QUFDQTtBQUNQO0FBQ087QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNQO0FBQ087QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNQO0FBQ087QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ1A7QUFDTztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDUDtBQUNPO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL1BoeXNpY3NDb21wb25lbnRzLy4vc3JjL3BoeXNpY3MvY29tcG9uZW50cy9qb2x0L2NvbnN0YW50cy5tanM/MDExZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgT1BFUkFUT1JfQ1JFQVRPUiA9IDA7XHJcbmV4cG9ydCBjb25zdCBPUEVSQVRPUl9NT0RJRklFUiA9IDE7XHJcbmV4cG9ydCBjb25zdCBPUEVSQVRPUl9RVUVSSUVSID0gMjtcclxuZXhwb3J0IGNvbnN0IE9QRVJBVE9SX0NMRUFORVIgPSAzO1xyXG5cclxuZXhwb3J0IGNvbnN0IENPTlNUUkFJTlRfVFlQRV9GSVhFRCA9IDA7XHJcbmV4cG9ydCBjb25zdCBDT05TVFJBSU5UX1RZUEVfUE9JTlQgPSAxO1xyXG5leHBvcnQgY29uc3QgQ09OU1RSQUlOVF9UWVBFX0RJU1RBTkNFID0gMjtcclxuZXhwb3J0IGNvbnN0IENPTlNUUkFJTlRfVFlQRV9ISU5HRSA9IDM7XHJcbmV4cG9ydCBjb25zdCBDT05TVFJBSU5UX1RZUEVfU0xJREVSID0gNDtcclxuZXhwb3J0IGNvbnN0IENPTlNUUkFJTlRfVFlQRV9DT05FID0gNTtcclxuZXhwb3J0IGNvbnN0IENPTlNUUkFJTlRfVFlQRV9TV0lOR19UV0lTVCA9IDY7XHJcbmV4cG9ydCBjb25zdCBDT05TVFJBSU5UX1RZUEVfU0lYX0RPRiA9IDc7XHJcblxyXG5leHBvcnQgY29uc3QgQ09OU1RSQUlOVF9TSVhfRE9GX1RSQU5TTEFUSU9OX1ggPSAwO1xyXG5leHBvcnQgY29uc3QgQ09OU1RSQUlOVF9TSVhfRE9GX1RSQU5TTEFUSU9OX1kgPSAxO1xyXG5leHBvcnQgY29uc3QgQ09OU1RSQUlOVF9TSVhfRE9GX1RSQU5TTEFUSU9OX1ogPSAyO1xyXG5leHBvcnQgY29uc3QgQ09OU1RSQUlOVF9TSVhfRE9GX1JPVEFUSU9OX1ggPSAzO1xyXG5leHBvcnQgY29uc3QgQ09OU1RSQUlOVF9TSVhfRE9GX1JPVEFUSU9OX1kgPSA0O1xyXG5leHBvcnQgY29uc3QgQ09OU1RSQUlOVF9TSVhfRE9GX1JPVEFUSU9OX1ogPSA1O1xyXG5cclxuZXhwb3J0IGNvbnN0IENPTlNUUkFJTlRfU1BBQ0VfTE9DQUwgPSAwO1xyXG5leHBvcnQgY29uc3QgQ09OU1RSQUlOVF9TUEFDRV9XT1JMRCA9IDE7XHJcblxyXG5leHBvcnQgY29uc3QgU1BSSU5HX01PREVfRlJFUVVFTkNZID0gMDtcclxuZXhwb3J0IGNvbnN0IFNQUklOR19NT0RFX1NUSUZGTkVTUyA9IDE7XHJcblxyXG5leHBvcnQgY29uc3QgVkVISUNMRV9DQVNUX1RZUEVfUkFZID0gMDtcclxuZXhwb3J0IGNvbnN0IFZFSElDTEVfQ0FTVF9UWVBFX1NQSEVSRSA9IDE7XHJcbmV4cG9ydCBjb25zdCBWRUhJQ0xFX0NBU1RfVFlQRV9DWUxJTkRFUiA9IDI7XHJcblxyXG5leHBvcnQgY29uc3QgT0JKX0xBWUVSX05PTl9NT1ZJTkcgPSAwO1xyXG5leHBvcnQgY29uc3QgT0JKX0xBWUVSX01PVklORyA9IDE7XHJcblxyXG5leHBvcnQgY29uc3QgQlBfTEFZRVJfTk9OX01PVklORyA9IDA7XHJcbmV4cG9ydCBjb25zdCBCUF9MQVlFUl9NT1ZJTkcgPSAxO1xyXG5cclxuZXhwb3J0IGNvbnN0IFNIQVBFX0JPWCA9IDA7XHJcbmV4cG9ydCBjb25zdCBTSEFQRV9DQVBTVUxFID0gMTtcclxuZXhwb3J0IGNvbnN0IFNIQVBFX0NZTElOREVSID0gMjtcclxuZXhwb3J0IGNvbnN0IFNIQVBFX1NQSEVSRSA9IDM7XHJcbmV4cG9ydCBjb25zdCBTSEFQRV9NRVNIID0gNDtcclxuZXhwb3J0IGNvbnN0IFNIQVBFX0NPTlZFWF9IVUxMID0gNTtcclxuZXhwb3J0IGNvbnN0IFNIQVBFX1NUQVRJQ19DT01QT1VORCA9IDY7XHJcbmV4cG9ydCBjb25zdCBTSEFQRV9IRUlHSFRGSUVMRCA9IDc7XHJcblxyXG5leHBvcnQgY29uc3QgVkVISUNMRV9UWVBFX1dIRUVMID0gMDtcclxuZXhwb3J0IGNvbnN0IFZFSElDTEVfVFlQRV9UUkFDSyA9IDE7XHJcbmV4cG9ydCBjb25zdCBWRUhJQ0xFX1RZUEVfTU9UT1JDWUNMRSA9IDI7XHJcblxyXG5leHBvcnQgY29uc3QgQ09OVEFDVF9UWVBFX0FEREVEID0gMDtcclxuZXhwb3J0IGNvbnN0IENPTlRBQ1RfVFlQRV9QRVJTSVNURUQgPSAxO1xyXG5leHBvcnQgY29uc3QgQ09OVEFDVF9UWVBFX1JFTU9WRUQgPSAyO1xyXG5cclxuZXhwb3J0IGNvbnN0IENPTVBPTkVOVF9TWVNURU1fTUFOQUdFUiA9IDA7XHJcbmV4cG9ydCBjb25zdCBDT01QT05FTlRfU1lTVEVNX0JPRFkgPSAxO1xyXG5leHBvcnQgY29uc3QgQ09NUE9ORU5UX1NZU1RFTV9DSEFSID0gMjtcclxuZXhwb3J0IGNvbnN0IENPTVBPTkVOVF9TWVNURU1fVkVISUNMRSA9IDM7XHJcbmV4cG9ydCBjb25zdCBDT01QT05FTlRfU1lTVEVNX1NPRlRfQk9EWSA9IDQ7XHJcblxyXG5leHBvcnQgY29uc3QgRkxPQVQzMl9TSVpFID0gRmxvYXQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UO1xyXG5leHBvcnQgY29uc3QgSU5UMzJfU0laRSA9IEludDMyQXJyYXkuQllURVNfUEVSX0VMRU1FTlQ7XHJcbmV4cG9ydCBjb25zdCBVSU5UMzJfU0laRSA9IFVpbnQzMkFycmF5LkJZVEVTX1BFUl9FTEVNRU5UO1xyXG5leHBvcnQgY29uc3QgVUlOVDE2X1NJWkUgPSBVaW50MTZBcnJheS5CWVRFU19QRVJfRUxFTUVOVDtcclxuZXhwb3J0IGNvbnN0IFVJTlQ4X1NJWkUgPSBVaW50OEFycmF5LkJZVEVTX1BFUl9FTEVNRU5UO1xyXG5cclxuZXhwb3J0IGNvbnN0IEJVRkZFUl9XUklURV9VSU5UOCA9ICd3cml0ZVVpbnQ4JztcclxuZXhwb3J0IGNvbnN0IEJVRkZFUl9XUklURV9VSU5UMTYgPSAnd3JpdGVVaW50MTYnO1xyXG5leHBvcnQgY29uc3QgQlVGRkVSX1dSSVRFX1VJTlQzMiA9ICd3cml0ZVVpbnQzMic7XHJcbmV4cG9ydCBjb25zdCBCVUZGRVJfV1JJVEVfSU5UMzIgPSAnd3JpdGVJbnQzMic7XHJcbmV4cG9ydCBjb25zdCBCVUZGRVJfV1JJVEVfVkVDMzIgPSAnd3JpdGVWZWN0b3IzMic7XHJcbmV4cG9ydCBjb25zdCBCVUZGRVJfV1JJVEVfRkxPQVQzMiA9ICd3cml0ZUZsb2F0MzInO1xyXG5leHBvcnQgY29uc3QgQlVGRkVSX1dSSVRFX0JPT0wgPSAnd3JpdGVCb29sJztcclxuZXhwb3J0IGNvbnN0IEJVRkZFUl9XUklURV9QTEFORSA9ICd3cml0ZVBsYW5lJztcclxuZXhwb3J0IGNvbnN0IEJVRkZFUl9XUklURV9KT0xUVkVDMzIgPSAnd3JpdGVKb2x0VmVjMzInO1xyXG5cclxuZXhwb3J0IGNvbnN0IEJVRkZFUl9SRUFEX1VJTlQ4ID0gJ3JlYWRVaW50OCc7XHJcbmV4cG9ydCBjb25zdCBCVUZGRVJfUkVBRF9VSU5UMTYgPSAncmVhZFVpbnQxNic7XHJcbmV4cG9ydCBjb25zdCBCVUZGRVJfUkVBRF9VSU5UMzIgPSAncmVhZFVpbnQzMic7XHJcbmV4cG9ydCBjb25zdCBCVUZGRVJfUkVBRF9JTlQzMiA9ICdyZWFkSW50MzInO1xyXG5leHBvcnQgY29uc3QgQlVGRkVSX1JFQURfRkxPQVQzMiA9ICdyZWFkRmxvYXQzMic7XHJcbmV4cG9ydCBjb25zdCBCVUZGRVJfUkVBRF9CT09MID0gJ3JlYWRCb29sJztcclxuXHJcblxyXG5sZXQgaSA9IDA7XHJcbi8vIGZyb250ZW5kIC0+IGJhY2tlbmRcclxuZXhwb3J0IGNvbnN0IENNRF9DUkVBVEVfQk9EWSA9IGkrKztcclxuZXhwb3J0IGNvbnN0IENNRF9DUkVBVEVfQ0hBUiA9IGkrKztcclxuZXhwb3J0IGNvbnN0IENNRF9DUkVBVEVfU0hBUEUgPSBpKys7XHJcbmV4cG9ydCBjb25zdCBDTURfQ1JFQVRFX1ZFSElDTEUgPSBpKys7XHJcbmV4cG9ydCBjb25zdCBDTURfQ1JFQVRFX1NPRlRfQk9EWSA9IGkrKztcclxuZXhwb3J0IGNvbnN0IENNRF9BRERfRk9SQ0UgPSBpKys7XHJcbmV4cG9ydCBjb25zdCBDTURfQUREX0lNUFVMU0UgPSBpKys7XHJcbmV4cG9ydCBjb25zdCBDTURfQVBQTFlfQlVPWUFOQ1lfSU1QVUxTRSA9IGkrKztcclxuZXhwb3J0IGNvbnN0IENNRF9BRERfQU5HVUxBUl9JTVBVTFNFID0gaSsrO1xyXG5leHBvcnQgY29uc3QgQ01EX0FERF9UT1JRVUUgPSBpKys7XHJcbmV4cG9ydCBjb25zdCBDTURfQ0FTVF9SQVkgPSBpKys7XHJcbmV4cG9ydCBjb25zdCBDTURfQ0FTVF9TSEFQRSA9IGkrKztcclxuZXhwb3J0IGNvbnN0IENNRF9ERVNUUk9ZX0JPRFkgPSBpKys7XHJcbmV4cG9ydCBjb25zdCBDTURfREVTVFJPWV9TSEFQRSA9IGkrKztcclxuZXhwb3J0IGNvbnN0IENNRF9NT1ZFX0JPRFkgPSBpKys7XHJcbmV4cG9ydCBjb25zdCBDTURfTU9WRV9LSU5FTUFUSUMgPSBpKys7XHJcbmV4cG9ydCBjb25zdCBDTURfU0VUX0xJTl9WRUwgPSBpKys7XHJcbmV4cG9ydCBjb25zdCBDTURfU0VUX0FOR19WRUwgPSBpKys7XHJcbmV4cG9ydCBjb25zdCBDTURfU0VUX01PVElPTl9UWVBFID0gaSsrO1xyXG5leHBvcnQgY29uc3QgQ01EX1JFU0VUX1ZFTE9DSVRJRVMgPSBpKys7XHJcbmV4cG9ydCBjb25zdCBDTURfVE9HR0xFX0dST1VQX1BBSVIgPSBpKys7XHJcbmV4cG9ydCBjb25zdCBDTURfQ1JFQVRFX0dST1VQUyA9IGkrKztcclxuZXhwb3J0IGNvbnN0IENNRF9DUkVBVEVfQ09OU1RSQUlOVCA9IGkrKztcclxuZXhwb3J0IGNvbnN0IENNRF9DSEFOR0VfR1JBVklUWSA9IGkrKztcclxuZXhwb3J0IGNvbnN0IENNRF9DSEFSX1NFVF9MSU5fVkVMID0gaSsrO1xyXG5leHBvcnQgY29uc3QgQ01EX0NIQVJfU0VUX1NIQVBFID0gaSsrO1xyXG5leHBvcnQgY29uc3QgQ01EX1NFVF9VU0VSX0RBVEEgPSBpKys7XHJcbmV4cG9ydCBjb25zdCBDTURfVVNFX01PVElPTl9TVEFURSA9IGkrKztcclxuZXhwb3J0IGNvbnN0IENNRF9TRVRfQ09OU1RSQUlOVF9FTkFCTEVEID0gaSsrO1xyXG5leHBvcnQgY29uc3QgQ01EX0RFU1RST1lfQ09OU1RSQUlOVCA9IGkrKztcclxuZXhwb3J0IGNvbnN0IENNRF9TRVRfRFJJVkVSX0lOUFVUID0gaSsrO1xyXG5leHBvcnQgY29uc3QgQ01EX1BBSVJfQk9EWSA9IGkrKztcclxuLy8gYmFja2VuZCAtPiBmcm9udGVuZFxyXG5leHBvcnQgY29uc3QgQ01EX1VQREFURV9UUkFOU0ZPUk1TID0gaSsrO1xyXG5leHBvcnQgY29uc3QgQ01EX1JFUE9SVF9DT05UQUNUUyA9IGkrKztcclxuZXhwb3J0IGNvbnN0IENNRF9SRVBPUlRfU0VUX1NIQVBFID0gaSsrO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/physics/components/jolt/constants.mjs\n");

/***/ }),

/***/ "./src/physics/components/jolt/manager.mjs":
/*!*************************************************!*\
  !*** ./src/physics/components/jolt/manager.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JoltManager: () => (/* binding */ JoltManager)\n/* harmony export */ });\n/* harmony import */ var _debug_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../debug.mjs */ \"./src/physics/debug.mjs\");\n/* harmony import */ var _indexed_cache_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../indexed-cache.mjs */ \"./src/physics/indexed-cache.mjs\");\n/* harmony import */ var _manager_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../manager.mjs */ \"./src/physics/manager.mjs\");\n/* harmony import */ var _body_system_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./body/system.mjs */ \"./src/physics/components/jolt/body/system.mjs\");\n/* harmony import */ var _char_system_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./char/system.mjs */ \"./src/physics/components/jolt/char/system.mjs\");\n/* harmony import */ var _component_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./component.mjs */ \"./src/physics/components/jolt/component.mjs\");\n/* harmony import */ var _constants_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n/* harmony import */ var _response_handler_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./response-handler.mjs */ \"./src/physics/components/jolt/response-handler.mjs\");\n/* harmony import */ var _softbody_system_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./softbody/system.mjs */ \"./src/physics/components/jolt/softbody/system.mjs\");\n/* harmony import */ var _system_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./system.mjs */ \"./src/physics/components/jolt/system.mjs\");\n/* harmony import */ var _vehicle_system_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./vehicle/system.mjs */ \"./src/physics/components/jolt/vehicle/system.mjs\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass JoltManager extends _manager_mjs__WEBPACK_IMPORTED_MODULE_2__.PhysicsManager {\r\n    constructor(app, opts, resolve) {\r\n        super(app, 'jolt', opts);\r\n\r\n        // TODO\r\n        // component systems will use Jolt constants, which\r\n        // are not available until webworker responds with them.\r\n\r\n        app.systems.add(new _body_system_mjs__WEBPACK_IMPORTED_MODULE_3__.BodyComponentSystem(app, this, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.COMPONENT_SYSTEM_BODY));\r\n        app.systems.add(new _char_system_mjs__WEBPACK_IMPORTED_MODULE_4__.CharComponentSystem(app, this, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.COMPONENT_SYSTEM_CHAR));\r\n        app.systems.add(new _vehicle_system_mjs__WEBPACK_IMPORTED_MODULE_10__.VehicleComponentSystem(app, this, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.COMPONENT_SYSTEM_VEHICLE));\r\n        app.systems.add(new _softbody_system_mjs__WEBPACK_IMPORTED_MODULE_8__.SoftBodyComponentSystem(app, this, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.COMPONENT_SYSTEM_SOFT_BODY));\r\n\r\n        this._queryMap = new _indexed_cache_mjs__WEBPACK_IMPORTED_MODULE_1__.IndexedCache();\r\n        this._constraintMap = new _indexed_cache_mjs__WEBPACK_IMPORTED_MODULE_1__.IndexedCache();\r\n        this._shapeMap = new _indexed_cache_mjs__WEBPACK_IMPORTED_MODULE_1__.IndexedCache();\r\n        this._gravity = new pc.Vec3(0, -9.81, 0);\r\n\r\n        this._resolve = resolve;\r\n\r\n        this._systems.set(_constants_mjs__WEBPACK_IMPORTED_MODULE_6__.COMPONENT_SYSTEM_MANAGER, this);\r\n    }\r\n\r\n    set gravity(gravity) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            const ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkVec(gravity, `Invalid gravity vector`, gravity);\r\n            if (!ok)\r\n                return;\r\n        }\r\n\r\n        if (!this._gravity.equals(gravity)) {\r\n            this._gravity.copy(gravity);\r\n\r\n            const cb = this._outBuffer;\r\n\r\n            cb.writeOperator(_constants_mjs__WEBPACK_IMPORTED_MODULE_6__.OPERATOR_MODIFIER);\r\n            cb.writeCommand(_constants_mjs__WEBPACK_IMPORTED_MODULE_6__.CMD_CHANGE_GRAVITY);\r\n            cb.write(gravity, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32, false);\r\n        }\r\n    }\r\n\r\n    get gravity() {\r\n        return this._gravity;\r\n    }\r\n\r\n    get queryMap() {\r\n        return this._queryMap;\r\n    }\r\n\r\n    onMessage(msg) {\r\n        const data = msg.data || msg;\r\n\r\n        super.onMessage(data);\r\n\r\n        if (data.constants) {\r\n            this._resolve();\r\n        }\r\n\r\n        if (data.drawViews) {\r\n            _system_mjs__WEBPACK_IMPORTED_MODULE_9__.ShapeComponentSystem.debugDraw(this._app, data.drawViews, this._config);\r\n        }\r\n    }\r\n\r\n    processCommands(cb) {\r\n        const command = cb.readCommand();\r\n\r\n        switch (command) {\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.CMD_CAST_RAY:\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.CMD_CAST_SHAPE:\r\n                _response_handler_mjs__WEBPACK_IMPORTED_MODULE_7__.ResponseHandler.handleQuery(cb, this._queryMap);\r\n                break;\r\n        }\r\n    }    \r\n\r\n    createShape(type, options = {}) {\r\n        const cb = this._outBuffer;\r\n\r\n        const opts = {\r\n            // defaults\r\n            density: 1000,\r\n            shapePosition: new pc.Vec3(),\r\n            shapeRotation: new pc.Vec3(),\r\n            scale: new pc.Vec3(1, 1, 1),\r\n            halfExtent: new pc.Vec3(0.5, 0.5, 0.5),\r\n            convexRadius: 0.05,\r\n            halfHeight: 0.5,\r\n            radius: 0.5,\r\n\r\n            // user overrides\r\n            ...options,\r\n\r\n            // hard rules\r\n            shape: type,\r\n            useEntityScale: false,\r\n            isCompoundChild: false,\r\n            massOffset: pc.Vec3.ZERO\r\n        };\r\n\r\n        const index = this._shapeMap.add(opts);\r\n\r\n        cb.writeOperator(_constants_mjs__WEBPACK_IMPORTED_MODULE_6__.OPERATOR_CREATOR);\r\n        cb.writeCommand(_constants_mjs__WEBPACK_IMPORTED_MODULE_6__.CMD_CREATE_SHAPE);\r\n        cb.write(index, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT32, false);\r\n\r\n        _component_mjs__WEBPACK_IMPORTED_MODULE_5__.ShapeComponent.writeShapeData(cb, opts, true /* force write rotation */);\r\n\r\n        return index;\r\n    }\r\n\r\n    destroyShape(index) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            const ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkUint(index, `Invalid shape number: ${ num }`);\r\n            if (!ok)\r\n                return;\r\n        }\r\n\r\n        const cb = this._outBuffer;\r\n\r\n        cb.writeOperator(_constants_mjs__WEBPACK_IMPORTED_MODULE_6__.OPERATOR_CLEANER);\r\n        cb.writeCommand(_constants_mjs__WEBPACK_IMPORTED_MODULE_6__.CMD_DESTROY_SHAPE);\r\n        cb.write(index, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT32, false);\r\n\r\n        this._shapeMap.free(index);\r\n    }    \r\n\r\n    createFilterGroups(groups) {\r\n        const cb = this._outBuffer;\r\n        const groupsCount = groups.length;\r\n\r\n        cb.writeOperator(_constants_mjs__WEBPACK_IMPORTED_MODULE_6__.OPERATOR_CREATOR);\r\n        cb.writeCommand(_constants_mjs__WEBPACK_IMPORTED_MODULE_6__.CMD_CREATE_GROUPS);\r\n        cb.write(groupsCount, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT32, false);\r\n\r\n        for (let i = 0; i < groupsCount; i++) {\r\n            // sub groups count\r\n            cb.write(groups[i], _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT32, false);\r\n        }\r\n    }\r\n\r\n    toggleGroupPair(group, subGroup1, subGroup2, enable) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            let ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkUint(group, `Invalid group 1: ${ group }`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkUint(subGroup1, `Invalid group 1: ${ subGroup1 }`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkUint(subGroup2, `Invalid group 2: ${ subGroup2 }`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkBool(enable, `Invalid toggle flag: ${ enable }`);\r\n            if (!ok)\r\n                return;\r\n        }\r\n\r\n        const cb = this._outBuffer;\r\n\r\n        cb.writeOperator(_constants_mjs__WEBPACK_IMPORTED_MODULE_6__.OPERATOR_MODIFIER);\r\n        cb.writeCommand(_constants_mjs__WEBPACK_IMPORTED_MODULE_6__.CMD_TOGGLE_GROUP_PAIR);\r\n        cb.write(enable, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_BOOL, false);\r\n        cb.write(group, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT16, false);\r\n        cb.write(subGroup1, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT16, false);\r\n        cb.write(subGroup2, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT16, false);\r\n    }    \r\n\r\n    castRay(origin, dir, callback, opts) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            let ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkVec(origin,`Invalid origin vector`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkVec(dir, `Invalid direction vector`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.assert(callback, 'castRay requires a callback function castRay(origin, dir, callback, opts)');\r\n            if (ok && opts?.firstOnly != null) ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkBool(opts.firstOnly);\r\n            if (ok && opts?.calculateNormal != null) ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkBool(opts.calculateNormal);\r\n            if (ok && opts?.ignoreBackFaces != null) ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkBool(opts.ignoreBackFaces);\r\n            if (ok && opts?.treatConvexAsSolid != null) ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkBool(opts.treatConvexAsSolid);\r\n            if (!ok)\r\n                return;\r\n        }\r\n\r\n        const cb = this._outBuffer;\r\n        const callbackIndex = this._queryMap.add(callback);\r\n\r\n        // TODO\r\n        // get rid of flags\r\n\r\n        cb.writeOperator(_constants_mjs__WEBPACK_IMPORTED_MODULE_6__.OPERATOR_QUERIER);\r\n        cb.writeCommand(_constants_mjs__WEBPACK_IMPORTED_MODULE_6__.CMD_CAST_RAY);\r\n        cb.write(callbackIndex, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT32, false);\r\n        cb.write(origin, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32, false);\r\n        cb.write(dir, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32, false);\r\n        cb.write(opts?.firstOnly, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_BOOL);\r\n        cb.write(opts?.calculateNormal, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_BOOL);\r\n        cb.write(opts?.ignoreBackFaces, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_BOOL);\r\n        cb.write(opts?.treatConvexAsSolid, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_BOOL);\r\n        cb.write(opts?.bpFilterLayer, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT32);\r\n        cb.write(opts?.objFilterLayer, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT32);\r\n    }\r\n\r\n    castShape(shapeIndex, pos, rot, dir, callback, opts) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            let ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkInt(shapeIndex, `Invalid shape index`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkVec(pos, `Invalid cast shape position vector`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkVec(dir, `Invalid cast shape direction vector`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkQuat(rot, `Invalid cast shape rotation`);\r\n            if (!ok)\r\n                return;\r\n        }\r\n\r\n        const cb = this._outBuffer;\r\n        const queryIndex = this._queryMap.add(callback);\r\n\r\n        // TODO\r\n        // get rid of flags\r\n\r\n        cb.writeOperator(_constants_mjs__WEBPACK_IMPORTED_MODULE_6__.OPERATOR_QUERIER);\r\n        cb.writeCommand(_constants_mjs__WEBPACK_IMPORTED_MODULE_6__.CMD_CAST_SHAPE);\r\n        cb.write(queryIndex, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT32, false);\r\n        cb.write(pos, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32, false);\r\n        cb.write(rot, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32, false);\r\n        cb.write(dir, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32, false);\r\n        cb.write(opts?.scale, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts?.offset, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts?.backFaceModeTriangles, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT8);\r\n        cb.write(opts?.backFaceModeConvex, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT8);\r\n        cb.write(opts?.useShrunkenShapeAndConvexRadius, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_BOOL);\r\n        cb.write(opts?.returnDeepestPoint, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_BOOL);\r\n        // TODO\r\n        // separate a cast into [single result / multiple results] commands\r\n        // so we don't allocate new array for a single result query\r\n        // after we get back from the backend\r\n        cb.write(opts?.firstOnly, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_BOOL);\r\n        cb.write(opts?.calculateNormal, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_BOOL);\r\n        cb.write(shapeIndex, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT32, false);\r\n        cb.write(opts?.bpFilterLayer, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT32);\r\n        cb.write(opts?.objFilterLayer, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT32);\r\n    }\r\n\r\n    createConstraint(type, entity1, entity2, opts = {}) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            let ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.assert(!!entity1.c.body, `Entity has no Body Component. Cannot create constraint.`, entity1);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.assert(!!entity2.c.body, `Entity has no Body Component. Cannot create constraint.`, entity2);\r\n            if (!ok) return;\r\n        }\r\n\r\n        const cb = this._outBuffer;\r\n        const index = this._constraintMap.add({ entity1, entity2 });\r\n\r\n        entity1.body.constraints.set(index, entity2);\r\n        entity2.body.constraints.set(index, entity1);\r\n\r\n        cb.writeOperator(_constants_mjs__WEBPACK_IMPORTED_MODULE_6__.OPERATOR_CREATOR);\r\n        cb.writeCommand(_constants_mjs__WEBPACK_IMPORTED_MODULE_6__.CMD_CREATE_CONSTRAINT);\r\n        cb.write(type, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT8, false);\r\n\r\n        cb.write(index, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT32, false);\r\n        cb.write(entity1.c.body.index, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT32, false);\r\n        cb.write(entity2.c.body.index, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT32, false);\r\n\r\n        switch (type) {\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.CONSTRAINT_TYPE_FIXED:\r\n                JoltManager.writeFixedConstraint(cb, opts);\r\n                break;\r\n\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.CONSTRAINT_TYPE_POINT:\r\n                JoltManager.writePointConstraint(cb, opts);\r\n                break;\r\n\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.CONSTRAINT_TYPE_DISTANCE:\r\n                JoltManager.writeDistanceConstraint(cb, opts);\r\n                break;\r\n\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.CONSTRAINT_TYPE_HINGE:\r\n                JoltManager.writeHingeConstraint(cb, opts);\r\n                break;\r\n\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.CONSTRAINT_TYPE_SLIDER:\r\n                JoltManager.writeSliderConstraint(cb, opts);\r\n                break;\r\n\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.CONSTRAINT_TYPE_CONE:\r\n                JoltManager.writeConeConstraint(cb, opts);\r\n                break;\r\n\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.CONSTRAINT_TYPE_SWING_TWIST:\r\n                JoltManager.writeSwingTwistConstraint(cb, opts);\r\n                break;\r\n\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.CONSTRAINT_TYPE_SIX_DOF:\r\n                JoltManager.writeSixDofConstraint(cb, opts);\r\n                break;\r\n\r\n            default:\r\n                _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.error(`Unrecognized constraint type: ${ type }`);\r\n                return;\r\n        }\r\n\r\n        cb.write(opts.numVelocityStepsOverride, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT8);\r\n        cb.write(opts.numPositionStepsOverride, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT8);\r\n        cb.write(opts.space, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT8);\r\n\r\n        return index;\r\n    }\r\n\r\n    destroyConstraint(index) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            const ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkUint(index, `Invalid index of a constraint trying to destroy: ${ index }`);\r\n            if (!ok)\r\n                return;\r\n        }\r\n\r\n        const cb = this._outBuffer;\r\n\r\n        cb.writeOperator(_constants_mjs__WEBPACK_IMPORTED_MODULE_6__.OPERATOR_CLEANER);\r\n        cb.writeCommand(_constants_mjs__WEBPACK_IMPORTED_MODULE_6__.CMD_DESTROY_CONSTRAINT);\r\n        cb.write(index, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT32, false);\r\n\r\n        this.freeConstraintIndex(index);\r\n    }\r\n\r\n    freeConstraintIndex(index) {\r\n        this._constraintMap.free(index);\r\n    }\r\n\r\n    setConstraintEnabled(index, enabled, activate = true) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            let ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkUint(index, `Invalid constraint index: ${ index }`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkBool(enabled, `Invalid constraint enable bool: ${ enabled }`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkBool(enabled, `Invalid activate bool: ${ enabled }`);\r\n            if (!ok)\r\n                return;\r\n        }\r\n\r\n        const cb = this._outBuffer;\r\n\r\n        cb.writeOperator(_constants_mjs__WEBPACK_IMPORTED_MODULE_6__.OPERATOR_MODIFIER);\r\n        cb.writeCommand(_constants_mjs__WEBPACK_IMPORTED_MODULE_6__.CMD_SET_CONSTRAINT_ENABLED);\r\n        cb.write(index, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT32, false);\r\n        cb.write(enabled, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_BOOL, false);\r\n        cb.write(activate, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_BOOL, false);\r\n    }\r\n\r\n    // https://jrouwe.github.io/JoltPhysics/class_fixed_constraint_settings.html\r\n    static writeFixedConstraint(cb, opts) {\r\n        cb.write(opts.autoDetectPoint, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_BOOL);\r\n        if (!opts.autoDetectPoint) {\r\n            cb.write(opts.point1, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n            cb.write(opts.point2, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        }\r\n        cb.write(opts.axisX1, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.axisY1, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.axisX2, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.axisY2, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n    }\r\n\r\n    // https://jrouwe.github.io/JoltPhysics/class_point_constraint_settings.html\r\n    static writePointConstraint(cb, opts) {\r\n        cb.write(opts.point1, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.point2, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n    }\r\n\r\n    // https://jrouwe.github.io/JoltPhysics/class_distance_constraint_settings.html\r\n    static writeDistanceConstraint(cb, opts) {\r\n        cb.write(opts.point1, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.point2, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.minDistance, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n        cb.write(opts.maxDistance, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n\r\n        JoltManager.writeSpringSettings(cb, opts.springSettings);\r\n    }\r\n\r\n    // https://jrouwe.github.io/JoltPhysics/class_hinge_constraint_settings.html\r\n    static writeHingeConstraint(cb, opts) {\r\n        cb.write(opts.point1, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.hingeAxis1, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.normalAxis1, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.point2, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.hingeAxis2, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.normalAxis2, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.limitsMin, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n        cb.write(opts.limitsMax, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n        cb.write(opts.maxFrictionTorque, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n\r\n        JoltManager.writeSpringSettings(cb, opts.springSettings);\r\n        JoltManager.writeMotorSettings(cb, opts.motorSettings);\r\n    }\r\n\r\n    // https://jrouwe.github.io/JoltPhysics/class_slider_constraint_settings.html\r\n    static writeSliderConstraint(cb, opts) {\r\n        cb.write(opts.autoDetectPoint, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_BOOL);\r\n        if (!opts.autoDetectPoint) {\r\n            cb.write(opts.point1, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n            cb.write(opts.point2, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        }\r\n        cb.write(opts.sliderAxis1, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.normalAxis1, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.sliderAxis2, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.normalAxis2, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.limitsMin, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n        cb.write(opts.limitsMax, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n        cb.write(opts.maxFrictionForce, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n\r\n        JoltManager.writeSpringSettings(cb, opts.springSettings);\r\n        JoltManager.writeMotorSettings(cb, opts.motorSettings);\r\n    }\r\n\r\n    // https://jrouwe.github.io/JoltPhysics/class_cone_constraint_settings.html\r\n    static writeConeConstraint(cb, opts) {\r\n        cb.write(opts.point1, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.twistAxis1, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.point2, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.twistAxis2, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.halfConeAngle, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n    }\r\n\r\n    // https://jrouwe.github.io/JoltPhysics/class_swing_twist_constraint_settings.html\r\n    static writeSwingTwistConstraint(cb, opts) {\r\n        cb.write(opts.position1, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.twistAxis1, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.planeAxis1, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.position2, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.twistAxis2, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.planeAxis2, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.normalHalfConeAngle, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n        cb.write(opts.planeHalfConeAngle, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n        cb.write(opts.twistMinAngle, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n        cb.write(opts.twistMaxAngle, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n        cb.write(opts.maxFrictionTorque, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n\r\n        JoltManager.writeMotorSettings(cb, opts.swingMotorSettings);\r\n        JoltManager.writeMotorSettings(cb, opts.twistMotorSettings);\r\n    }\r\n\r\n    // https://jrouwe.github.io/JoltPhysics/class_six_d_o_f_constraint_settings.html\r\n    static writeSixDofConstraint(cb, opts) {\r\n        JoltManager.writeAxes(cb, opts.freeAxes);\r\n        JoltManager.writeAxes(cb, opts.fixedAxes);\r\n        JoltManager.writeAxes(cb, opts.limitedAxes, true);\r\n\r\n        cb.write(opts.position1, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.axisX1, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.axisY1, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.position2, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.axisX2, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.axisY2, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_VEC32);\r\n        cb.write(opts.maxFriction, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n        cb.write(opts.limitsMin, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n        cb.write(opts.limitsMax, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n\r\n        JoltManager.writeSpringSettings(cb, opts.springSettings);\r\n        JoltManager.writeMotorSettings(cb, opts.motorSettings);\r\n    }\r\n\r\n    static writeAxes(cb, axes, limits) {\r\n        cb.write(!!axes, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_BOOL, false);\r\n        if (axes) {\r\n            const count = axes.length;\r\n            if (limits) {\r\n                cb.write(count / 3, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT8, false);\r\n                for (let i = 0; i < count; i += 3) {\r\n                    cb.write(axes[i], _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT8, false);\r\n                    cb.write(axes[i + 1], _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32, false);\r\n                    cb.write(axes[i + 2], _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32, false);\r\n                }\r\n            } else {\r\n                cb.write(count, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT8, false);\r\n                for (let i = 0; i < count; i++) {\r\n                    cb.write(axes[i], _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT8, false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static writeSpringSettings(cb, springSettings) {\r\n        cb.write(!!springSettings, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_BOOL, false);\r\n        if (springSettings != null) {\r\n            cb.write(springSettings.springMode, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_UINT8);\r\n            cb.write(springSettings.frequency, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n            cb.write(springSettings.stiffness, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n            cb.write(springSettings.damping, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n        }\r\n    }\r\n\r\n    static writeMotorSettings(cb, motorSettings) {\r\n        cb.write(!!motorSettings, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_BOOL, false);\r\n        if (motorSettings != null) {\r\n            this._writeSpringSettings(cb, motorSettings.springSettings);\r\n            cb.write(motorSettings.minForceLimit, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n            cb.write(motorSettings.maxForceLimit, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n            cb.write(motorSettings.minTorqueLimit, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n            cb.write(motorSettings.maxTorqueLimit, _constants_mjs__WEBPACK_IMPORTED_MODULE_6__.BUFFER_WRITE_FLOAT32);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/physics/components/jolt/manager.mjs\n");

/***/ }),

/***/ "./src/physics/components/jolt/response-handler.mjs":
/*!**********************************************************!*\
  !*** ./src/physics/components/jolt/response-handler.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ResponseHandler: () => (/* binding */ ResponseHandler)\n/* harmony export */ });\n/* harmony import */ var _debug_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../debug.mjs */ \"./src/physics/debug.mjs\");\n/* harmony import */ var _constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n/* harmony import */ var _system_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./system.mjs */ \"./src/physics/components/jolt/system.mjs\");\n\r\n\r\n\r\n\r\nclass ContactResult {\r\n    constructor(entity, normal, depth, point = null, offset = null, points1 = null, points2 = null) {\r\n        this.entity = entity;\r\n        this.normal = normal;\r\n        this.penetrationDepth = depth;\r\n        if (point) this.point = point;\r\n        if (offset) this.offset = offset;\r\n        if (points1) this.points1 = points1;\r\n        if (points2) this.points2 = points2;\r\n    }\r\n}\r\n\r\nclass CharContactResult {\r\n    constructor(entity, contactPosition, contactNormal, contactVelocity, newCharVelocity) {\r\n        this.entity = entity;\r\n        this.contactPosition = contactPosition;\r\n        this.contactNormal = contactNormal;\r\n        this.contactVelocity = contactVelocity;\r\n        this.newCharVelocity = newCharVelocity;\r\n    }\r\n}\r\n\r\nclass RaycastResult {\r\n    constructor(entity, point, normal) {\r\n        this.entity = entity;\r\n        this.point = point;\r\n        if (normal) {\r\n            this.normal = normal;\r\n        }\r\n    }\r\n}\r\n\r\nclass ResponseHandler {\r\n    static handleContact(cb, map) {\r\n        const count = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_UINT32);\r\n\r\n        for (let i = 0; i < count; i++) {\r\n            const type = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_UINT8);\r\n            const isValidBody1 = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_BOOL);\r\n            const isValidBody2 = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_BOOL);\r\n\r\n            let idx1 = null;\r\n            if (isValidBody1) {\r\n                idx1 = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_UINT32);\r\n            }\r\n\r\n            let idx2 = null;\r\n            if (isValidBody2) {\r\n                idx2 = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_UINT32);\r\n            }\r\n\r\n            const entity1 = map.get(idx1);\r\n            const entity2 = map.get(idx2);\r\n\r\n            switch (type) {\r\n                case _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CONTACT_TYPE_ADDED: {\r\n                    const normal = pc.Vec3.fromBuffer(cb);\r\n                    const depth = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32);\r\n                    const contactPoints = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_BOOL);\r\n                    let point, points1, points2, offset;\r\n\r\n                    if (contactPoints) {\r\n                        const averaged = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_BOOL);\r\n\r\n                        if (averaged) {\r\n                            point = pc.Vec3.fromBuffer(cb);\r\n                        } else {\r\n                            offset = pc.Vec3.fromBuffer(cb);\r\n                            const count1 = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_UINT32);\r\n                            const count2 = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_UINT32);\r\n                            points1 = [];\r\n                            points2 = [];\r\n                            for (let i = 0; i < count1; i++) {\r\n                                points1.push(pc.Vec3.fromBuffer(cb));\r\n                            }\r\n                            for (let i = 0; i < count2; i++) {\r\n                                points2.push(pc.Vec3.fromBuffer(cb));\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    const event = 'contact:added';\r\n                    if (entity1?.hasEvent(event)) {\r\n                        const contactResult = new ContactResult(entity2, normal, depth, point, offset, points1, points2);\r\n                        entity1.fire(event, contactResult);\r\n                    }\r\n                    if (entity2?.hasEvent(event)) {\r\n                        const contactResult = new ContactResult(entity1, normal, depth, point, offset, points1, points2);\r\n                        entity2.fire(event, contactResult);\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                case _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CONTACT_TYPE_PERSISTED: {\r\n                    const event = 'contact:persisted';\r\n                    if (entity1?.hasEvent(event)) {\r\n                        entity1.fire(event, entity2);\r\n                    }\r\n                    if (entity2?.hasEvent(event)) {\r\n                        entity2.fire(event, entity1);\r\n                    }\r\n                    break;\r\n                }\r\n\r\n                case _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CONTACT_TYPE_REMOVED: {\r\n                    const event = 'contact:removed';\r\n                    if (entity1?.hasEvent(event)) {\r\n                        entity1.fire(event, entity2);\r\n                    }\r\n                    if (entity2?.hasEvent(event)) {\r\n                        entity2.fire(event, entity1);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static handleCharContacts(cb, map) {\r\n        const charsCount = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_UINT32);\r\n\r\n        for (let c = 0; c < charsCount; c++) {\r\n            const charIndex = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_UINT32);\r\n            const contactsCount = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_UINT32);\r\n            const charEntity = map.get(charIndex);\r\n            const results = [];\r\n\r\n            if (!charEntity.hasEvent('contact:char')) {\r\n                cb.skip(1 * contactsCount, _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.UINT8_SIZE);\r\n                cb.skip(13 * contactsCount, _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.FLOAT32_SIZE);\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < contactsCount; i++) {\r\n                const isValidBody2 = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_BOOL);\r\n                const otherIndex = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_UINT32);\r\n\r\n                let otherEntity = null;\r\n                if (isValidBody2) {\r\n                    otherEntity = map.get(otherIndex) || null;\r\n                }\r\n    \r\n                const cp = pc.Vec3.fromBuffer(cb); // contact position\r\n                const cn = pc.Vec3.fromBuffer(cb); // contact normal\r\n                const cv = pc.Vec3.fromBuffer(cb); // contact velocity\r\n                const nv = pc.Vec3.fromBuffer(cb); // new char velocity\r\n    \r\n                const result = new CharContactResult(otherEntity, cp, cn, cv, nv);    \r\n                results.push(result);\r\n            }\r\n\r\n            charEntity.fire('contact:char', results);\r\n        }\r\n    }\r\n\r\n    static handleQuery(buffer, queryMap) {\r\n        const results = [];\r\n\r\n        const queryIndex = buffer.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_UINT16);\r\n        const firstOnly = buffer.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_BOOL);\r\n        const hitsCount = buffer.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_UINT16);\r\n\r\n        let result = firstOnly ? null : [];\r\n\r\n        for (let i = 0; i < hitsCount; i++) {\r\n            const bodyIndex = buffer.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_UINT32);\r\n\r\n            const point = new pc.Vec3(\r\n                buffer.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n                buffer.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n                buffer.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32)\r\n            );\r\n\r\n            let normal;\r\n            if (buffer.flag) {\r\n                normal = new pc.Vec3(\r\n                    buffer.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n                    buffer.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n                    buffer.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32)\r\n                );\r\n            }\r\n\r\n            const entity = _system_mjs__WEBPACK_IMPORTED_MODULE_2__.ShapeComponentSystem.entityMap.get(bodyIndex);\r\n            if (!entity) {\r\n                // Entity could have been deleted by the time the raycast result arrived.\r\n                // We just ignore this result then.\r\n                continue;\r\n            }\r\n\r\n            const r = new RaycastResult(entity, point, normal);\r\n\r\n            if (firstOnly) {\r\n                result = r;\r\n            } else {\r\n                result.push(r);\r\n            }\r\n        }\r\n\r\n        const callback = queryMap.get(queryIndex);\r\n        queryMap.free(queryIndex);\r\n        callback?.(result);\r\n    }\r\n\r\n    static handleCharSetShape(cb, queryMap) {\r\n        const cbIndex = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_UINT32);\r\n        const callback = queryMap.get(cbIndex);\r\n\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && !callback) {\r\n            _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.warn(`Unable to locate callback with index: ${ cbIndex }`);\r\n            return;\r\n        }\r\n\r\n        queryMap.free(cbIndex);\r\n        callback();\r\n    }\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/physics/components/jolt/response-handler.mjs\n");

/***/ }),

/***/ "./src/physics/components/jolt/softbody/component.mjs":
/*!************************************************************!*\
  !*** ./src/physics/components/jolt/softbody/component.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SoftBodyComponent: () => (/* binding */ SoftBodyComponent)\n/* harmony export */ });\n/* harmony import */ var _debug_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../debug.mjs */ \"./src/physics/debug.mjs\");\n/* harmony import */ var _body_component_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../body/component.mjs */ \"./src/physics/components/jolt/body/component.mjs\");\n/* harmony import */ var _component_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../component.mjs */ \"./src/physics/components/jolt/component.mjs\");\n/* harmony import */ var _constants_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n\r\n\r\n\r\n\r\n\r\nclass SoftBodyComponent extends _body_component_mjs__WEBPACK_IMPORTED_MODULE_1__.BodyComponent {\r\n    // amount of substance * ideal gass constant * absolute temperature\r\n    // n * R * T\r\n    // see https://en.wikipedia.org/wiki/Pressure\r\n    _pressure = 0;\r\n\r\n    // Update the position of the body while simulating (set to false for something\r\n    // that is attached to the static world)\r\n    _updatePosition = true;\r\n\r\n    // Bake specified mRotation in the vertices and set the body rotation to identity (simulation is slightly more accurate if the rotation of a soft body is kept to identity)\r\n    _makeRotationIdentity = true;\r\n\r\n    // Number of solver iterations\r\n    _numIterations = 5;\r\n\r\n    // Inverse of the stiffness of the spring.\r\n    _compliance = 0;\r\n\r\n    // Number of cells comprising a row. Think of a grid divided plane.\r\n    _width = 0;\r\n\r\n    // Number of cells comprising a column. Think of a grid divided plane.\r\n    _length = 0;\r\n\r\n    _fixedIndices = [];\r\n\r\n    constructor(system, entity) {\r\n        super(system, entity);\r\n    }\r\n\r\n    writeComponentData(cb) {\r\n        this._writeShapeData(cb, this);\r\n\r\n        cb.write(this._index, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_UINT32, false);\r\n\r\n        // We always use world position and rotation from the current entity the component\r\n        // is attached to (instead of default zero vectors)\r\n        const entity = this.entity;\r\n        const pos = entity.getPosition();\r\n        const rot = entity.getRotation();\r\n\r\n        // TODO\r\n        // get rid of flags\r\n\r\n        // Loss of precision for pos/rot (64 -> 32)\r\n        cb.write(pos, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false);\r\n        cb.write(rot, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false);\r\n\r\n        cb.write(this._collisionGroup, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_UINT32);\r\n        cb.write(this._subGroup, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_UINT32);\r\n\r\n        cb.write(this._objectLayer, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_UINT16, false);\r\n        cb.write(this._numIterations, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_UINT32, false);\r\n        cb.write(this._linearDamping, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._maxLinearVelocity, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._restitution, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._friction, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._pressure, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._gravityFactor, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._updatePosition, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_BOOL, false);\r\n        cb.write(this._makeRotationIdentity, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_BOOL, false);\r\n        cb.write(this._allowSleeping, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_BOOL, false);\r\n\r\n        _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && cb.write(this._debugDraw, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_BOOL, false);\r\n    }\r\n\r\n    onEnable() {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            if (!this._renderAsset && !this._meshes) {\r\n                _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.warn('Unable to locate mesh data for a soft body', this);\r\n                return;\r\n            }\r\n        }\r\n\r\n        const system = this.system;\r\n\r\n        this._index = system.getIndex(this.entity);\r\n\r\n        if (this._renderAsset && !this._meshes) {\r\n            this._addMeshes();\r\n        } else {\r\n            system.createBody(this);\r\n        }\r\n    }\r\n\r\n    _writeShapeData(cb) {\r\n        let useEntityScale = this._useEntityScale;\r\n        let scale;\r\n        if (useEntityScale) {\r\n            scale = this.entity.getLocalScale();\r\n            if (scale.x === 1 && scale.y === 1 && scale.z === 1) {\r\n                useEntityScale = false;\r\n            }\r\n        }\r\n\r\n        cb.write(useEntityScale, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_BOOL, false);\r\n        if (useEntityScale) {\r\n            // Potential precision loss 64 -> 32\r\n            cb.write(scale, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_VEC32, false);\r\n        }\r\n    \r\n        _component_mjs__WEBPACK_IMPORTED_MODULE_2__.ShapeComponent.addMeshes(this._meshes, cb);\r\n\r\n        cb.write(this._width, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_UINT32, false);\r\n        cb.write(this._length, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_UINT32, false);\r\n        cb.write(this._compliance, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_FLOAT32, false);\r\n\r\n        const fixed = this._fixedIndices;\r\n        const count = fixed.length;\r\n\r\n        cb.write(count, _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_UINT32, false);\r\n        for (let i = 0; i < count; i++) {\r\n            cb.write(fixed[i], _constants_mjs__WEBPACK_IMPORTED_MODULE_3__.BUFFER_WRITE_UINT32, false);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/physics/components/jolt/softbody/component.mjs\n");

/***/ }),

/***/ "./src/physics/components/jolt/softbody/system.mjs":
/*!*********************************************************!*\
  !*** ./src/physics/components/jolt/softbody/system.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SoftBodyComponentSystem: () => (/* binding */ SoftBodyComponentSystem)\n/* harmony export */ });\n/* harmony import */ var _util_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../util.mjs */ \"./src/physics/util.mjs\");\n/* harmony import */ var _body_system_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../body/system.mjs */ \"./src/physics/components/jolt/body/system.mjs\");\n/* harmony import */ var _constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n/* harmony import */ var _system_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../system.mjs */ \"./src/physics/components/jolt/system.mjs\");\n/* harmony import */ var _component_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./component.mjs */ \"./src/physics/components/jolt/softbody/component.mjs\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst schema = [\r\n    // Component\r\n    'enabled',\r\n    'debugDraw',\r\n    'renderAsset',\r\n    'meshes',\r\n    'useEntityScale',\r\n\r\n    // Soft Body\r\n\t'position',\r\n\t'rotation',\r\n\t'objectLayer',\r\n\t'collisionGroup',\r\n    'subGroup',\r\n\t'numIterations',\r\n\t'linearDamping',\r\n\t'maxLinearVelocity',\r\n\t'restitution',\r\n\t'friction',\r\n\t'pressure',\r\n\t'gravityFactor',\r\n\t'updatePosition',\r\n\t'makeRotationIdentity',\r\n    'allowSleeping',\r\n\r\n    // Shape Data\r\n    'width',\r\n    'length',\r\n    'fixedIndices',\r\n    'compliance'\r\n];\r\n\r\nconst vec = new pc.Vec3();\r\nconst quat = new pc.Quat()\r\nconst positions = [];\r\nconst indices = [];\r\n\r\nclass SoftBodyComponentSystem extends _body_system_mjs__WEBPACK_IMPORTED_MODULE_1__.BodyComponentSystem {\r\n\r\n    constructor(app, manager, id) {\r\n        super(app, manager);\r\n\r\n        this.id = 'softbody';\r\n        this.schema = schema;\r\n        this.ComponentType = _component_mjs__WEBPACK_IMPORTED_MODULE_4__.SoftBodyComponent;\r\n\r\n        manager.systems.set(id, this);\r\n    }\r\n\r\n    createBody(component) {\r\n        const cb = this._manager.commandsBuffer;\r\n\r\n        cb.writeOperator(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.OPERATOR_CREATOR);\r\n        cb.writeCommand(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CMD_CREATE_SOFT_BODY);\r\n\r\n        component.writeComponentData(cb);\r\n    }\r\n\r\n    processCommands(cb) {\r\n        const command = cb.readCommand();\r\n\r\n        switch (command) {\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CMD_UPDATE_TRANSFORMS:\r\n                this._updateVertices(cb);\r\n            break;\r\n        }\r\n    }\r\n\r\n    _updateVertices(cb) {\r\n        const index = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_UINT32);\r\n        const count = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_UINT32);\r\n\r\n        const entity = this.entityMap.get(index);\r\n\r\n        positions.length = 0;\r\n        indices.length = 0;\r\n\r\n        const component = entity?.c.softbody;\r\n        const mesh = component?.meshes[0];\r\n        if (!mesh) {\r\n            return;\r\n        }\r\n\r\n        mesh.getIndices(indices);\r\n\r\n        let sx = 1;\r\n        let sy = 1;\r\n        let sz = 1;\r\n        \r\n        if (component.useEntityScale ) {\r\n            const s = entity.getLocalScale();\r\n            sx = s.x || 1; sy = s.y || 1; sz = s.z || 1;\r\n        }\r\n\r\n        quat.copy(entity.getRotation()).invert();\r\n\r\n        for (let i = 0; i < count; i++) {\r\n            vec.set(\r\n                cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_FLOAT32) / sx,\r\n                cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_FLOAT32) / sy,\r\n                cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_READ_FLOAT32) / sz\r\n            );\r\n\r\n            quat.transformVector(vec, vec);\r\n\r\n            positions.push(vec.x, vec.y, vec.z);\r\n        }\r\n\r\n        mesh.setNormals(pc.calculateNormals(positions, indices));\r\n        mesh.setPositions(positions);\r\n        mesh.update();\r\n    }\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGh5c2ljcy9jb21wb25lbnRzL2pvbHQvc29mdGJvZHkvc3lzdGVtLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBbUQ7QUFDTTtBQUNpRjtBQUNyRjtBQUNEO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsaUVBQW1CO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw2REFBaUI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsNERBQWdCO0FBQ3pDLHdCQUF3QixnRUFBb0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixpRUFBcUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLDhEQUFrQjtBQUNoRCw4QkFBOEIsOERBQWtCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsZUFBZTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixXQUFXO0FBQ25DO0FBQ0Esd0JBQXdCLCtEQUFtQjtBQUMzQyx3QkFBd0IsK0RBQW1CO0FBQzNDLHdCQUF3QiwrREFBbUI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QaHlzaWNzQ29tcG9uZW50cy8uL3NyYy9waHlzaWNzL2NvbXBvbmVudHMvam9sdC9zb2Z0Ym9keS9zeXN0ZW0ubWpzPzY3YTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYnVpbGRBY2Nlc3NvcnMgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbC5tanNcIjtcclxuaW1wb3J0IHsgQm9keUNvbXBvbmVudFN5c3RlbSB9IGZyb20gXCIuLi9ib2R5L3N5c3RlbS5tanNcIjtcclxuaW1wb3J0IHsgQlVGRkVSX1JFQURfRkxPQVQzMiwgQlVGRkVSX1JFQURfVUlOVDMyLCBDTURfQ1JFQVRFX1NPRlRfQk9EWSwgQ01EX1VQREFURV9UUkFOU0ZPUk1TLCBPUEVSQVRPUl9DUkVBVE9SIH0gZnJvbSBcIi4uL2NvbnN0YW50cy5tanNcIjtcclxuaW1wb3J0IHsgU2hhcGVDb21wb25lbnRTeXN0ZW0gfSBmcm9tIFwiLi4vc3lzdGVtLm1qc1wiO1xyXG5pbXBvcnQgeyBTb2Z0Qm9keUNvbXBvbmVudCB9IGZyb20gXCIuL2NvbXBvbmVudC5tanNcIjtcclxuXHJcbmNvbnN0IHNjaGVtYSA9IFtcclxuICAgIC8vIENvbXBvbmVudFxyXG4gICAgJ2VuYWJsZWQnLFxyXG4gICAgJ2RlYnVnRHJhdycsXHJcbiAgICAncmVuZGVyQXNzZXQnLFxyXG4gICAgJ21lc2hlcycsXHJcbiAgICAndXNlRW50aXR5U2NhbGUnLFxyXG5cclxuICAgIC8vIFNvZnQgQm9keVxyXG5cdCdwb3NpdGlvbicsXHJcblx0J3JvdGF0aW9uJyxcclxuXHQnb2JqZWN0TGF5ZXInLFxyXG5cdCdjb2xsaXNpb25Hcm91cCcsXHJcbiAgICAnc3ViR3JvdXAnLFxyXG5cdCdudW1JdGVyYXRpb25zJyxcclxuXHQnbGluZWFyRGFtcGluZycsXHJcblx0J21heExpbmVhclZlbG9jaXR5JyxcclxuXHQncmVzdGl0dXRpb24nLFxyXG5cdCdmcmljdGlvbicsXHJcblx0J3ByZXNzdXJlJyxcclxuXHQnZ3Jhdml0eUZhY3RvcicsXHJcblx0J3VwZGF0ZVBvc2l0aW9uJyxcclxuXHQnbWFrZVJvdGF0aW9uSWRlbnRpdHknLFxyXG4gICAgJ2FsbG93U2xlZXBpbmcnLFxyXG5cclxuICAgIC8vIFNoYXBlIERhdGFcclxuICAgICd3aWR0aCcsXHJcbiAgICAnbGVuZ3RoJyxcclxuICAgICdmaXhlZEluZGljZXMnLFxyXG4gICAgJ2NvbXBsaWFuY2UnXHJcbl07XHJcblxyXG5jb25zdCB2ZWMgPSBuZXcgcGMuVmVjMygpO1xyXG5jb25zdCBxdWF0ID0gbmV3IHBjLlF1YXQoKVxyXG5jb25zdCBwb3NpdGlvbnMgPSBbXTtcclxuY29uc3QgaW5kaWNlcyA9IFtdO1xyXG5cclxuY2xhc3MgU29mdEJvZHlDb21wb25lbnRTeXN0ZW0gZXh0ZW5kcyBCb2R5Q29tcG9uZW50U3lzdGVtIHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihhcHAsIG1hbmFnZXIsIGlkKSB7XHJcbiAgICAgICAgc3VwZXIoYXBwLCBtYW5hZ2VyKTtcclxuXHJcbiAgICAgICAgdGhpcy5pZCA9ICdzb2Z0Ym9keSc7XHJcbiAgICAgICAgdGhpcy5zY2hlbWEgPSBzY2hlbWE7XHJcbiAgICAgICAgdGhpcy5Db21wb25lbnRUeXBlID0gU29mdEJvZHlDb21wb25lbnQ7XHJcblxyXG4gICAgICAgIG1hbmFnZXIuc3lzdGVtcy5zZXQoaWQsIHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIGNyZWF0ZUJvZHkoY29tcG9uZW50KSB7XHJcbiAgICAgICAgY29uc3QgY2IgPSB0aGlzLl9tYW5hZ2VyLmNvbW1hbmRzQnVmZmVyO1xyXG5cclxuICAgICAgICBjYi53cml0ZU9wZXJhdG9yKE9QRVJBVE9SX0NSRUFUT1IpO1xyXG4gICAgICAgIGNiLndyaXRlQ29tbWFuZChDTURfQ1JFQVRFX1NPRlRfQk9EWSk7XHJcblxyXG4gICAgICAgIGNvbXBvbmVudC53cml0ZUNvbXBvbmVudERhdGEoY2IpO1xyXG4gICAgfVxyXG5cclxuICAgIHByb2Nlc3NDb21tYW5kcyhjYikge1xyXG4gICAgICAgIGNvbnN0IGNvbW1hbmQgPSBjYi5yZWFkQ29tbWFuZCgpO1xyXG5cclxuICAgICAgICBzd2l0Y2ggKGNvbW1hbmQpIHtcclxuICAgICAgICAgICAgY2FzZSBDTURfVVBEQVRFX1RSQU5TRk9STVM6XHJcbiAgICAgICAgICAgICAgICB0aGlzLl91cGRhdGVWZXJ0aWNlcyhjYik7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBfdXBkYXRlVmVydGljZXMoY2IpIHtcclxuICAgICAgICBjb25zdCBpbmRleCA9IGNiLnJlYWQoQlVGRkVSX1JFQURfVUlOVDMyKTtcclxuICAgICAgICBjb25zdCBjb3VudCA9IGNiLnJlYWQoQlVGRkVSX1JFQURfVUlOVDMyKTtcclxuXHJcbiAgICAgICAgY29uc3QgZW50aXR5ID0gdGhpcy5lbnRpdHlNYXAuZ2V0KGluZGV4KTtcclxuXHJcbiAgICAgICAgcG9zaXRpb25zLmxlbmd0aCA9IDA7XHJcbiAgICAgICAgaW5kaWNlcy5sZW5ndGggPSAwO1xyXG5cclxuICAgICAgICBjb25zdCBjb21wb25lbnQgPSBlbnRpdHk/LmMuc29mdGJvZHk7XHJcbiAgICAgICAgY29uc3QgbWVzaCA9IGNvbXBvbmVudD8ubWVzaGVzWzBdO1xyXG4gICAgICAgIGlmICghbWVzaCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBtZXNoLmdldEluZGljZXMoaW5kaWNlcyk7XHJcblxyXG4gICAgICAgIGxldCBzeCA9IDE7XHJcbiAgICAgICAgbGV0IHN5ID0gMTtcclxuICAgICAgICBsZXQgc3ogPSAxO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmIChjb21wb25lbnQudXNlRW50aXR5U2NhbGUgKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHMgPSBlbnRpdHkuZ2V0TG9jYWxTY2FsZSgpO1xyXG4gICAgICAgICAgICBzeCA9IHMueCB8fCAxOyBzeSA9IHMueSB8fCAxOyBzeiA9IHMueiB8fCAxO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcXVhdC5jb3B5KGVudGl0eS5nZXRSb3RhdGlvbigpKS5pbnZlcnQoKTtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHZlYy5zZXQoXHJcbiAgICAgICAgICAgICAgICBjYi5yZWFkKEJVRkZFUl9SRUFEX0ZMT0FUMzIpIC8gc3gsXHJcbiAgICAgICAgICAgICAgICBjYi5yZWFkKEJVRkZFUl9SRUFEX0ZMT0FUMzIpIC8gc3ksXHJcbiAgICAgICAgICAgICAgICBjYi5yZWFkKEJVRkZFUl9SRUFEX0ZMT0FUMzIpIC8gc3pcclxuICAgICAgICAgICAgKTtcclxuXHJcbiAgICAgICAgICAgIHF1YXQudHJhbnNmb3JtVmVjdG9yKHZlYywgdmVjKTtcclxuXHJcbiAgICAgICAgICAgIHBvc2l0aW9ucy5wdXNoKHZlYy54LCB2ZWMueSwgdmVjLnopO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbWVzaC5zZXROb3JtYWxzKHBjLmNhbGN1bGF0ZU5vcm1hbHMocG9zaXRpb25zLCBpbmRpY2VzKSk7XHJcbiAgICAgICAgbWVzaC5zZXRQb3NpdGlvbnMocG9zaXRpb25zKTtcclxuICAgICAgICBtZXNoLnVwZGF0ZSgpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBTb2Z0Qm9keUNvbXBvbmVudFN5c3RlbSB9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/physics/components/jolt/softbody/system.mjs\n");

/***/ }),

/***/ "./src/physics/components/jolt/system.mjs":
/*!************************************************!*\
  !*** ./src/physics/components/jolt/system.mjs ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ShapeComponentSystem: () => (/* binding */ ShapeComponentSystem)\n/* harmony export */ });\n/* harmony import */ var _indexed_cache_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../indexed-cache.mjs */ \"./src/physics/indexed-cache.mjs\");\n/* harmony import */ var _constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n\r\n\r\n\r\n\r\nlet v1, v2, v3;\r\n\r\nfunction getColor(type, config) {\r\n    switch (type) {\r\n        case pc.JOLT_MOTION_TYPE_STATIC:\r\n            return config.debugColorStatic;\r\n        case pc.JOLT_MOTION_TYPE_KINEMATIC:\r\n            return config.debugColorKinematic;\r\n        case pc.JOLT_MOTION_TYPE_DYNAMIC:\r\n            return config.debugColorDynamic;\r\n        default:\r\n            return pc.Color.WHITE;\r\n    }\r\n}\r\n\r\nconst schema = [\r\n    // component\r\n    'enabled',\r\n    'index',\r\n    'trackDynamic',\r\n    'renderAsset',\r\n    'meshes',\r\n    'isCompoundChild',\r\n    'useEntityScale',\r\n    'useMotionState',\r\n    'debugDraw',\r\n\r\n    // Jolt shape\r\n    'shape',\r\n    'halfExtent',\r\n    'radius',\r\n    'convexRadius',\r\n    'halfHeight',\r\n    'density',\r\n    'shapePosition',\r\n    'shapeRotation',\r\n    'massOffset',\r\n    'hfScale',\r\n    'hfOffset',\r\n    'hfSamples',\r\n    'hfSampleCount',\r\n    'hfBlockSize',\r\n    'hfBitsPerSample',\r\n    'hfActiveEdgeCosThresholdAngle'\r\n];\r\n\r\nclass ShapeComponentSystem extends pc.ComponentSystem {\r\n    static entityMap = new _indexed_cache_mjs__WEBPACK_IMPORTED_MODULE_0__.IndexedCache();\r\n\r\n    constructor(app, manager) {\r\n        super(app);\r\n\r\n        // The store where all ComponentData objects are kept\r\n        this.store = {};\r\n        this.schema = schema;\r\n\r\n        this._manager = manager;\r\n\r\n        this.entityMap = ShapeComponentSystem.entityMap;\r\n\r\n        this._exposeConstants();\r\n    }\r\n\r\n    addCommand() {\r\n        const cb = this._manager.commandsBuffer;\r\n        \r\n        cb.writeOperator(arguments[0]);\r\n        cb.writeCommand(arguments[1]);\r\n\r\n        // component index\r\n        cb.write(arguments[2], _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_WRITE_UINT32, false);\r\n\r\n        for (let i = 3, end = arguments.length; i < end; i += 3) {\r\n            cb.write(arguments[i], arguments[i + 1], arguments[i + 2]);\r\n        }\r\n    }\r\n\r\n    addCommandArgs() {\r\n        const cb = this._manager.commandsBuffer;\r\n        for (let i = 0, end = arguments.length; i < end; i += 3) {\r\n            cb.write(arguments[i], arguments[i + 1], arguments[i + 2]);\r\n        }\r\n    }\r\n\r\n    addComponent(entity, data = {}) {\r\n        const component = new this.ComponentType(this, entity);\r\n\r\n        this.store[entity.getGuid()] = { entity };\r\n\r\n        entity[this.id] = component;\r\n        entity.c[this.id] = component;\r\n\r\n        this.initializeComponentData(component, data);\r\n\r\n        return component;\r\n    }\r\n\r\n    initializeComponentData(component, data) {\r\n        component.enabled = true;\r\n\r\n        for (const [key, value] of Object.entries(data)) {\r\n            component[`_${ key }`] = value;\r\n        }\r\n\r\n        if (component.entity.enabled && !component.isCompoundChild) {\r\n            component.onEnable();\r\n        }\r\n    }\r\n\r\n    freeConstraintIndex(index) {\r\n        this._manager.freeConstraintIndex(index);\r\n    }\r\n\r\n    getIndex(entity) {\r\n        return this.entityMap.add(entity);\r\n    }\r\n\r\n    setIndexFree(index) {\r\n        this.entityMap.free(index);\r\n    }\r\n\r\n    _exposeConstants() {\r\n        if (typeof window !== 'undefined' && window.pc) {\r\n            pc.JOLT_SHAPE_BOX = _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.SHAPE_BOX;\r\n            pc.JOLT_SHAPE_CAPSULE = _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.SHAPE_CAPSULE;\r\n            pc.JOLT_SHAPE_CYLINDER = _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.SHAPE_CYLINDER;\r\n            pc.JOLT_SHAPE_SPHERE = _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.SHAPE_SPHERE;\r\n            pc.JOLT_SHAPE_MESH = _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.SHAPE_MESH;\r\n            pc.JOLT_SHAPE_CONVEX_HULL = _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.SHAPE_CONVEX_HULL;\r\n            pc.JOLT_SHAPE_STATIC_COMPOUND = _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.SHAPE_STATIC_COMPOUND;\r\n            pc.JOLT_SHAPE_HEIGHTFIELD = _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.SHAPE_HEIGHTFIELD;\r\n            pc.JOLT_OBJ_LAYER_NON_MOVING = _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OBJ_LAYER_NON_MOVING;\r\n            pc.JOLT_OBJ_LAYER_MOVING = _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OBJ_LAYER_MOVING;\r\n            pc.JOLT_BP_LAYER_NON_MOVING = _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BP_LAYER_NON_MOVING;\r\n            pc.JOLT_BP_LAYER_MOVING = _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BP_LAYER_MOVING;\r\n            pc.JOLT_VEHICLE_TYPE_WHEEL = _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.VEHICLE_TYPE_WHEEL;\r\n            pc.JOLT_VEHICLE_TYPE_TRACK = _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.VEHICLE_TYPE_TRACK;\r\n            pc.JOLT_VEHICLE_TYPE_MOTORCYCLE = _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.VEHICLE_TYPE_MOTORCYCLE;\r\n            pc.JOLT_VEHICLE_CAST_TYPE_RAY = _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.VEHICLE_CAST_TYPE_RAY;\r\n            pc.JOLT_VEHICLE_CAST_TYPE_CYLINDER = _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.VEHICLE_CAST_TYPE_CYLINDER;\r\n            pc.JOLT_VEHICLE_CAST_TYPE_SPHERE = _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.VEHICLE_CAST_TYPE_SPHERE;\r\n        }\r\n    }\r\n\r\n    static updateDynamic(cb) {\r\n        const index = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_UINT32);\r\n        const entity = this.entityMap.get(index);\r\n        const vehicleComponent = entity?.c.vehicle;\r\n\r\n        if (!entity) {\r\n            cb.skip(13 * _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.FLOAT32_SIZE);\r\n            if (vehicleComponent) {\r\n                cb.skip(vehicleComponent.wheels.length * 7 * _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.FLOAT32_SIZE);\r\n            }\r\n            return;\r\n        }\r\n\r\n        entity.setPosition(\r\n            cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n            cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n            cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32)\r\n        );\r\n\r\n        entity.setRotation(\r\n            cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n            cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n            cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n            cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32)\r\n        );\r\n\r\n        const component = entity.c.body || vehicleComponent;\r\n        component._linearVelocity.set(\r\n            cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n            cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n            cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32)\r\n        );\r\n        component._angularVelocity.set(\r\n            cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n            cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n            cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32)\r\n        );\r\n\r\n        if (vehicleComponent) {\r\n            const wheels = vehicleComponent.wheels;\r\n            const wheelsCount = wheels.length;\r\n\r\n            for (let i = 0; i < wheelsCount; i++) {\r\n                const wheel = wheels[i];\r\n                const entity = wheel.entity;\r\n\r\n                if (!entity) {\r\n                    cb.skip(7 * _constants_mjs__WEBPACK_IMPORTED_MODULE_1__.FLOAT32_SIZE);\r\n                    continue;\r\n                }\r\n\r\n                wheel.longitudinalSlip = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32);\r\n                wheel.lateralSlip = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32);\r\n                wheel.combinedLongitudinalFriction = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32);\r\n                wheel.combinedLateralFriction = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32);\r\n                wheel.brakeImpulse = cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32);\r\n\r\n                entity.setLocalPosition(\r\n                    cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n                    cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n                    cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32)\r\n                );\r\n\r\n                entity.setLocalRotation(\r\n                    cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n                    cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n                    cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n                    cb.read(_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32)\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    static debugDraw(app, data, config) {\r\n        const useDepth = config.debugDrawDepth;\r\n        const layer = app.scene.layers.getLayerById(config.debugDrawLayerId);\r\n\r\n        if (!v1) {\r\n            v1 = new pc.Vec3();\r\n            v2 = new pc.Vec3();\r\n            v3 = new pc.Vec3();\r\n        }\r\n    \r\n        for (let d = 0, total = data.length; d < total; d += 5) {\r\n            const index = data[d];\r\n            const length = data[d + 1];\r\n            const byteOffset = data[d + 2];\r\n            const motionType = data[d + 3];\r\n            const buffer = data[d + 4];\r\n    \r\n            const view = new Float32Array(buffer, byteOffset, length);\r\n            const entity = this.entityMap.get(index);\r\n            const color = getColor(motionType, config);\r\n    \r\n            const p = entity.getPosition();\r\n            const r = entity.getRotation();\r\n    \r\n            for (let i = 0, end = view.length; i < end; i += 9) {\r\n                v1.set(view[i], view[i + 1], view[i + 2]);\r\n                v2.set(view[i + 3], view[i + 4], view[i + 5]);\r\n                v3.set(view[i + 6], view[i + 7], view[i + 8]);\r\n    \r\n                r.transformVector(v1, v1);\r\n                r.transformVector(v2, v2);\r\n                r.transformVector(v3, v3);\r\n                v1.add(p);\r\n                v2.add(p);\r\n                v3.add(p);\r\n    \r\n                app.drawLine(v1, v2, color, useDepth, layer);\r\n                app.drawLine(v2, v3, color, useDepth, layer);\r\n                app.drawLine(v3, v1, color, useDepth, layer);\r\n            }\r\n        }\r\n    }    \r\n}\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/physics/components/jolt/system.mjs\n");

/***/ }),

/***/ "./src/physics/components/jolt/vehicle/component.mjs":
/*!***********************************************************!*\
  !*** ./src/physics/components/jolt/vehicle/component.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VehicleComponent: () => (/* binding */ VehicleComponent)\n/* harmony export */ });\n/* harmony import */ var _debug_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../debug.mjs */ \"./src/physics/debug.mjs\");\n/* harmony import */ var _body_component_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../body/component.mjs */ \"./src/physics/components/jolt/body/component.mjs\");\n/* harmony import */ var _constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n\r\n\r\n\r\n\r\nclass VehicleComponent extends _body_component_mjs__WEBPACK_IMPORTED_MODULE_1__.BodyComponent {\r\n    // Used only when the constraint is active. Override for the number of solver \r\n    // velocity iterations to run, 0 means use the default in PhysicsSettings.numVelocitySteps.\r\n    // The number of iterations to use is the max of all contacts and constraints in the island.\r\n    _numVelocityStepsOverride = 0;\r\n\r\n    // Used only when the constraint is active. Override for the number of solver\r\n    // position iterations to run, 0 means use the default in PhysicsSettings.numPositionSteps.\r\n    // The number of iterations to use is the max of all contacts and constraints in the island.\r\n    _numPositionStepsOverride = 0;\r\n\r\n    // Vector indicating the up direction of the vehicle (in local space to the body)\r\n    _up = pc.Vec3.UP;\r\n\r\n    // Vector indicating forward direction of the vehicle (in local space to the body)\r\n    _forward = pc.Vec3.BACK;\r\n\r\n    // Defines the maximum pitch/roll angle (rad), can be used to avoid the car from getting upside\r\n    // down. The vehicle up direction will stay within a cone centered around the up axis with half\r\n    // top angle maxPitchRollAngle, set to pi to turn off. Defaults to ~1.04 rad (60 degrees)\r\n    _maxPitchRollAngle = 1.0471975511965976;\r\n\r\n    // An array of arrays. Each array represents a track and lists indices of wheels that are inside\r\n    // that track. The last element in each track array will become a driven wheel (an index that points\r\n    // to a wheel that is connected to the engine).\r\n    // Example with 2 tracks, and each having 4 wheels: [[0, 1, 2, 3], [4, 5, 6, 7]]\r\n    _tracks = [];\r\n\r\n    // An array of objects that describe each wheel. See _writeWheelsData().\r\n    _wheels = [];\r\n\r\n    // Vehicle type. Can be wheeled (VEHICLE_TYPE_WHEEL) or tracked (VEHICLE_TYPE_TRACK).\r\n    _type = _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.VEHICLE_TYPE_WHEEL;\r\n\r\n    // Max amount of torque (Nm) that the engine can deliver.\r\n    _maxTorque = 500;\r\n    \r\n    // Min amount of revolutions per minute (rpm) the engine can produce without stalling.\r\n    _minRPM = 1000;\r\n\r\n    // Max amount of revolutions per minute (rpm) the engine can generate.\r\n    _maxRPM = 6000;\r\n\r\n    // Moment of inertia (kg m^2) of the engine.\r\n    _inertia = 0.5;\r\n\r\n    // Angular damping factor of the wheel: dw/dt = -c * w.\r\n    _wheelAngularDamping = 0.2;\r\n\r\n    // Curve that describes a ratio of the max torque the engine can produce vs the fraction of the max RPM of the engine.\r\n    _normalizedTorque = new pc.Curve([0, 0.8]);\r\n\r\n    // How to switch gears.\r\n    _mode = pc.JOLT_TRANSMISSION_AUTO;\r\n\r\n    // Ratio in rotation rate between engine and gear box, first element is 1st gear, 2nd element 2nd gear etc.\r\n    _gearRatios = [2.66, 1.78, 1.3, 1, 0.74];\r\n\r\n    // Ratio in rotation rate between engine and gear box when driving in reverse.\r\n    _reverseGearRatios = [-2.9];\r\n\r\n    // How long it takes to switch gears (s), only used in auto mode.\r\n    _switchTime = 0.5;\r\n\r\n    // How long it takes to release the clutch (go to full friction), only used in auto mode\r\n    _clutchReleaseTime = 0.3;\r\n\r\n    // How long to wait after releasing the clutch before another switch is attempted (s), only used in auto mode.\r\n    _switchLatency = 0.5;\r\n\r\n    // If RPM of engine is bigger then this we will shift a gear up, only used in auto mode.\r\n    _shiftUpRPM = 4000;\r\n\r\n    // If RPM of engine is smaller then this we will shift a gear down, only used in auto mode.\r\n    _shiftDownRPM = 2000;\r\n\r\n    // Strength of the clutch when fully engaged. Total torque a clutch applies is \r\n    // Torque = ClutchStrength * (Velocity Engine - Avg Velocity Wheels At Clutch) (units: k m^2 s^-1)\r\n    _clutchStrength = 10;\r\n\r\n    // List of differentials and their properties\r\n    _differentials = [];\r\n\r\n    // Used when vehicle is of wheeled type. Ratio max / min average wheel speed of each differential\r\n    // (measured at the clutch). When the ratio is exceeded all torque gets distributed to the differential\r\n    // with the minimal average velocity. This allows implementing a limited slip differential between\r\n    // differentials. Set to Number.MAX_VALUE for an open differential. Value should be > 1.\r\n    _differentialLimitedSlipRatio = 1.4;\r\n\r\n    // An anti rollbar is a stiff spring that connects two wheels to reduce the amount of roll the\r\n    // vehicle makes in sharp corners See: https://en.wikipedia.org/wiki/Anti-roll_bar\r\n    _antiRollBars = [];    \r\n\r\n    // Collision tester that tests wheels collision.\r\n    // - VEHICLE_CAST_TYPE_RAY\r\n    // - VEHICLE_CAST_TYPE_SPHERE\r\n    // - VEHICLE_CAST_TYPE_CYLINDER \r\n    _castType = _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.VEHICLE_CAST_TYPE_RAY;\r\n\r\n    // Object layer to test collision with.\r\n    _castObjectLayer = _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.OBJ_LAYER_MOVING;\r\n\r\n    // World space up vector, used to avoid colliding with vertical walls.\r\n    _castUp = pc.Vec3.UP;\r\n\r\n    // Max angle (rad) that is considered for colliding wheels. This is to avoid colliding\r\n    // with vertical walls. Defaults to ~1.4 rad (80 degrees).\r\n    _castMaxSlopeAngle = 1.3962634015954636;\r\n\r\n    // Sets the radius of the sphere used in cast.\r\n    _castRadius = 0.3;\r\n\r\n    // Fraction of half the wheel width (or wheel radius if it is smaller) that is used as the convex radius\r\n    _castFraction = 0.1;\r\n\r\n    // Bike Lean:\r\n\r\n    // How far we're willing to make the bike lean over in turns (in radians)\r\n    _maxLeanAngle = 45;\r\n    \r\n    // Spring constant for the lean spring.\r\n    _leanSpringConstant = 5000;\r\n\r\n    // Spring damping constant for the lean spring.\r\n    _leanSpringDamping = 1000;\r\n\r\n    // The lean spring applies an additional force equal to this coefficient * Integral(delta angle, 0, t),\r\n    // this effectively makes the lean spring a PID controller.\r\n    _leanSpringIntegrationCoefficient = 0;\r\n\r\n    // How much to decay the angle integral when the wheels are not touching the floor:\r\n    // new_value = e^(-decay * t) * initial_value.\r\n    _leanSpringIntegrationCoefficientDecay = 4;\r\n\r\n    // How much to smooth the lean angle (0 = no smoothing, 1 = lean angle never changes). Note that this\r\n    // is frame rate dependent because the formula is: smoothing_factor * previous + (1 - smoothing_factor) * current\r\n    _leanSmoothingFactor = 0.8;\r\n\r\n    constructor(system, entity) {\r\n        super(system, entity);\r\n    }\r\n\r\n    writeVehicleData(cb) {\r\n        const type = this._type;\r\n\r\n        // general vehicle data\r\n        cb.write(this._index, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n        cb.write(type, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT8, false);\r\n        cb.write(this._numVelocityStepsOverride, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT16, false);\r\n        cb.write(this._numVelocityStepsOverride, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT16, false);\r\n        cb.write(this._up, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n        cb.write(this._forward, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n        cb.write(this._maxPitchRollAngle, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n\r\n        // engine data\r\n        cb.write(this._maxTorque, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._minRPM, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._maxRPM, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._inertia, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._wheelAngularDamping, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        VehicleComponent.writeCurvePoints(cb, this._normalizedTorque);\r\n\r\n        // transmission data\r\n        cb.write(this._mode, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT8, false);\r\n        cb.write(this._switchTime, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._clutchReleaseTime, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._switchLatency, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._shiftUpRPM, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._shiftDownRPM, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        cb.write(this._clutchStrength, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        VehicleComponent.writeGears(cb, this._gearRatios);\r\n        VehicleComponent.writeGears(cb, this._reverseGearRatios);\r\n\r\n        // wheels data\r\n        const isWheeled = type === _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.VEHICLE_TYPE_WHEEL || type === _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.VEHICLE_TYPE_MOTORCYCLE;\r\n        if (isWheeled) {\r\n            this._writeWheelsData(cb);\r\n        } else {\r\n            this._writeTracksData(cb);\r\n        }\r\n\r\n        if (isWheeled) {\r\n            // differentials\r\n            this._writeDifferentials(cb);\r\n            cb.write(this._differentialLimitedSlipRatio, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n\r\n            if (type === _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.VEHICLE_TYPE_MOTORCYCLE) {\r\n                cb.write(this._maxLeanAngle, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n                cb.write(this._leanSpringConstant, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n                cb.write(this._leanSpringDamping, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n                cb.write(this._leanSpringIntegrationCoefficient, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n                cb.write(this._leanSpringIntegrationCoefficientDecay, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n                cb.write(this._leanSmoothingFactor, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n            }\r\n        }\r\n\r\n        this._writeAntiRollBars(cb);\r\n\r\n        // cast type\r\n        const castType = this._castType;\r\n        cb.write(castType, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT8, false);\r\n        cb.write(this._castObjectLayer, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n        switch (castType) {\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.VEHICLE_CAST_TYPE_RAY:\r\n                cb.write(this._castUp, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n                cb.write(this._castMaxSlopeAngle, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n                break;\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.VEHICLE_CAST_TYPE_SPHERE:\r\n                cb.write(this._castUp, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n                cb.write(this._castMaxSlopeAngle, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n                cb.write(this._castRadius, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n                break;\r\n            case _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.VEHICLE_CAST_TYPE_CYLINDER:\r\n                cb.write(this._castFraction, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n                break;\r\n        }\r\n    }\r\n\r\n    // Any type:\r\n    //      input0 - Value between -1 and 1 for auto transmission and value between 0 and 1 indicating \r\n    //              desired driving direction and amount the gas pedal is pressed\r\n    // Wheeled:\r\n    //      input1 - Value between -1 and 1 indicating desired steering angle (1 = right)\r\n    //      input2 - Value between 0 and 1 indicating how strong the brake pedal is pressed\r\n    //      input3 - Value between 0 and 1 indicating how strong the hand brake is pulled\r\n    // Tracked:\r\n    //      input1 - Value between -1 and 1 indicating an extra multiplier to the rotation rate of the left track (used for steering)\r\n    //      input2 - Value between -1 and 1 indicating an extra multiplier to the rotation rate of the right track (used for steering)\r\n    //      input3 - Value between 0 and 1 indicating how strong the brake pedal is pressed\r\n    setDriverInput(input0, input1, input2, input3) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            let ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkRange(input0, -1, 1, `Invalid driver input for forward (input0). Expected a number in [-1:1] range. Received: ${ input0 }`);\r\n            if (this._type === _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.VEHICLE_TYPE_WHEEL || this._type === _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.VEHICLE_TYPE_MOTORCYCLE) {\r\n                ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkRange(input1, -1, 1, `Invalid driver input for right (input1). Expected a number in [-1:1] range. Received: ${ input1 }`);\r\n                ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkRange(input2, 0, 1, `Invalid driver input for brake (input2). Expected a number in [0:1] range. Received: ${ input2 }`);\r\n                ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkRange(input3, 0, 1, `Invalid driver input for hand brake (input3). Expected a number in [0:1] range. Received: ${ input3 }`);\r\n            } else {\r\n                ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkRange(input1, -1, 1, `Invalid driver input for left ratio (input1). Expected a number in [-1:1] range. Received: ${ input1 }`);\r\n                ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkRange(input2, -1, 1, `Invalid driver input for right ratio (input2). Expected a number in [-1:1] range. Received: ${ input2 }`);\r\n                ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkRange(input3, 0, 1, `Invalid driver input for brake (input3). Expected a number in [0:1] range. Received: ${ input3 }`);\r\n            }\r\n            if (!ok)\r\n                return;\r\n        }\r\n\r\n        this.system.addCommand(\r\n            _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.OPERATOR_MODIFIER, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CMD_SET_DRIVER_INPUT, this._index,\r\n            input0, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false,\r\n            input1, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false,\r\n            input2, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false,\r\n            input3, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false\r\n        );\r\n    }\r\n\r\n    onEnable() {\r\n        const system = this.system;\r\n\r\n        this._index = system.getIndex(this.entity);\r\n\r\n        system.createVehicle(this);\r\n    }\r\n\r\n    _writeTracksData(cb) {\r\n        const tracks = this._tracks;\r\n        const count = tracks.length;\r\n\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && count === 0) {\r\n            _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.warn('Invalid tracks data. Need at least one track.', tracks);\r\n            return;\r\n        }\r\n\r\n        this._writeWheelsData(cb);\r\n\r\n        cb.write(count, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n        \r\n        for (let t = 0; t < count; t++) {\r\n            const track = tracks[t];\r\n            const wheelsCount = track.length;\r\n\r\n            cb.write(wheelsCount, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n\r\n            for (let i = 0; i < wheelsCount; i++) {\r\n                cb.write(track[i], _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    _writeWheelsData(cb) {\r\n        const wheels = this._wheels;\r\n        const count = wheels.length;\r\n\r\n        // TODO\r\n        // consider making wheel as its own component\r\n\r\n        cb.write(count, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n\r\n        for (let i = 0; i < count; i++) {\r\n            const desc = wheels[i];\r\n\r\n            if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n                let ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.assert(desc.position, \r\n                    'A wheel description requires an attachment position of wheel' +\r\n                    'suspension in local space of the vehicle', desc);\r\n                const spring = desc.spring;\r\n                if (spring) {\r\n                    const { stiffness, frequency } = spring;\r\n                    if (stiffness != null) {\r\n                        _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.assert(stiffness !== 0, 'Wheel spring stiffness cannot be zero', spring);\r\n                    }\r\n                    if (frequency != null) {\r\n                        _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.assert(frequency !== 0, 'Wheel spring frequency cannot be zero', spring);\r\n                    }\r\n                }\r\n                if (!ok)\r\n                    return;\r\n            }\r\n\r\n            // Read-only. Velocity difference between ground and wheel relative to ground velocity.\r\n            desc.longitudinalSlip = 0;\r\n            // Read-only. Angular difference (in radians) between ground and wheel relative to ground velocity.\r\n            desc.lateralSlip = 0;\r\n            // Read-only. Combined friction coefficient in longitudinal direction (combines terrain and tires)\r\n            desc.combinedLongitudinalFriction = 0;\r\n            // Read-only. Combined friction coefficient in lateral direction (combines terrain and tires)\r\n            desc.combinedLateralFriction = 0;\r\n            // Ready-only. Amount of impulse that the brakes can apply to the floor (excluding friction)\r\n            desc.brakeImpulse = 0;\r\n\r\n            // Attachment point of wheel suspension in local space of the body.\r\n            cb.write(desc.position, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n\r\n            // Where tire forces (suspension and traction) are applied, in local space of the body. \r\n            // A good default is the center of the wheel in its neutral pose. See enableSuspensionForcePoint.\r\n            cb.write(desc.suspensionForcePoint || pc.Vec3.ZERO, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n\r\n            // Direction of the suspension in local space of the body, should point down.\r\n            cb.write(desc.suspensionDirection || pc.Vec3.DOWN, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n\r\n            // Direction of the steering axis in local space of the body, should point up (e.g. for a \r\n            // bike would be -suspensionDirection)\r\n            cb.write(desc.steeringAxis || pc.Vec3.UP, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n\r\n            // Up direction when the wheel is in the neutral steering position (usually \r\n            // component.up but can be used to give the wheel camber or for a bike would be -suspensionDirection)\r\n            cb.write(desc.wheelUp || pc.Vec3.UP, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n\r\n            // Forward direction when the wheel is in the neutral steering position (usually \r\n            // component.forward but can be used to give the wheel toe, does not need to be perpendicular\r\n            // to wheelUp)\r\n            cb.write(desc.wheelForward || pc.Vec3.BACK, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_VEC32, false);\r\n\r\n            // How long the suspension is in max raised position relative to the attachment point (m)\r\n            cb.write(desc.suspensionMinLength ?? 0.3, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n\r\n            // How long the suspension is in max droop position relative to the attachment point (m)\r\n            cb.write(desc.suspensionMaxLength ?? 0.5, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n\r\n            // The natural length (m) of the suspension spring is defined as suspensionMaxLength + \r\n            // suspensionPreloadLength. Can be used to preload the suspension as the spring is compressed\r\n            // by suspensionPreloadLength when the suspension is in max droop position. Note that this means\r\n            // when the vehicle touches the ground there is a discontinuity so it will also make the vehicle\r\n            // more bouncy as we're updating with discrete time steps.\r\n            cb.write(desc.suspensionPreloadLength ?? 0, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n\r\n            // Radius of the wheel (m)\r\n            cb.write(desc.radius ?? 0.3, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n\r\n            // Width of the wheel (m)\r\n            cb.write(desc.width ?? 0.1, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n\r\n            // If disabled, the forces are applied at the collision contact point. This leads to a more\r\n            // accurate simulation when interacting with dynamic objects but makes the vehicle less stable.\r\n            // When setting this to true, all forces will be applied to a fixed point on the vehicle body.\r\n            cb.write(desc.enableSuspensionForcePoint ?? false, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_BOOL, false);\r\n\r\n            // wheel spring data\r\n            const spring = desc.spring || {};\r\n            cb.write(spring.mode ?? pc.JOLT_SPRING_MODE_FREQUENCY, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT8, false);\r\n            cb.write(spring.frequency ?? 1.5, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n            cb.write(spring.stiffness ?? 1.5, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n            cb.write(spring.damping ?? 0.5, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n\r\n            // Friction in forward direction of tire as a function of the slip ratio (fraction):\r\n            // (omega_wheel * r_wheel - v_longitudinal) / |v_longitudinal|.\r\n            // Slip ratio here is a ratio of wheel spinning relative to the floor. At 0 the wheel has full\r\n            // traction and is rolling perfectly in sync with the ground. At 1 the wheel is locked and\r\n            // is sliding over the ground.\r\n            // Default curve keys: [[0, 0], [0.06, 1.2], [0.2, 1]]\r\n            VehicleComponent.writeCurvePoints(cb, desc.longitudinalFrictionCurve);\r\n\r\n            // Friction in sideway direction of tire as a function of the slip angle (degrees):\r\n            // angle between relative contact velocity and vehicle direction.\r\n            // If tire forward matches the vehicle direction, then the angle is 0 degrees. If the \r\n            // vehicle is sliding sideways, e.g. on ice, then the angle is 90 degrees. Example curve keys could\r\n            // be: [[0, 1], [90, 0.3]] - full friction at zero degrees, and 0.3 friction at 90.\r\n            // Default curve keys: [[0, 0], [3, 1.2], [20, 1]]\r\n            VehicleComponent.writeCurvePoints(cb, desc.lateralFrictionCurve);\r\n\r\n            const type = this._type;\r\n            if (type === _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.VEHICLE_TYPE_WHEEL || type === _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.VEHICLE_TYPE_MOTORCYCLE) {\r\n\r\n                // Moment of inertia (kg m^2), for a cylinder this would be 0.5 * M * R^2 which is \r\n                // 0.9 for a wheel with a mass of 20 kg and radius 0.3 m.\r\n                cb.write(desc.inertia ?? 0.9, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n\r\n                // Angular damping factor of the wheel: dw/dt = -c * w.\r\n                cb.write(desc.angularDamping ?? 0.2, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n\r\n                // How much this wheel can steer (radians). Defaults to ~1.22 rad (70 degrees).\r\n                cb.write(desc.maxSteerAngle ?? 1.2217304763960306, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n                \r\n                // How much torque (Nm) the brakes can apply to this wheel.\r\n                cb.write(desc.maxBrakeTorque ?? 1500, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n\r\n                // How much torque (Nm) the hand brake can apply to this wheel (usually only applied\r\n                // to the rear wheels)\r\n                cb.write(desc.maxHandBrakeTorque ?? 4000, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    _writeDifferentials(cb) {\r\n        const differentials = this._differentials;\r\n        const count = differentials.length;\r\n\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev && count === 0) {\r\n            _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.warnOnce('Vehicle component is missing wheels differentials.' +\r\n                'Default values will make a vehicle without wheels.');\r\n        }\r\n\r\n        cb.write(count, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n\r\n        for (let i = 0; i < count; i++) {\r\n            const diff = differentials[i];\r\n\r\n            // Index (in mWheels) that represents the left wheel of this \r\n            // differential (can be -1 to indicate no wheel)\r\n            cb.write(diff.leftWheel ?? -1, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_INT32, false);\r\n\r\n            // Same as leftWheel, but for the right one.\r\n            cb.write(diff.rightWheel ?? -1, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_INT32, false);\r\n\r\n            // Ratio between rotation speed of gear box and wheels.\r\n            cb.write(diff.differentialRatio ?? 3.42, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n\r\n            // Defines how the engine torque is split across the left and right \r\n            // wheel (0 = left, 0.5 = center, 1 = right)\r\n            cb.write(diff.leftRightSplit ?? 0.5, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n\r\n            // Ratio max / min wheel speed. When this ratio is exceeded, all\r\n            // torque gets distributed to the slowest moving wheel. This allows\r\n            // implementing a limited slip differential. Set to Number.MAX_VALUE\r\n            // for an open differential. Value should be > 1.\r\n            cb.write(diff.limitedSlipRatio ?? 1.4, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n\r\n            // How much of the engines torque is applied to this differential\r\n            // (0 = none, 1 = full), make sure the sum of all differentials is 1.\r\n            cb.write(diff.engineTorqueRatio ?? 1, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        }\r\n    }\r\n\r\n    _writeAntiRollBars(cb) {\r\n        const bars = this._antiRollBars;\r\n        const count = bars.length;\r\n\r\n        cb.write(count, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n\r\n        for (let i = 0; i < count; i++) {\r\n            const bar = bars[i];\r\n\r\n            // Index (in wheels) that represents the left wheel of this anti-rollbar.\r\n            cb.write(bar.leftWheel ?? 0, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n\r\n            // Index (in wheels) that represents the right wheel of this anti-rollbar.\r\n            cb.write(bar.rightWheel ?? 1, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n\r\n            // Stiffness (spring constant in N/m) of anti rollbar, can be 0 to disable the anti-rollbar.\r\n            cb.write(bar.stiffness ?? 1000, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        }\r\n    }\r\n\r\n    static writeCurvePoints(cb, curve) {\r\n        cb.write(!!curve, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_BOOL, false);\r\n\r\n        if (curve) {\r\n            const keys = curve.keys;\r\n            const count = keys.length;\r\n\r\n            cb.write(count, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n                const key = keys[i];\r\n\r\n                cb.write(key[0], _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n                cb.write(key[1], _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    static writeGears(cb, gears) {\r\n        const count = gears.length;\r\n        cb.write(count, _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_UINT32, false);\r\n        for (let i = 0; i < count; i++) {\r\n            cb.write(gears[i], _constants_mjs__WEBPACK_IMPORTED_MODULE_2__.BUFFER_WRITE_FLOAT32, false);\r\n        }\r\n    }    \r\n}\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/physics/components/jolt/vehicle/component.mjs\n");

/***/ }),

/***/ "./src/physics/components/jolt/vehicle/system.mjs":
/*!********************************************************!*\
  !*** ./src/physics/components/jolt/vehicle/system.mjs ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VehicleComponentSystem: () => (/* binding */ VehicleComponentSystem)\n/* harmony export */ });\n/* harmony import */ var _util_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../util.mjs */ \"./src/physics/util.mjs\");\n/* harmony import */ var _body_system_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../body/system.mjs */ \"./src/physics/components/jolt/body/system.mjs\");\n/* harmony import */ var _constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n/* harmony import */ var _component_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./component.mjs */ \"./src/physics/components/jolt/vehicle/component.mjs\");\n\r\n\r\n\r\n\r\n\r\nconst schema = [\r\n    'antiRollBars',\r\n    'castFraction',\r\n    'castMaxSlopeAngle',\r\n    'castObjectLayer',\r\n    'castRadius',\r\n    'castType',\r\n    'castUp',\r\n    'clutchReleaseTime',\r\n    'clutchStrength',\r\n    'differentialLimitedSlipRatio',\r\n    'differentials',\r\n    'forward',\r\n    'gearRatios',\r\n    'inertia',\r\n    'numVelocityStepsOverride',\r\n    'leanSmoothingFactor',\r\n    'leanSpringConstant',\r\n    'leanSpringDamping',\r\n    'leanSpringIntegrationCoefficient',\r\n    'leanSpringIntegrationCoefficientDecay',\r\n    'maxLeanAngle',\r\n    'numPositionStepsOverride',\r\n    'maxPitchRollAngle',\r\n    'maxTorque',\r\n    'maxRPM',\r\n    'minRPM',\r\n    'mode',\r\n    'normalizedTorque',\r\n    'reverseGearRatios',\r\n    'shiftDownRPM',\r\n    'shiftUpRPM',\r\n    'switchLatency',\r\n    'switchTime',\r\n    'tracks',\r\n    'type',\r\n    'up',\r\n    'wheelAngularDamping',\r\n    'wheels'\r\n];\r\n\r\nclass VehicleComponentSystem extends _body_system_mjs__WEBPACK_IMPORTED_MODULE_1__.BodyComponentSystem {\r\n    constructor(app, manager, id) {\r\n        super(app, manager);\r\n\r\n        this.id = 'vehicle';\r\n        this.schema = [...this.schema, ...schema];\r\n        this.ComponentType = _component_mjs__WEBPACK_IMPORTED_MODULE_3__.VehicleComponent;\r\n\r\n        manager.systems.set(id, this);\r\n    }\r\n\r\n    createVehicle(component) {\r\n        super.createBody(component);\r\n\r\n        const cb = this._manager.commandsBuffer;\r\n\r\n        cb.writeOperator(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.OPERATOR_CREATOR);\r\n        cb.writeCommand(_constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CMD_CREATE_VEHICLE);\r\n\r\n        component.writeVehicleData(cb);\r\n    }\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGh5c2ljcy9jb21wb25lbnRzL2pvbHQvdmVoaWNsZS9zeXN0ZW0ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW1EO0FBQ007QUFDeUM7QUFDL0M7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLGlFQUFtQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDREQUFnQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsNERBQWdCO0FBQ3pDLHdCQUF3Qiw4REFBa0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL1BoeXNpY3NDb21wb25lbnRzLy4vc3JjL3BoeXNpY3MvY29tcG9uZW50cy9qb2x0L3ZlaGljbGUvc3lzdGVtLm1qcz80ODE5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJ1aWxkQWNjZXNzb3JzIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWwubWpzXCI7XHJcbmltcG9ydCB7IEJvZHlDb21wb25lbnRTeXN0ZW0gfSBmcm9tIFwiLi4vYm9keS9zeXN0ZW0ubWpzXCI7XHJcbmltcG9ydCB7IENNRF9DUkVBVEVfVkVISUNMRSwgQ09NUE9ORU5UX1NZU1RFTV9WRUhJQ0xFLCBPUEVSQVRPUl9DUkVBVE9SIH0gZnJvbSBcIi4uL2NvbnN0YW50cy5tanNcIjtcclxuaW1wb3J0IHsgVmVoaWNsZUNvbXBvbmVudCB9IGZyb20gXCIuL2NvbXBvbmVudC5tanNcIjtcclxuXHJcbmNvbnN0IHNjaGVtYSA9IFtcclxuICAgICdhbnRpUm9sbEJhcnMnLFxyXG4gICAgJ2Nhc3RGcmFjdGlvbicsXHJcbiAgICAnY2FzdE1heFNsb3BlQW5nbGUnLFxyXG4gICAgJ2Nhc3RPYmplY3RMYXllcicsXHJcbiAgICAnY2FzdFJhZGl1cycsXHJcbiAgICAnY2FzdFR5cGUnLFxyXG4gICAgJ2Nhc3RVcCcsXHJcbiAgICAnY2x1dGNoUmVsZWFzZVRpbWUnLFxyXG4gICAgJ2NsdXRjaFN0cmVuZ3RoJyxcclxuICAgICdkaWZmZXJlbnRpYWxMaW1pdGVkU2xpcFJhdGlvJyxcclxuICAgICdkaWZmZXJlbnRpYWxzJyxcclxuICAgICdmb3J3YXJkJyxcclxuICAgICdnZWFyUmF0aW9zJyxcclxuICAgICdpbmVydGlhJyxcclxuICAgICdudW1WZWxvY2l0eVN0ZXBzT3ZlcnJpZGUnLFxyXG4gICAgJ2xlYW5TbW9vdGhpbmdGYWN0b3InLFxyXG4gICAgJ2xlYW5TcHJpbmdDb25zdGFudCcsXHJcbiAgICAnbGVhblNwcmluZ0RhbXBpbmcnLFxyXG4gICAgJ2xlYW5TcHJpbmdJbnRlZ3JhdGlvbkNvZWZmaWNpZW50JyxcclxuICAgICdsZWFuU3ByaW5nSW50ZWdyYXRpb25Db2VmZmljaWVudERlY2F5JyxcclxuICAgICdtYXhMZWFuQW5nbGUnLFxyXG4gICAgJ251bVBvc2l0aW9uU3RlcHNPdmVycmlkZScsXHJcbiAgICAnbWF4UGl0Y2hSb2xsQW5nbGUnLFxyXG4gICAgJ21heFRvcnF1ZScsXHJcbiAgICAnbWF4UlBNJyxcclxuICAgICdtaW5SUE0nLFxyXG4gICAgJ21vZGUnLFxyXG4gICAgJ25vcm1hbGl6ZWRUb3JxdWUnLFxyXG4gICAgJ3JldmVyc2VHZWFyUmF0aW9zJyxcclxuICAgICdzaGlmdERvd25SUE0nLFxyXG4gICAgJ3NoaWZ0VXBSUE0nLFxyXG4gICAgJ3N3aXRjaExhdGVuY3knLFxyXG4gICAgJ3N3aXRjaFRpbWUnLFxyXG4gICAgJ3RyYWNrcycsXHJcbiAgICAndHlwZScsXHJcbiAgICAndXAnLFxyXG4gICAgJ3doZWVsQW5ndWxhckRhbXBpbmcnLFxyXG4gICAgJ3doZWVscydcclxuXTtcclxuXHJcbmNsYXNzIFZlaGljbGVDb21wb25lbnRTeXN0ZW0gZXh0ZW5kcyBCb2R5Q29tcG9uZW50U3lzdGVtIHtcclxuICAgIGNvbnN0cnVjdG9yKGFwcCwgbWFuYWdlciwgaWQpIHtcclxuICAgICAgICBzdXBlcihhcHAsIG1hbmFnZXIpO1xyXG5cclxuICAgICAgICB0aGlzLmlkID0gJ3ZlaGljbGUnO1xyXG4gICAgICAgIHRoaXMuc2NoZW1hID0gWy4uLnRoaXMuc2NoZW1hLCAuLi5zY2hlbWFdO1xyXG4gICAgICAgIHRoaXMuQ29tcG9uZW50VHlwZSA9IFZlaGljbGVDb21wb25lbnQ7XHJcblxyXG4gICAgICAgIG1hbmFnZXIuc3lzdGVtcy5zZXQoaWQsIHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIGNyZWF0ZVZlaGljbGUoY29tcG9uZW50KSB7XHJcbiAgICAgICAgc3VwZXIuY3JlYXRlQm9keShjb21wb25lbnQpO1xyXG5cclxuICAgICAgICBjb25zdCBjYiA9IHRoaXMuX21hbmFnZXIuY29tbWFuZHNCdWZmZXI7XHJcblxyXG4gICAgICAgIGNiLndyaXRlT3BlcmF0b3IoT1BFUkFUT1JfQ1JFQVRPUik7XHJcbiAgICAgICAgY2Iud3JpdGVDb21tYW5kKENNRF9DUkVBVEVfVkVISUNMRSk7XHJcblxyXG4gICAgICAgIGNvbXBvbmVudC53cml0ZVZlaGljbGVEYXRhKGNiKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IHsgVmVoaWNsZUNvbXBvbmVudFN5c3RlbSB9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/physics/components/jolt/vehicle/system.mjs\n");

/***/ }),

/***/ "./src/physics/debug.mjs":
/*!*******************************!*\
  !*** ./src/physics/debug.mjs ***!
  \*******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Debug: () => (/* binding */ Debug)\n/* harmony export */ });\nclass Debug {\r\n    static _logged = new Set();\r\n\r\n    static dev = (\"development\" === 'development');\r\n\r\n    static log(...attr) {\r\n        console.log(...attr);\r\n    }\r\n\r\n    static logOnce(msg, ...attr) {\r\n        if (!Debug._logged.has(msg)) {\r\n            Debug._logged.add(msg);\r\n            console.log(msg, ...attr);\r\n        }\r\n    }\r\n\r\n    static warn(...attr) {\r\n        console.warn(...attr);\r\n    }\r\n\r\n    static warnOnce(msg, ...attr) {\r\n        if (!Debug._logged.has(msg)) {\r\n            Debug._logged.add(msg);\r\n            console.warn(msg, ...attr);\r\n        }\r\n    }\r\n\r\n    static error(...attr) {\r\n        console.error(...attr);\r\n    }\r\n    \r\n    static errorOnce(...attr) {\r\n        if (!Debug._logged.has(attr[0])) {\r\n            Debug._logged.add(attr[0]);\r\n            Debug.error(...attr);\r\n        }\r\n    }\r\n\r\n    static assert(test, ...attr) {\r\n        if (!test) {\r\n            Debug.errorOnce('Assert Error:', test, ...attr);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static checkRange(number, min, max, msg) {\r\n        let ok = Debug.checkFloat(number, msg);\r\n        ok = ok && Debug.assert(number >= min, msg);\r\n        ok = ok && Debug.assert(number <= max, msg);\r\n        return ok;\r\n    }   \r\n\r\n    static checkInt(number, msg) {\r\n        const ok = Debug.assert(Number.isInteger(number), msg);\r\n        return ok;\r\n    }    \r\n\r\n    static checkUint(number, msg) {\r\n        let ok = Debug.checkInt(number, msg);\r\n        ok = ok && Debug.assert(number >= 0, msg);\r\n        return ok;\r\n    }\r\n\r\n    static checkFloat(number, msg) {\r\n        let ok = Debug.assert(typeof number === 'number', msg);\r\n        ok = ok && Debug.assert(!isNaN(number), msg);\r\n        return ok;\r\n    }\r\n\r\n    static checkFloatPositive(number, msg) {\r\n        let ok = Debug.checkFloat(number, msg);\r\n        ok = ok && Debug.assert(number >= 0, msg);\r\n        return ok;\r\n    }\r\n\r\n    static checkBool(bool, msg) {\r\n        return Debug.assert((bool === true || bool === false), msg);\r\n    }\r\n\r\n    static checkVec(vec, msg) {\r\n        let ok = Debug.checkFloat(vec.x, msg);\r\n        ok = ok && Debug.checkFloat(vec.y, msg);\r\n        ok = ok && Debug.checkFloat(vec.z, msg);\r\n        return ok;\r\n    }\r\n\r\n    static checkVecPositive(vec, msg) {\r\n        let ok = Debug.checkFloatPositive(vec.x, msg);\r\n        ok = ok && Debug.checkFloatPositive(vec.y, msg);\r\n        ok = ok && Debug.checkFloatPositive(vec.z, msg);\r\n        return ok;\r\n    }\r\n\r\n    static checkQuat(quat, msg) {\r\n        let ok = true;\r\n        ok = ok && Debug.checkVec(quat, msg);\r\n        ok = ok && Debug.checkFloat(quat.w, msg);\r\n        return ok;\r\n    }\r\n\r\n    static verifyProperties(data, schema) {\r\n        let ok = true;\r\n        Object.entries(data).forEach(entry => {\r\n            let found = false;\r\n            for (let i = 0, end = schema.length; i < end; i++) {\r\n                if (entry[0] === schema[i]) {\r\n                    found = true;\r\n                }\r\n            }\r\n            ok = ok && Debug.assert(found, `Component: Unrecognized options property: ${ entry }`);\r\n        });\r\n\r\n        return ok;\r\n    }\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGh5c2ljcy9kZWJ1Zy5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixhQUFvQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELFNBQVM7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RkFBeUYsT0FBTztBQUNoRyxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL1BoeXNpY3NDb21wb25lbnRzLy4vc3JjL3BoeXNpY3MvZGVidWcubWpzPzY1MTIiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgRGVidWcge1xyXG4gICAgc3RhdGljIF9sb2dnZWQgPSBuZXcgU2V0KCk7XHJcblxyXG4gICAgc3RhdGljIGRldiA9IChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jyk7XHJcblxyXG4gICAgc3RhdGljIGxvZyguLi5hdHRyKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coLi4uYXR0cik7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGxvZ09uY2UobXNnLCAuLi5hdHRyKSB7XHJcbiAgICAgICAgaWYgKCFEZWJ1Zy5fbG9nZ2VkLmhhcyhtc2cpKSB7XHJcbiAgICAgICAgICAgIERlYnVnLl9sb2dnZWQuYWRkKG1zZyk7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKG1zZywgLi4uYXR0cik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyB3YXJuKC4uLmF0dHIpIHtcclxuICAgICAgICBjb25zb2xlLndhcm4oLi4uYXR0cik7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIHdhcm5PbmNlKG1zZywgLi4uYXR0cikge1xyXG4gICAgICAgIGlmICghRGVidWcuX2xvZ2dlZC5oYXMobXNnKSkge1xyXG4gICAgICAgICAgICBEZWJ1Zy5fbG9nZ2VkLmFkZChtc2cpO1xyXG4gICAgICAgICAgICBjb25zb2xlLndhcm4obXNnLCAuLi5hdHRyKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGVycm9yKC4uLmF0dHIpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKC4uLmF0dHIpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBzdGF0aWMgZXJyb3JPbmNlKC4uLmF0dHIpIHtcclxuICAgICAgICBpZiAoIURlYnVnLl9sb2dnZWQuaGFzKGF0dHJbMF0pKSB7XHJcbiAgICAgICAgICAgIERlYnVnLl9sb2dnZWQuYWRkKGF0dHJbMF0pO1xyXG4gICAgICAgICAgICBEZWJ1Zy5lcnJvciguLi5hdHRyKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzc2VydCh0ZXN0LCAuLi5hdHRyKSB7XHJcbiAgICAgICAgaWYgKCF0ZXN0KSB7XHJcbiAgICAgICAgICAgIERlYnVnLmVycm9yT25jZSgnQXNzZXJ0IEVycm9yOicsIHRlc3QsIC4uLmF0dHIpO1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBjaGVja1JhbmdlKG51bWJlciwgbWluLCBtYXgsIG1zZykge1xyXG4gICAgICAgIGxldCBvayA9IERlYnVnLmNoZWNrRmxvYXQobnVtYmVyLCBtc2cpO1xyXG4gICAgICAgIG9rID0gb2sgJiYgRGVidWcuYXNzZXJ0KG51bWJlciA+PSBtaW4sIG1zZyk7XHJcbiAgICAgICAgb2sgPSBvayAmJiBEZWJ1Zy5hc3NlcnQobnVtYmVyIDw9IG1heCwgbXNnKTtcclxuICAgICAgICByZXR1cm4gb2s7XHJcbiAgICB9ICAgXHJcblxyXG4gICAgc3RhdGljIGNoZWNrSW50KG51bWJlciwgbXNnKSB7XHJcbiAgICAgICAgY29uc3Qgb2sgPSBEZWJ1Zy5hc3NlcnQoTnVtYmVyLmlzSW50ZWdlcihudW1iZXIpLCBtc2cpO1xyXG4gICAgICAgIHJldHVybiBvaztcclxuICAgIH0gICAgXHJcblxyXG4gICAgc3RhdGljIGNoZWNrVWludChudW1iZXIsIG1zZykge1xyXG4gICAgICAgIGxldCBvayA9IERlYnVnLmNoZWNrSW50KG51bWJlciwgbXNnKTtcclxuICAgICAgICBvayA9IG9rICYmIERlYnVnLmFzc2VydChudW1iZXIgPj0gMCwgbXNnKTtcclxuICAgICAgICByZXR1cm4gb2s7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGNoZWNrRmxvYXQobnVtYmVyLCBtc2cpIHtcclxuICAgICAgICBsZXQgb2sgPSBEZWJ1Zy5hc3NlcnQodHlwZW9mIG51bWJlciA9PT0gJ251bWJlcicsIG1zZyk7XHJcbiAgICAgICAgb2sgPSBvayAmJiBEZWJ1Zy5hc3NlcnQoIWlzTmFOKG51bWJlciksIG1zZyk7XHJcbiAgICAgICAgcmV0dXJuIG9rO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBjaGVja0Zsb2F0UG9zaXRpdmUobnVtYmVyLCBtc2cpIHtcclxuICAgICAgICBsZXQgb2sgPSBEZWJ1Zy5jaGVja0Zsb2F0KG51bWJlciwgbXNnKTtcclxuICAgICAgICBvayA9IG9rICYmIERlYnVnLmFzc2VydChudW1iZXIgPj0gMCwgbXNnKTtcclxuICAgICAgICByZXR1cm4gb2s7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGNoZWNrQm9vbChib29sLCBtc2cpIHtcclxuICAgICAgICByZXR1cm4gRGVidWcuYXNzZXJ0KChib29sID09PSB0cnVlIHx8IGJvb2wgPT09IGZhbHNlKSwgbXNnKTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgY2hlY2tWZWModmVjLCBtc2cpIHtcclxuICAgICAgICBsZXQgb2sgPSBEZWJ1Zy5jaGVja0Zsb2F0KHZlYy54LCBtc2cpO1xyXG4gICAgICAgIG9rID0gb2sgJiYgRGVidWcuY2hlY2tGbG9hdCh2ZWMueSwgbXNnKTtcclxuICAgICAgICBvayA9IG9rICYmIERlYnVnLmNoZWNrRmxvYXQodmVjLnosIG1zZyk7XHJcbiAgICAgICAgcmV0dXJuIG9rO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBjaGVja1ZlY1Bvc2l0aXZlKHZlYywgbXNnKSB7XHJcbiAgICAgICAgbGV0IG9rID0gRGVidWcuY2hlY2tGbG9hdFBvc2l0aXZlKHZlYy54LCBtc2cpO1xyXG4gICAgICAgIG9rID0gb2sgJiYgRGVidWcuY2hlY2tGbG9hdFBvc2l0aXZlKHZlYy55LCBtc2cpO1xyXG4gICAgICAgIG9rID0gb2sgJiYgRGVidWcuY2hlY2tGbG9hdFBvc2l0aXZlKHZlYy56LCBtc2cpO1xyXG4gICAgICAgIHJldHVybiBvaztcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgY2hlY2tRdWF0KHF1YXQsIG1zZykge1xyXG4gICAgICAgIGxldCBvayA9IHRydWU7XHJcbiAgICAgICAgb2sgPSBvayAmJiBEZWJ1Zy5jaGVja1ZlYyhxdWF0LCBtc2cpO1xyXG4gICAgICAgIG9rID0gb2sgJiYgRGVidWcuY2hlY2tGbG9hdChxdWF0LncsIG1zZyk7XHJcbiAgICAgICAgcmV0dXJuIG9rO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyB2ZXJpZnlQcm9wZXJ0aWVzKGRhdGEsIHNjaGVtYSkge1xyXG4gICAgICAgIGxldCBvayA9IHRydWU7XHJcbiAgICAgICAgT2JqZWN0LmVudHJpZXMoZGF0YSkuZm9yRWFjaChlbnRyeSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBmb3VuZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMCwgZW5kID0gc2NoZW1hLmxlbmd0aDsgaSA8IGVuZDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZW50cnlbMF0gPT09IHNjaGVtYVtpXSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvdW5kID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBvayA9IG9rICYmIERlYnVnLmFzc2VydChmb3VuZCwgYENvbXBvbmVudDogVW5yZWNvZ25pemVkIG9wdGlvbnMgcHJvcGVydHk6ICR7IGVudHJ5IH1gKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG9rO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBEZWJ1ZyB9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/physics/debug.mjs\n");

/***/ }),

/***/ "./src/physics/dispatcher.mjs":
/*!************************************!*\
  !*** ./src/physics/dispatcher.mjs ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Dispatcher: () => (/* binding */ Dispatcher)\n/* harmony export */ });\n/* harmony import */ var _backends_jolt_backend_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../backends/jolt/backend.mjs */ \"./src/backends/jolt/backend.mjs\");\n/* harmony import */ var _debug_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug.mjs */ \"./src/physics/debug.mjs\");\n\r\n\r\n\r\nlet backend = null;\r\n\r\nfunction createBackend(messenger, data) {\r\n    // const { backendName, url, config } = data;\r\n    switch (data.backendName) {\r\n        case 'jolt':\r\n            backend = new _backends_jolt_backend_mjs__WEBPACK_IMPORTED_MODULE_0__.JoltBackend(messenger, data);\r\n            break;\r\n\r\n        // intentional fall-through\r\n        case 'ammo':\r\n        case 'rapier':\r\n        case 'physx':\r\n            _debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.warn(`Invalid backend selection: ${ backend }`);\r\n            break;\r\n\r\n        default:\r\n            _debug_mjs__WEBPACK_IMPORTED_MODULE_1__.Debug.warn(`Invalid backend selection: ${ backend }`);\r\n    }\r\n}\r\n\r\nclass Dispatcher {\r\n    constructor(manager = null) {\r\n        this._useMainThread = !!manager;\r\n        this._manager = manager;\r\n        this._destroying = false;\r\n\r\n        if (!manager) {\r\n            this.postMessage = self.postMessage;\r\n        }\r\n    }\r\n\r\n    postMessage(msg) {\r\n        this.handleMessage(msg);\r\n    }\r\n\r\n    handleMessage(data) {\r\n        if (this._destroying) return;\r\n\r\n        switch (data.type) {\r\n            case 'step':\r\n                backend?.step(data);\r\n                break;\r\n\r\n            case 'create-backend':\r\n                createBackend(this, data);\r\n                // If we don't use a Web Worker, expose the backend instance to main thread for dev convenience\r\n                if (this._manager) {\r\n                    this._manager.backend = backend;\r\n                }\r\n                break;\r\n\r\n            case 'override-contacts':\r\n                backend?.overrideContacts(data.listener, data.overrides);\r\n                break;\r\n\r\n            case 'destroy':\r\n                this.destroy();\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this._destroying = true;\r\n\r\n        backend.destroy();\r\n        backend = null;\r\n        self.onmessage = (e) => {};\r\n        dispatcher = null;\r\n    }\r\n\r\n    respond(msg, buffers) {\r\n        if (this._useMainThread) {\r\n            this._manager.onMessage(msg);\r\n        } else {\r\n            self.postMessage(msg, buffers);\r\n        }\r\n    }\r\n}\r\n\r\nlet dispatcher = new Dispatcher();\r\n\r\nself.onmessage = function(event) {\r\n    const data = event.data;\r\n    if (data?.origin !== 'physics-manager') return;\r\n    dispatcher.handleMessage(data);\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGh5c2ljcy9kaXNwYXRjaGVyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMkQ7QUFDdkI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDJCQUEyQjtBQUMxQztBQUNBO0FBQ0EsMEJBQTBCLG1FQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksNkNBQUsscUNBQXFDLFNBQVM7QUFDL0Q7QUFDQTtBQUNBO0FBQ0EsWUFBWSw2Q0FBSyxxQ0FBcUMsU0FBUztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUGh5c2ljc0NvbXBvbmVudHMvLi9zcmMvcGh5c2ljcy9kaXNwYXRjaGVyLm1qcz8zNTQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEpvbHRCYWNrZW5kIH0gZnJvbSBcIi4uL2JhY2tlbmRzL2pvbHQvYmFja2VuZC5tanNcIjtcclxuaW1wb3J0IHsgRGVidWcgfSBmcm9tIFwiLi9kZWJ1Zy5tanNcIjtcclxuXHJcbmxldCBiYWNrZW5kID0gbnVsbDtcclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZUJhY2tlbmQobWVzc2VuZ2VyLCBkYXRhKSB7XHJcbiAgICAvLyBjb25zdCB7IGJhY2tlbmROYW1lLCB1cmwsIGNvbmZpZyB9ID0gZGF0YTtcclxuICAgIHN3aXRjaCAoZGF0YS5iYWNrZW5kTmFtZSkge1xyXG4gICAgICAgIGNhc2UgJ2pvbHQnOlxyXG4gICAgICAgICAgICBiYWNrZW5kID0gbmV3IEpvbHRCYWNrZW5kKG1lc3NlbmdlciwgZGF0YSk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAvLyBpbnRlbnRpb25hbCBmYWxsLXRocm91Z2hcclxuICAgICAgICBjYXNlICdhbW1vJzpcclxuICAgICAgICBjYXNlICdyYXBpZXInOlxyXG4gICAgICAgIGNhc2UgJ3BoeXN4JzpcclxuICAgICAgICAgICAgRGVidWcud2FybihgSW52YWxpZCBiYWNrZW5kIHNlbGVjdGlvbjogJHsgYmFja2VuZCB9YCk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICBEZWJ1Zy53YXJuKGBJbnZhbGlkIGJhY2tlbmQgc2VsZWN0aW9uOiAkeyBiYWNrZW5kIH1gKTtcclxuICAgIH1cclxufVxyXG5cclxuY2xhc3MgRGlzcGF0Y2hlciB7XHJcbiAgICBjb25zdHJ1Y3RvcihtYW5hZ2VyID0gbnVsbCkge1xyXG4gICAgICAgIHRoaXMuX3VzZU1haW5UaHJlYWQgPSAhIW1hbmFnZXI7XHJcbiAgICAgICAgdGhpcy5fbWFuYWdlciA9IG1hbmFnZXI7XHJcbiAgICAgICAgdGhpcy5fZGVzdHJveWluZyA9IGZhbHNlO1xyXG5cclxuICAgICAgICBpZiAoIW1hbmFnZXIpIHtcclxuICAgICAgICAgICAgdGhpcy5wb3N0TWVzc2FnZSA9IHNlbGYucG9zdE1lc3NhZ2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHBvc3RNZXNzYWdlKG1zZykge1xyXG4gICAgICAgIHRoaXMuaGFuZGxlTWVzc2FnZShtc2cpO1xyXG4gICAgfVxyXG5cclxuICAgIGhhbmRsZU1lc3NhZ2UoZGF0YSkge1xyXG4gICAgICAgIGlmICh0aGlzLl9kZXN0cm95aW5nKSByZXR1cm47XHJcblxyXG4gICAgICAgIHN3aXRjaCAoZGF0YS50eXBlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgJ3N0ZXAnOlxyXG4gICAgICAgICAgICAgICAgYmFja2VuZD8uc3RlcChkYXRhKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgY2FzZSAnY3JlYXRlLWJhY2tlbmQnOlxyXG4gICAgICAgICAgICAgICAgY3JlYXRlQmFja2VuZCh0aGlzLCBkYXRhKTtcclxuICAgICAgICAgICAgICAgIC8vIElmIHdlIGRvbid0IHVzZSBhIFdlYiBXb3JrZXIsIGV4cG9zZSB0aGUgYmFja2VuZCBpbnN0YW5jZSB0byBtYWluIHRocmVhZCBmb3IgZGV2IGNvbnZlbmllbmNlXHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fbWFuYWdlcikge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX21hbmFnZXIuYmFja2VuZCA9IGJhY2tlbmQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgIGNhc2UgJ292ZXJyaWRlLWNvbnRhY3RzJzpcclxuICAgICAgICAgICAgICAgIGJhY2tlbmQ/Lm92ZXJyaWRlQ29udGFjdHMoZGF0YS5saXN0ZW5lciwgZGF0YS5vdmVycmlkZXMpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICBjYXNlICdkZXN0cm95JzpcclxuICAgICAgICAgICAgICAgIHRoaXMuZGVzdHJveSgpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGRlc3Ryb3koKSB7XHJcbiAgICAgICAgdGhpcy5fZGVzdHJveWluZyA9IHRydWU7XHJcblxyXG4gICAgICAgIGJhY2tlbmQuZGVzdHJveSgpO1xyXG4gICAgICAgIGJhY2tlbmQgPSBudWxsO1xyXG4gICAgICAgIHNlbGYub25tZXNzYWdlID0gKGUpID0+IHt9O1xyXG4gICAgICAgIGRpc3BhdGNoZXIgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHJlc3BvbmQobXNnLCBidWZmZXJzKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX3VzZU1haW5UaHJlYWQpIHtcclxuICAgICAgICAgICAgdGhpcy5fbWFuYWdlci5vbk1lc3NhZ2UobXNnKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBzZWxmLnBvc3RNZXNzYWdlKG1zZywgYnVmZmVycyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5sZXQgZGlzcGF0Y2hlciA9IG5ldyBEaXNwYXRjaGVyKCk7XHJcblxyXG5zZWxmLm9ubWVzc2FnZSA9IGZ1bmN0aW9uKGV2ZW50KSB7XHJcbiAgICBjb25zdCBkYXRhID0gZXZlbnQuZGF0YTtcclxuICAgIGlmIChkYXRhPy5vcmlnaW4gIT09ICdwaHlzaWNzLW1hbmFnZXInKSByZXR1cm47XHJcbiAgICBkaXNwYXRjaGVyLmhhbmRsZU1lc3NhZ2UoZGF0YSk7XHJcbn1cclxuXHJcbmV4cG9ydCB7IERpc3BhdGNoZXIgfTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/physics/dispatcher.mjs\n");

/***/ }),

/***/ "./src/physics/indexed-cache.mjs":
/*!***************************************!*\
  !*** ./src/physics/indexed-cache.mjs ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IndexedCache: () => (/* binding */ IndexedCache)\n/* harmony export */ });\nclass IndexedCache {\r\n    constructor() {\r\n        this._index = 0;\r\n        this._freed = [];\r\n        this._storage = [];\r\n    }\r\n\r\n    add(element) {\r\n        const index = this._freed.pop() ?? this._index++; \r\n        this._storage[index] = element;\r\n        return index;\r\n    }\r\n\r\n    get(index) {\r\n        return this._storage[index];\r\n    }\r\n\r\n    free(index) {\r\n        this._storage[index] = null;\r\n        this._freed.push(index);\r\n    }\r\n\r\n    clear() {\r\n        this._index = 0;\r\n        this._freed.length = 0;\r\n        this._storage.length = 0;\r\n    }\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGh5c2ljcy9pbmRleGVkLWNhY2hlLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL1BoeXNpY3NDb21wb25lbnRzLy4vc3JjL3BoeXNpY3MvaW5kZXhlZC1jYWNoZS5tanM/NWEwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBJbmRleGVkQ2FjaGUge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5faW5kZXggPSAwO1xyXG4gICAgICAgIHRoaXMuX2ZyZWVkID0gW107XHJcbiAgICAgICAgdGhpcy5fc3RvcmFnZSA9IFtdO1xyXG4gICAgfVxyXG5cclxuICAgIGFkZChlbGVtZW50KSB7XHJcbiAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLl9mcmVlZC5wb3AoKSA/PyB0aGlzLl9pbmRleCsrOyBcclxuICAgICAgICB0aGlzLl9zdG9yYWdlW2luZGV4XSA9IGVsZW1lbnQ7XHJcbiAgICAgICAgcmV0dXJuIGluZGV4O1xyXG4gICAgfVxyXG5cclxuICAgIGdldChpbmRleCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9zdG9yYWdlW2luZGV4XTtcclxuICAgIH1cclxuXHJcbiAgICBmcmVlKGluZGV4KSB7XHJcbiAgICAgICAgdGhpcy5fc3RvcmFnZVtpbmRleF0gPSBudWxsO1xyXG4gICAgICAgIHRoaXMuX2ZyZWVkLnB1c2goaW5kZXgpO1xyXG4gICAgfVxyXG5cclxuICAgIGNsZWFyKCkge1xyXG4gICAgICAgIHRoaXMuX2luZGV4ID0gMDtcclxuICAgICAgICB0aGlzLl9mcmVlZC5sZW5ndGggPSAwO1xyXG4gICAgICAgIHRoaXMuX3N0b3JhZ2UubGVuZ3RoID0gMDtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IHsgSW5kZXhlZENhY2hlIH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/physics/indexed-cache.mjs\n");

/***/ }),

/***/ "./src/physics/init.mjs":
/*!******************************!*\
  !*** ./src/physics/init.mjs ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   init: () => (/* binding */ init)\n/* harmony export */ });\n/* harmony import */ var _components_jolt_body_system_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/jolt/body/system.mjs */ \"./src/physics/components/jolt/body/system.mjs\");\n/* harmony import */ var _components_jolt_char_system_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/jolt/char/system.mjs */ \"./src/physics/components/jolt/char/system.mjs\");\n/* harmony import */ var _components_jolt_vehicle_system_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/jolt/vehicle/system.mjs */ \"./src/physics/components/jolt/vehicle/system.mjs\");\n/* harmony import */ var _debug_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./debug.mjs */ \"./src/physics/debug.mjs\");\n/* harmony import */ var _components_jolt_manager_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/jolt/manager.mjs */ \"./src/physics/components/jolt/manager.mjs\");\n/* harmony import */ var _components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/jolt/constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n/* harmony import */ var _components_jolt_softbody_system_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/jolt/softbody/system.mjs */ \"./src/physics/components/jolt/softbody/system.mjs\");\n/* harmony import */ var _math_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./math.mjs */ \"./src/physics/math.mjs\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Override chunk location in order for the engine to locate them in PlayCanvas Editor.\r\nconst oldFn = __webpack_require__.u;\r\n__webpack_require__.u = (chunkId) => {\r\n    const filename = oldFn(chunkId);\r\n    const app = pc.Application.getApplication();\r\n    const asset = app.assets.find(filename, 'script');\r\n    const url = asset.getFileUrl();\r\n    return url;\r\n};\r\n\r\n// TODO\r\n// Once we add webworker support, init should be changed to async\r\n// function and wait for worker response to resolve.\r\n\r\nfunction init(app = pc.Application.getApplication(), opts = {}) {\r\n    const options = {\r\n        backend: 'jolt',\r\n        propertyName: 'physics',\r\n        ...opts\r\n    };\r\n\r\n    (0,_math_mjs__WEBPACK_IMPORTED_MODULE_7__.extendPCMath)();\r\n\r\n    const { backend, propertyName } = options;\r\n\r\n    if (backend === 'jolt') {\r\n        if (app[propertyName]) {\r\n            _debug_mjs__WEBPACK_IMPORTED_MODULE_3__.Debug.dev && _debug_mjs__WEBPACK_IMPORTED_MODULE_3__.Debug.warn(`Unable to initialize Physics Manager. Application has an existing property name that conflicts. ` + \r\n                `Tried to use \"app.${ propertyName }\". Use { propertyName: string } in init options to use a custom property name. Aborting.`);\r\n            return;\r\n        }\r\n\r\n        function onReady() {\r\n            app.on('destroy', () => destroy());\r\n\r\n            resolve();\r\n        }\r\n        \r\n        return new Promise((resolve, reject) => {\r\n            const manager = new _components_jolt_manager_mjs__WEBPACK_IMPORTED_MODULE_4__.JoltManager(app, options, resolve);\r\n            app[propertyName] = manager;\r\n        });\r\n    }\r\n\r\n    function destroy() {\r\n        app[propertyName].destroy();\r\n        app[propertyName] = null;\r\n    }\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGh5c2ljcy9pbml0Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBd0U7QUFDQTtBQUNNO0FBQzFDO0FBQ3dCO0FBR25CO0FBQ3VDO0FBQ3RDO0FBQzFDO0FBQ0E7QUFDQSxjQUFjLHFCQUErQjtBQUM3QyxxQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RDtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHVEQUFZO0FBQ2hCO0FBQ0EsWUFBWSx3QkFBd0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsWUFBWSw2Q0FBSyxRQUFRLDZDQUFLO0FBQzlCLHNDQUFzQyxjQUFjLFNBQVMsdUJBQXVCO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLHFFQUFXO0FBQzNDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9QaHlzaWNzQ29tcG9uZW50cy8uL3NyYy9waHlzaWNzL2luaXQubWpzP2EwYzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQm9keUNvbXBvbmVudFN5c3RlbSB9IGZyb20gXCIuL2NvbXBvbmVudHMvam9sdC9ib2R5L3N5c3RlbS5tanNcIjtcclxuaW1wb3J0IHsgQ2hhckNvbXBvbmVudFN5c3RlbSB9IGZyb20gXCIuL2NvbXBvbmVudHMvam9sdC9jaGFyL3N5c3RlbS5tanNcIjtcclxuaW1wb3J0IHsgVmVoaWNsZUNvbXBvbmVudFN5c3RlbSB9IGZyb20gXCIuL2NvbXBvbmVudHMvam9sdC92ZWhpY2xlL3N5c3RlbS5tanNcIjtcclxuaW1wb3J0IHsgRGVidWcgfSBmcm9tIFwiLi9kZWJ1Zy5tanNcIjtcclxuaW1wb3J0IHsgSm9sdE1hbmFnZXIgfSBmcm9tIFwiLi9jb21wb25lbnRzL2pvbHQvbWFuYWdlci5tanNcIjtcclxuaW1wb3J0IHsgXHJcbiAgICBDT01QT05FTlRfU1lTVEVNX0JPRFksIENPTVBPTkVOVF9TWVNURU1fQ0hBUiwgQ09NUE9ORU5UX1NZU1RFTV9TT0ZUX0JPRFksIENPTVBPTkVOVF9TWVNURU1fVkVISUNMRVxyXG59IGZyb20gXCIuL2NvbXBvbmVudHMvam9sdC9jb25zdGFudHMubWpzXCI7XHJcbmltcG9ydCB7IFNvZnRCb2R5Q29tcG9uZW50U3lzdGVtIH0gZnJvbSBcIi4vY29tcG9uZW50cy9qb2x0L3NvZnRib2R5L3N5c3RlbS5tanNcIjtcclxuaW1wb3J0IHsgZXh0ZW5kUENNYXRoIH0gZnJvbSBcIi4vbWF0aC5tanNcIjtcclxuXHJcbi8vIE92ZXJyaWRlIGNodW5rIGxvY2F0aW9uIGluIG9yZGVyIGZvciB0aGUgZW5naW5lIHRvIGxvY2F0ZSB0aGVtIGluIFBsYXlDYW52YXMgRWRpdG9yLlxyXG5jb25zdCBvbGRGbiA9IF9fd2VicGFja19nZXRfc2NyaXB0X2ZpbGVuYW1lX187XHJcbl9fd2VicGFja19nZXRfc2NyaXB0X2ZpbGVuYW1lX18gPSAoY2h1bmtJZCkgPT4ge1xyXG4gICAgY29uc3QgZmlsZW5hbWUgPSBvbGRGbihjaHVua0lkKTtcclxuICAgIGNvbnN0IGFwcCA9IHBjLkFwcGxpY2F0aW9uLmdldEFwcGxpY2F0aW9uKCk7XHJcbiAgICBjb25zdCBhc3NldCA9IGFwcC5hc3NldHMuZmluZChmaWxlbmFtZSwgJ3NjcmlwdCcpO1xyXG4gICAgY29uc3QgdXJsID0gYXNzZXQuZ2V0RmlsZVVybCgpO1xyXG4gICAgcmV0dXJuIHVybDtcclxufTtcclxuXHJcbi8vIFRPRE9cclxuLy8gT25jZSB3ZSBhZGQgd2Vid29ya2VyIHN1cHBvcnQsIGluaXQgc2hvdWxkIGJlIGNoYW5nZWQgdG8gYXN5bmNcclxuLy8gZnVuY3Rpb24gYW5kIHdhaXQgZm9yIHdvcmtlciByZXNwb25zZSB0byByZXNvbHZlLlxyXG5cclxuZnVuY3Rpb24gaW5pdChhcHAgPSBwYy5BcHBsaWNhdGlvbi5nZXRBcHBsaWNhdGlvbigpLCBvcHRzID0ge30pIHtcclxuICAgIGNvbnN0IG9wdGlvbnMgPSB7XHJcbiAgICAgICAgYmFja2VuZDogJ2pvbHQnLFxyXG4gICAgICAgIHByb3BlcnR5TmFtZTogJ3BoeXNpY3MnLFxyXG4gICAgICAgIC4uLm9wdHNcclxuICAgIH07XHJcblxyXG4gICAgZXh0ZW5kUENNYXRoKCk7XHJcblxyXG4gICAgY29uc3QgeyBiYWNrZW5kLCBwcm9wZXJ0eU5hbWUgfSA9IG9wdGlvbnM7XHJcblxyXG4gICAgaWYgKGJhY2tlbmQgPT09ICdqb2x0Jykge1xyXG4gICAgICAgIGlmIChhcHBbcHJvcGVydHlOYW1lXSkge1xyXG4gICAgICAgICAgICBEZWJ1Zy5kZXYgJiYgRGVidWcud2FybihgVW5hYmxlIHRvIGluaXRpYWxpemUgUGh5c2ljcyBNYW5hZ2VyLiBBcHBsaWNhdGlvbiBoYXMgYW4gZXhpc3RpbmcgcHJvcGVydHkgbmFtZSB0aGF0IGNvbmZsaWN0cy4gYCArIFxyXG4gICAgICAgICAgICAgICAgYFRyaWVkIHRvIHVzZSBcImFwcC4keyBwcm9wZXJ0eU5hbWUgfVwiLiBVc2UgeyBwcm9wZXJ0eU5hbWU6IHN0cmluZyB9IGluIGluaXQgb3B0aW9ucyB0byB1c2UgYSBjdXN0b20gcHJvcGVydHkgbmFtZS4gQWJvcnRpbmcuYCk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIG9uUmVhZHkoKSB7XHJcbiAgICAgICAgICAgIGFwcC5vbignZGVzdHJveScsICgpID0+IGRlc3Ryb3koKSk7XHJcblxyXG4gICAgICAgICAgICByZXNvbHZlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IG1hbmFnZXIgPSBuZXcgSm9sdE1hbmFnZXIoYXBwLCBvcHRpb25zLCByZXNvbHZlKTtcclxuICAgICAgICAgICAgYXBwW3Byb3BlcnR5TmFtZV0gPSBtYW5hZ2VyO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGRlc3Ryb3koKSB7XHJcbiAgICAgICAgYXBwW3Byb3BlcnR5TmFtZV0uZGVzdHJveSgpO1xyXG4gICAgICAgIGFwcFtwcm9wZXJ0eU5hbWVdID0gbnVsbDtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IHsgaW5pdCB9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/physics/init.mjs\n");

/***/ }),

/***/ "./src/physics/manager.mjs":
/*!*********************************!*\
  !*** ./src/physics/manager.mjs ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PhysicsManager: () => (/* binding */ PhysicsManager)\n/* harmony export */ });\n/* harmony import */ var _package_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../package.json */ \"./package.json\");\n/* harmony import */ var _backends_jolt_commands_buffer_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../backends/jolt/commands-buffer.mjs */ \"./src/backends/jolt/commands-buffer.mjs\");\n/* harmony import */ var _debug_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./debug.mjs */ \"./src/physics/debug.mjs\");\n/* harmony import */ var _dispatcher_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dispatcher.mjs */ \"./src/physics/dispatcher.mjs\");\n/* harmony import */ var _indexed_cache_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./indexed-cache.mjs */ \"./src/physics/indexed-cache.mjs\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass PhysicsManager {\r\n    constructor(app, backendName, opts = {}) {\r\n        const config = {\r\n            useSharedArrayBuffer: true,\r\n            commandsBufferSize: 10000, // bytes, 10k is enough to update about 150 active dynamic objects\r\n            allowCommandsBufferResize: true,\r\n            useWebWorker: false,\r\n            fixedStep: 1 / 30,\r\n            subSteps: 1,\r\n            useMotionStates: true,\r\n            debugColorStatic: pc.Color.GRAY,\r\n            debugColorKinematic: pc.Color.MAGENTA,\r\n            debugColorDynamic: pc.Color.YELLOW,\r\n            debugDrawLayerId: pc.LAYERID_IMMEDIATE,\r\n            debugDrawDepth: true,\r\n            ...opts\r\n        };\r\n\r\n        // Make sure requested features are supported\r\n        config.useSharedArrayBuffer = config.useSharedArrayBuffer && typeof SharedArrayBuffer !== 'undefined';\r\n        config.useWebWorker = config.useWebWorker && typeof Worker !== 'undefined';\r\n        config.useSAB = config.useWebWorker && config.useSharedArrayBuffer;\r\n\r\n        this._createDispatcher(config);\r\n\r\n        this._systems = new Map();\r\n        this._backend = null\r\n\r\n        const wasmAsset = app.assets.find('jolt-physics.wasm.wasm');\r\n        const glueAsset = app.assets.find('jolt-physics.wasm.js');\r\n\r\n        const msg = Object.create(null);\r\n        msg.type = 'create-backend';\r\n        msg.glueUrl = glueAsset.getFileUrl();\r\n        msg.wasmUrl = wasmAsset.getFileUrl();\r\n        msg.backendName = backendName;\r\n        msg.config = config;\r\n        this.sendUncompressed(msg);\r\n\r\n        this._outBuffer = new _backends_jolt_commands_buffer_mjs__WEBPACK_IMPORTED_MODULE_1__.CommandsBuffer(config);\r\n        this._outBuffers = [];\r\n        this._inBuffer = null;\r\n        this._updateEvent = null;\r\n        this._paused = false;\r\n        this._steps = 0;\r\n        this._fixedStep = config.fixedStep;\r\n        this._stepMessage = {\r\n            type: 'step', buffer: null, inBuffer: null, origin: 'physics-manager'\r\n        };\r\n\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.dev) {\r\n            this._perfCache = new _indexed_cache_mjs__WEBPACK_IMPORTED_MODULE_4__.IndexedCache();\r\n        }\r\n\r\n        this._frame = app.stats.frame;\r\n\r\n        this.version = _package_json__WEBPACK_IMPORTED_MODULE_0__.version;\r\n\r\n        this._config = config;\r\n        this._app = app;\r\n    }\r\n\r\n    set backend(instance) {\r\n        this._backend = instance;\r\n    }\r\n    get backend() {\r\n        return this._backend;\r\n    }\r\n\r\n    get systems() {\r\n        return this._systems;\r\n    }\r\n\r\n    set paused(bool) {\r\n        this._paused = bool;\r\n    }\r\n    get paused() {\r\n        return this._paused;\r\n    }\r\n\r\n    get commandsBuffer() {\r\n        return this._outBuffer;\r\n    }\r\n\r\n    get config() {\r\n        return this._config;\r\n    }\r\n\r\n    get steps() {\r\n        return this._steps;\r\n    }\r\n\r\n    get fixedStep() {\r\n        return this._fixedStep;\r\n    }\r\n\r\n    onUpdate() {\r\n        if (this._paused) return;\r\n\r\n        let index;\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.dev) {\r\n            const startTime = performance.now();\r\n            index = this._perfCache.add(startTime);\r\n        }\r\n        \r\n        // If the buffer has been sent to the web worker,\r\n        // it might not yet be available this frame, so we exit early.\r\n        if (this._outBuffer.buffer.byteLength === 0) {\r\n            return;\r\n        }\r\n\r\n        this._writeIsometry();\r\n        this._dispatchCommands(this._frame.dt, index);\r\n    }\r\n\r\n    sendUncompressed(msg) {\r\n        msg.origin = 'physics-manager';\r\n        this._dispatcher.postMessage(msg);\r\n    }\r\n\r\n    onMessage(msg) {\r\n        if (this._paused || msg.origin !== 'physics-worker') return;\r\n\r\n        const systems = this._systems;\r\n        let inBuffer = this._inBuffer;\r\n\r\n        if (msg.buffer) {\r\n            if (!inBuffer) {\r\n                inBuffer = this._inBuffer = new _backends_jolt_commands_buffer_mjs__WEBPACK_IMPORTED_MODULE_1__.CommandsBuffer();\r\n            }\r\n\r\n            // Make sure to use the incoming buffer, as the old one could\r\n            // have been destroyed during resize.\r\n            inBuffer.buffer = msg.buffer;\r\n            if (msg.inBuffer) {\r\n                this._outBuffer.buffer = msg.inBuffer;\r\n            }\r\n\r\n            const count = inBuffer.commandsCount;\r\n            for (let i = 0; i < count; i++) {\r\n                const operator = inBuffer.readOperator();\r\n                if (_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.dev) {\r\n                    const ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.assert(!!systems.get(operator), `Invalid component system: ${ operator }`);\r\n                    if (!ok) {\r\n                        this._updateEvent.off();\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                systems.get(operator).processCommands(inBuffer);\r\n            }\r\n\r\n            inBuffer.reset();\r\n        }\r\n\r\n        this._steps = msg.steps ?? 0;\r\n\r\n        // TODO\r\n        // handle properly when we are in a module, e.g. engine only\r\n        const constants = msg.constants;\r\n        if (constants) {\r\n            for (let i = 0, end = constants.length; i < end; i += 2) {\r\n                const key = constants[i];\r\n                const value = constants[i + 1];\r\n\r\n                window.pc[key] = value;\r\n            }\r\n\r\n            this._updateEvent = this._app.systems.on('postUpdate', this.onUpdate, this);\r\n        }\r\n\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.dev) {\r\n            const perfIndex = msg.perfIndex;\r\n            if (perfIndex == null) return;\r\n\r\n            const cache = this._perfCache;\r\n            const startTime = cache.get(perfIndex);\r\n            const frame = this._app.stats.frame;\r\n            \r\n            cache.free(perfIndex);\r\n            frame.physicsTime = performance.now() - startTime + msg.time;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this._systems.forEach(system => {\r\n            system.destroy();\r\n        });\r\n        this._systems.clear();\r\n\r\n        const msg = Object.create(null);\r\n        msg.type = 'destroy';\r\n        this.sendUncompressed(msg);\r\n        this._backend = null;\r\n\r\n        this._commandsBuffer.destroy();\r\n        this._commandsBuffer = null;\r\n\r\n        this._dispatcher = null;\r\n        this._frame = null;\r\n\r\n        this._updateEvent?.off();\r\n        this._updateEvent = null;\r\n\r\n        this._app[this._config.propertyName] = null;\r\n    }\r\n\r\n    _writeIsometry() {\r\n        this._systems.forEach(system => {\r\n            system.requestIsometry?.();\r\n        })\r\n    }\r\n\r\n    _dispatchCommands(dt, perfIndex) {\r\n        const cb = this._outBuffer;\r\n        const inBuffer = this._inBuffer;\r\n        const msg = this._stepMessage;\r\n\r\n        msg.dt = dt;\r\n\r\n        if (!cb.dirty) {\r\n            msg.buffer = null;\r\n            if (inBuffer && inBuffer.buffer.byteLength > 0) {\r\n                const ib = inBuffer.buffer;\r\n                msg.inBuffer = ib;\r\n                this._dispatcher.postMessage(msg, [ ib ]);\r\n            } else {\r\n                msg.inBuffer = null;\r\n                this._dispatcher.postMessage(msg);\r\n            }\r\n            return;\r\n        }\r\n\r\n        const buffer = cb.buffer;\r\n        const buffers = this._outBuffers;\r\n\r\n        msg.buffer = buffer;\r\n        buffers.length = 0;\r\n\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_2__.Debug.dev) {\r\n            msg.perfIndex = perfIndex;\r\n        }\r\n\r\n        // Also add any potential mesh and convex hull shapes buffers\r\n        const meshBuffers = cb.meshBuffers;\r\n        if (meshBuffers.length > 0) {\r\n            msg.meshBuffers = meshBuffers;\r\n            buffers.push(...meshBuffers);\r\n        } else {\r\n            msg.meshBuffers = null;\r\n        }\r\n\r\n        if (this._config.useSAB) {\r\n            this._dispatcher.postMessage(msg);\r\n        } else {\r\n            buffers.push(buffer);\r\n            if (inBuffer) {\r\n                const ib = inBuffer.buffer;\r\n                msg.inBuffer = ib;\r\n                buffers.push(ib);\r\n            }\r\n            this._dispatcher.postMessage(msg, buffers);\r\n        }\r\n\r\n        cb.meshBuffers.length = 0;\r\n        cb.reset();\r\n    }\r\n\r\n    _createDispatcher(config) {\r\n        // TODO\r\n        // buffers detaching needs some work, before we can enable workers\r\n\r\n        // if (config.useWebWorker) {\r\n        //     this._dispatcher = new Worker(\r\n        //         /* webpackChunkName: \"worker\" */ new URL('./dispatcher.mjs', import.meta.url\r\n        //     ));\r\n        //     this._dispatcher.onmessage = this.onMessage.bind(this);\r\n        // } else {\r\n        //     this._dispatcher = new Dispatcher(this);\r\n        // }\r\n\r\n        this._dispatcher = new _dispatcher_mjs__WEBPACK_IMPORTED_MODULE_3__.Dispatcher(this);\r\n    }\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/physics/manager.mjs\n");

/***/ }),

/***/ "./src/physics/math.mjs":
/*!******************************!*\
  !*** ./src/physics/math.mjs ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extendJoltMath: () => (/* binding */ extendJoltMath),\n/* harmony export */   extendPCMath: () => (/* binding */ extendPCMath)\n/* harmony export */ });\n/* harmony import */ var _debug_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./debug.mjs */ \"./src/physics/debug.mjs\");\n/* harmony import */ var _components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/jolt/constants.mjs */ \"./src/physics/components/jolt/constants.mjs\");\n\r\n\r\n\r\nfunction extendPCMath() {\r\n    pc.Vec3.fromBuffer = function(buffer) {\r\n        return new pc.Vec3(\r\n            buffer.read(_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n            buffer.read(_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n            buffer.read(_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32)\r\n        );\r\n    };\r\n}\r\n\r\nfunction extendJoltMath(Jolt) {\r\n    Jolt.Vec3.prototype.FromBuffer = function(buffer, isPositive) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            const x = buffer.read(_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32);\r\n            const y = buffer.read(_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32);\r\n            const z = buffer.read(_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32);\r\n\r\n            const test = isPositive ? _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloatPositive : _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat;\r\n\r\n            let ok = test(x, `invalid vector X component: ${ x }`);\r\n            ok = ok && test(y, `invalid vector Y component: ${ y }`);\r\n            ok = ok && test(z, `invalid vector Z component: ${ z }`);\r\n            if (!ok) return this;\r\n\r\n            this.Set(x, y, z);\r\n        } else {\r\n            this.Set(\r\n                buffer.read(_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n                buffer.read(_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n                buffer.read(_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32)\r\n            );\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    Jolt.Vec3.prototype.set = function(x, y, z) {\r\n        this.Set(x, y, z);\r\n        return this;\r\n    };\r\n\r\n    Jolt.Vec3.prototype.print = function() {\r\n        console.log(this.GetX(), this.GetY(), this.GetZ());\r\n    };\r\n\r\n    Jolt.Quat.prototype.FromBuffer = function(buffer) {\r\n        if (_debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.dev) {\r\n            const x = buffer.read(_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32);\r\n            const y = buffer.read(_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32);\r\n            const z = buffer.read(_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32);\r\n            const w = buffer.read(_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32);\r\n\r\n            let ok = _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(x, `invalid quaternion X component: ${ x }`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(y, `invalid quaternion Y component: ${ y }`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(z, `invalid quaternion Z component: ${ z }`);\r\n            ok = ok && _debug_mjs__WEBPACK_IMPORTED_MODULE_0__.Debug.checkFloat(w, `invalid quaternion W component: ${ w }`);\r\n            if (!ok) return this;\r\n\r\n            this.Set(x, y, z, w);\r\n        } else {\r\n            this.Set(\r\n                buffer.read(_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n                buffer.read(_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n                buffer.read(_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32),\r\n                buffer.read(_components_jolt_constants_mjs__WEBPACK_IMPORTED_MODULE_1__.BUFFER_READ_FLOAT32)\r\n            );\r\n        }\r\n\r\n        return this;\r\n    };\r\n\r\n    Jolt.Quat.prototype.set = function(x, y, z, w) {\r\n        this.Set(x, y, z, w);\r\n        return this;\r\n    };\r\n\r\n    Jolt.Quat.prototype.print = function() {\r\n        console.log(this.GetX(), this.GetY(), this.GetZ(), this.GetW());\r\n    };\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGh5c2ljcy9tYXRoLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW9DO0FBQ2tDO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLCtFQUFtQjtBQUMzQyx3QkFBd0IsK0VBQW1CO0FBQzNDLHdCQUF3QiwrRUFBbUI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSw2Q0FBSztBQUNqQixrQ0FBa0MsK0VBQW1CO0FBQ3JELGtDQUFrQywrRUFBbUI7QUFDckQsa0NBQWtDLCtFQUFtQjtBQUNyRDtBQUNBLHNDQUFzQyw2Q0FBSyxzQkFBc0IsNkNBQUs7QUFDdEU7QUFDQSw2REFBNkQsR0FBRztBQUNoRSwrREFBK0QsR0FBRztBQUNsRSwrREFBK0QsR0FBRztBQUNsRTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSw0QkFBNEIsK0VBQW1CO0FBQy9DLDRCQUE0QiwrRUFBbUI7QUFDL0MsNEJBQTRCLCtFQUFtQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksNkNBQUs7QUFDakIsa0NBQWtDLCtFQUFtQjtBQUNyRCxrQ0FBa0MsK0VBQW1CO0FBQ3JELGtDQUFrQywrRUFBbUI7QUFDckQsa0NBQWtDLCtFQUFtQjtBQUNyRDtBQUNBLHFCQUFxQiw2Q0FBSyxtREFBbUQsR0FBRztBQUNoRix1QkFBdUIsNkNBQUssbURBQW1ELEdBQUc7QUFDbEYsdUJBQXVCLDZDQUFLLG1EQUFtRCxHQUFHO0FBQ2xGLHVCQUF1Qiw2Q0FBSyxtREFBbUQsR0FBRztBQUNsRjtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSw0QkFBNEIsK0VBQW1CO0FBQy9DLDRCQUE0QiwrRUFBbUI7QUFDL0MsNEJBQTRCLCtFQUFtQjtBQUMvQyw0QkFBNEIsK0VBQW1CO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUGh5c2ljc0NvbXBvbmVudHMvLi9zcmMvcGh5c2ljcy9tYXRoLm1qcz84NGJmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERlYnVnIH0gZnJvbSBcIi4vZGVidWcubWpzXCI7XHJcbmltcG9ydCB7IEJVRkZFUl9SRUFEX0ZMT0FUMzIgfSBmcm9tIFwiLi9jb21wb25lbnRzL2pvbHQvY29uc3RhbnRzLm1qc1wiO1xyXG5cclxuZnVuY3Rpb24gZXh0ZW5kUENNYXRoKCkge1xyXG4gICAgcGMuVmVjMy5mcm9tQnVmZmVyID0gZnVuY3Rpb24oYnVmZmVyKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBwYy5WZWMzKFxyXG4gICAgICAgICAgICBidWZmZXIucmVhZChCVUZGRVJfUkVBRF9GTE9BVDMyKSxcclxuICAgICAgICAgICAgYnVmZmVyLnJlYWQoQlVGRkVSX1JFQURfRkxPQVQzMiksXHJcbiAgICAgICAgICAgIGJ1ZmZlci5yZWFkKEJVRkZFUl9SRUFEX0ZMT0FUMzIpXHJcbiAgICAgICAgKTtcclxuICAgIH07XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGV4dGVuZEpvbHRNYXRoKEpvbHQpIHtcclxuICAgIEpvbHQuVmVjMy5wcm90b3R5cGUuRnJvbUJ1ZmZlciA9IGZ1bmN0aW9uKGJ1ZmZlciwgaXNQb3NpdGl2ZSkge1xyXG4gICAgICAgIGlmIChEZWJ1Zy5kZXYpIHtcclxuICAgICAgICAgICAgY29uc3QgeCA9IGJ1ZmZlci5yZWFkKEJVRkZFUl9SRUFEX0ZMT0FUMzIpO1xyXG4gICAgICAgICAgICBjb25zdCB5ID0gYnVmZmVyLnJlYWQoQlVGRkVSX1JFQURfRkxPQVQzMik7XHJcbiAgICAgICAgICAgIGNvbnN0IHogPSBidWZmZXIucmVhZChCVUZGRVJfUkVBRF9GTE9BVDMyKTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IHRlc3QgPSBpc1Bvc2l0aXZlID8gRGVidWcuY2hlY2tGbG9hdFBvc2l0aXZlIDogRGVidWcuY2hlY2tGbG9hdDtcclxuXHJcbiAgICAgICAgICAgIGxldCBvayA9IHRlc3QoeCwgYGludmFsaWQgdmVjdG9yIFggY29tcG9uZW50OiAkeyB4IH1gKTtcclxuICAgICAgICAgICAgb2sgPSBvayAmJiB0ZXN0KHksIGBpbnZhbGlkIHZlY3RvciBZIGNvbXBvbmVudDogJHsgeSB9YCk7XHJcbiAgICAgICAgICAgIG9rID0gb2sgJiYgdGVzdCh6LCBgaW52YWxpZCB2ZWN0b3IgWiBjb21wb25lbnQ6ICR7IHogfWApO1xyXG4gICAgICAgICAgICBpZiAoIW9rKSByZXR1cm4gdGhpcztcclxuXHJcbiAgICAgICAgICAgIHRoaXMuU2V0KHgsIHksIHopO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuU2V0KFxyXG4gICAgICAgICAgICAgICAgYnVmZmVyLnJlYWQoQlVGRkVSX1JFQURfRkxPQVQzMiksXHJcbiAgICAgICAgICAgICAgICBidWZmZXIucmVhZChCVUZGRVJfUkVBRF9GTE9BVDMyKSxcclxuICAgICAgICAgICAgICAgIGJ1ZmZlci5yZWFkKEJVRkZFUl9SRUFEX0ZMT0FUMzIpXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH07XHJcblxyXG4gICAgSm9sdC5WZWMzLnByb3RvdHlwZS5zZXQgPSBmdW5jdGlvbih4LCB5LCB6KSB7XHJcbiAgICAgICAgdGhpcy5TZXQoeCwgeSwgeik7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9O1xyXG5cclxuICAgIEpvbHQuVmVjMy5wcm90b3R5cGUucHJpbnQgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLkdldFgoKSwgdGhpcy5HZXRZKCksIHRoaXMuR2V0WigpKTtcclxuICAgIH07XHJcblxyXG4gICAgSm9sdC5RdWF0LnByb3RvdHlwZS5Gcm9tQnVmZmVyID0gZnVuY3Rpb24oYnVmZmVyKSB7XHJcbiAgICAgICAgaWYgKERlYnVnLmRldikge1xyXG4gICAgICAgICAgICBjb25zdCB4ID0gYnVmZmVyLnJlYWQoQlVGRkVSX1JFQURfRkxPQVQzMik7XHJcbiAgICAgICAgICAgIGNvbnN0IHkgPSBidWZmZXIucmVhZChCVUZGRVJfUkVBRF9GTE9BVDMyKTtcclxuICAgICAgICAgICAgY29uc3QgeiA9IGJ1ZmZlci5yZWFkKEJVRkZFUl9SRUFEX0ZMT0FUMzIpO1xyXG4gICAgICAgICAgICBjb25zdCB3ID0gYnVmZmVyLnJlYWQoQlVGRkVSX1JFQURfRkxPQVQzMik7XHJcblxyXG4gICAgICAgICAgICBsZXQgb2sgPSBEZWJ1Zy5jaGVja0Zsb2F0KHgsIGBpbnZhbGlkIHF1YXRlcm5pb24gWCBjb21wb25lbnQ6ICR7IHggfWApO1xyXG4gICAgICAgICAgICBvayA9IG9rICYmIERlYnVnLmNoZWNrRmxvYXQoeSwgYGludmFsaWQgcXVhdGVybmlvbiBZIGNvbXBvbmVudDogJHsgeSB9YCk7XHJcbiAgICAgICAgICAgIG9rID0gb2sgJiYgRGVidWcuY2hlY2tGbG9hdCh6LCBgaW52YWxpZCBxdWF0ZXJuaW9uIFogY29tcG9uZW50OiAkeyB6IH1gKTtcclxuICAgICAgICAgICAgb2sgPSBvayAmJiBEZWJ1Zy5jaGVja0Zsb2F0KHcsIGBpbnZhbGlkIHF1YXRlcm5pb24gVyBjb21wb25lbnQ6ICR7IHcgfWApO1xyXG4gICAgICAgICAgICBpZiAoIW9rKSByZXR1cm4gdGhpcztcclxuXHJcbiAgICAgICAgICAgIHRoaXMuU2V0KHgsIHksIHosIHcpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuU2V0KFxyXG4gICAgICAgICAgICAgICAgYnVmZmVyLnJlYWQoQlVGRkVSX1JFQURfRkxPQVQzMiksXHJcbiAgICAgICAgICAgICAgICBidWZmZXIucmVhZChCVUZGRVJfUkVBRF9GTE9BVDMyKSxcclxuICAgICAgICAgICAgICAgIGJ1ZmZlci5yZWFkKEJVRkZFUl9SRUFEX0ZMT0FUMzIpLFxyXG4gICAgICAgICAgICAgICAgYnVmZmVyLnJlYWQoQlVGRkVSX1JFQURfRkxPQVQzMilcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgfTtcclxuXHJcbiAgICBKb2x0LlF1YXQucHJvdG90eXBlLnNldCA9IGZ1bmN0aW9uKHgsIHksIHosIHcpIHtcclxuICAgICAgICB0aGlzLlNldCh4LCB5LCB6LCB3KTtcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH07XHJcblxyXG4gICAgSm9sdC5RdWF0LnByb3RvdHlwZS5wcmludCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuR2V0WCgpLCB0aGlzLkdldFkoKSwgdGhpcy5HZXRaKCksIHRoaXMuR2V0VygpKTtcclxuICAgIH07XHJcbn1cclxuXHJcbmV4cG9ydCB7IGV4dGVuZEpvbHRNYXRoLCBleHRlbmRQQ01hdGggfTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/physics/math.mjs\n");

/***/ }),

/***/ "./src/physics/util.mjs":
/*!******************************!*\
  !*** ./src/physics/util.mjs ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildAccessors: () => (/* binding */ buildAccessors)\n/* harmony export */ });\nfunction buildAccessors(obj, schema) {\r\n    // Create getter/setter pairs for each property defined in the schema\r\n    for (let i = 0, end = schema.length; i < end; i++) {\r\n        const property = schema[i];\r\n\r\n        // Don't override existing getters/setters\r\n        const etter = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(obj), property);\r\n        if (etter != null) continue;\r\n\r\n        Object.defineProperty(obj, property, {\r\n            get: function () {\r\n                return this[`_${ property }`];\r\n            },\r\n            set: function (value) {\r\n                const oldValue = this[`_${ property }`];\r\n                this[`_${ property }`] = value;\r\n                this.fire('set', property, oldValue, value);\r\n            },\r\n            configurable: true\r\n        });\r\n    }\r\n\r\n    obj._accessorsBuilt = true;\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGh5c2ljcy91dGlsLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBLHlDQUF5QyxTQUFTO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsVUFBVTtBQUMzQyxhQUFhO0FBQ2I7QUFDQSwyQ0FBMkMsVUFBVTtBQUNyRCwwQkFBMEIsVUFBVTtBQUNwQztBQUNBLGFBQWE7QUFDYjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vUGh5c2ljc0NvbXBvbmVudHMvLi9zcmMvcGh5c2ljcy91dGlsLm1qcz9lYzY5Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGJ1aWxkQWNjZXNzb3JzKG9iaiwgc2NoZW1hKSB7XHJcbiAgICAvLyBDcmVhdGUgZ2V0dGVyL3NldHRlciBwYWlycyBmb3IgZWFjaCBwcm9wZXJ0eSBkZWZpbmVkIGluIHRoZSBzY2hlbWFcclxuICAgIGZvciAobGV0IGkgPSAwLCBlbmQgPSBzY2hlbWEubGVuZ3RoOyBpIDwgZW5kOyBpKyspIHtcclxuICAgICAgICBjb25zdCBwcm9wZXJ0eSA9IHNjaGVtYVtpXTtcclxuXHJcbiAgICAgICAgLy8gRG9uJ3Qgb3ZlcnJpZGUgZXhpc3RpbmcgZ2V0dGVycy9zZXR0ZXJzXHJcbiAgICAgICAgY29uc3QgZXR0ZXIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE9iamVjdC5nZXRQcm90b3R5cGVPZihvYmopLCBwcm9wZXJ0eSk7XHJcbiAgICAgICAgaWYgKGV0dGVyICE9IG51bGwpIGNvbnRpbnVlO1xyXG5cclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBwcm9wZXJ0eSwge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzW2BfJHsgcHJvcGVydHkgfWBdO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgY29uc3Qgb2xkVmFsdWUgPSB0aGlzW2BfJHsgcHJvcGVydHkgfWBdO1xyXG4gICAgICAgICAgICAgICAgdGhpc1tgXyR7IHByb3BlcnR5IH1gXSA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5maXJlKCdzZXQnLCBwcm9wZXJ0eSwgb2xkVmFsdWUsIHZhbHVlKTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgb2JqLl9hY2Nlc3NvcnNCdWlsdCA9IHRydWU7XHJcbn1cclxuXHJcbmV4cG9ydCB7IGJ1aWxkQWNjZXNzb3JzIH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/physics/util.mjs\n");

/***/ }),

/***/ "./node_modules/jolt-physics/package.json":
/*!************************************************!*\
  !*** ./node_modules/jolt-physics/package.json ***!
  \************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"name":"jolt-physics","version":"0.17.0","description":"A WebAssembly port of JoltPhysics, a rigid body physics and collision detection library, suitable for games and VR applications","type":"module","main":"dist/jolt-physics.wasm-compat.js","types":"dist/jolt-physics.wasm-compat.d.ts","exports":{".":{"types":"./dist/jolt-physics.wasm-compat.d.ts","default":"./dist/jolt-physics.wasm-compat.js"},"./wasm":{"types":"./dist/jolt-physics.wasm.d.ts","default":"./dist/jolt-physics.wasm.js"},"./wasm-compat":{"types":"./dist/jolt-physics.wasm-compat.d.ts","default":"./dist/jolt-physics.wasm-compat.js"},"./asm":{"types":"./dist/jolt-physics.d.ts","default":"./dist/jolt-physics.js"},"./jolt-physics.wasm.wasm":"./dist/jolt-physics.wasm.wasm","./package.json":"./package.json"},"scripts":{"build":"sh build.sh","examples":"http-server ./Examples"},"homepage":"https://github.com/jrouwe/JoltPhysics.js","repository":"https://github.com/jrouwe/JoltPhysics.js.git","author":"jrouwe","license":"MIT","files":["README.md","LICENSE","./dist/jolt-physics.js","./dist/jolt-physics.d.ts","./dist/jolt-physics.wasm-compat.js","./dist/jolt-physics.wasm-compat.d.ts","./dist/jolt-physics.wasm.js","./dist/jolt-physics.wasm.d.ts","./dist/jolt-physics.wasm.wasm","./dist/types.d.ts","asm","wasm","wasm-compat"],"keywords":["physics","physics-engine","physics-simulation","simulation","game-engine","vr","game-development","webassembly","wasm"],"devDependencies":{"http-server":"^14.1.1","webidl-dts-gen":"^1.8.0"}}');

/***/ }),

/***/ "./package.json":
/*!**********************!*\
  !*** ./package.json ***!
  \**********************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"name":"jolt","version":"0.1.0","main":"index.js","license":"MIT","type":"module","scripts":{"build":"rimraf dist && webpack --mode=production && webpack --mode=development","build:dev":"rimraf dist && webpack --mode=development","build:prod":"rimraf dist && webpack --mode=production"},"dependencies":{"playcanvas":"^1.66.1","jolt-physics":"^0.17.0"},"devDependencies":{"rimraf":"^5.0.5","webpack":"^5.89.0","webpack-cli":"^5.1.4"}}');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return undefined;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.mjs");
/******/ 	__webpack_exports__ = __webpack_exports__["default"];
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});